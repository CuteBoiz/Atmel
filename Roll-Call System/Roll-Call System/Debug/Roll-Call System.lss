
Roll-Call System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e6e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000228  00800060  00000e6e  00000f02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000023  00800288  00800288  0000112a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000112a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000115c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00001198  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000208b  00000000  00000000  000012c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bf6  00000000  00000000  0000334b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000eaa  00000000  00000000  00003f41  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00004dec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000870  00000000  00000000  00005114  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000126d  00000000  00000000  00005984  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00006bf1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	85 c0       	rjmp	.+266    	; 0x10c <__ctors_end>
   2:	37 c6       	rjmp	.+3182   	; 0xc72 <__vector_1>
   4:	a8 c0       	rjmp	.+336    	; 0x156 <__bad_interrupt>
   6:	a7 c0       	rjmp	.+334    	; 0x156 <__bad_interrupt>
   8:	a6 c0       	rjmp	.+332    	; 0x156 <__bad_interrupt>
   a:	a5 c0       	rjmp	.+330    	; 0x156 <__bad_interrupt>
   c:	a4 c0       	rjmp	.+328    	; 0x156 <__bad_interrupt>
   e:	a3 c0       	rjmp	.+326    	; 0x156 <__bad_interrupt>
  10:	a2 c0       	rjmp	.+324    	; 0x156 <__bad_interrupt>
  12:	a1 c0       	rjmp	.+322    	; 0x156 <__bad_interrupt>
  14:	a0 c0       	rjmp	.+320    	; 0x156 <__bad_interrupt>
  16:	9f c0       	rjmp	.+318    	; 0x156 <__bad_interrupt>
  18:	9e c0       	rjmp	.+316    	; 0x156 <__bad_interrupt>
  1a:	9d c0       	rjmp	.+314    	; 0x156 <__bad_interrupt>
  1c:	9c c0       	rjmp	.+312    	; 0x156 <__bad_interrupt>
  1e:	9b c0       	rjmp	.+310    	; 0x156 <__bad_interrupt>
  20:	9a c0       	rjmp	.+308    	; 0x156 <__bad_interrupt>
  22:	99 c0       	rjmp	.+306    	; 0x156 <__bad_interrupt>
  24:	98 c0       	rjmp	.+304    	; 0x156 <__bad_interrupt>
  26:	c8 c5       	rjmp	.+2960   	; 0xbb8 <_ZN3PS27getCharEv+0x2fa>
  28:	c4 c4       	rjmp	.+2440   	; 0x9b2 <_ZN3PS27getCharEv+0xf4>
  2a:	a4 c5       	rjmp	.+2888   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  2c:	a3 c5       	rjmp	.+2886   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  2e:	a2 c5       	rjmp	.+2884   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  30:	a1 c5       	rjmp	.+2882   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  32:	a0 c5       	rjmp	.+2880   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  34:	9f c5       	rjmp	.+2878   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  36:	6e c4       	rjmp	.+2268   	; 0x914 <_ZN3PS27getCharEv+0x56>
  38:	87 c4       	rjmp	.+2318   	; 0x948 <_ZN3PS27getCharEv+0x8a>
  3a:	9c c5       	rjmp	.+2872   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  3c:	9b c5       	rjmp	.+2870   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  3e:	9a c5       	rjmp	.+2868   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  40:	7b c4       	rjmp	.+2294   	; 0x938 <_ZN3PS27getCharEv+0x7a>
  42:	6c c4       	rjmp	.+2264   	; 0x91c <_ZN3PS27getCharEv+0x5e>
  44:	a2 c5       	rjmp	.+2884   	; 0xb8a <_ZN3PS27getCharEv+0x2cc>
  46:	72 c4       	rjmp	.+2276   	; 0x92c <_ZN3PS27getCharEv+0x6e>
  48:	85 c4       	rjmp	.+2314   	; 0x954 <_ZN3PS27getCharEv+0x96>
  4a:	94 c5       	rjmp	.+2856   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  4c:	93 c5       	rjmp	.+2854   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  4e:	48 c4       	rjmp	.+2192   	; 0x8e0 <_ZN3PS27getCharEv+0x22>
  50:	6f c4       	rjmp	.+2270   	; 0x930 <_ZN3PS27getCharEv+0x72>
  52:	b0 c5       	rjmp	.+2912   	; 0xbb4 <_ZN3PS27getCharEv+0x2f6>
  54:	47 c4       	rjmp	.+2190   	; 0x8e4 <_ZN3PS27getCharEv+0x26>
  56:	8a c4       	rjmp	.+2324   	; 0x96c <_ZN3PS27getCharEv+0xae>
  58:	83 c4       	rjmp	.+2310   	; 0x960 <_ZN3PS27getCharEv+0xa2>
  5a:	8c c5       	rjmp	.+2840   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  5c:	8b c5       	rjmp	.+2838   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  5e:	ae c5       	rjmp	.+2908   	; 0xbbc <_ZN3PS27getCharEv+0x2fe>
  60:	63 c4       	rjmp	.+2246   	; 0x928 <_ZN3PS27getCharEv+0x6a>
  62:	42 c4       	rjmp	.+2180   	; 0x8e8 <_ZN3PS27getCharEv+0x2a>
  64:	5d c4       	rjmp	.+2234   	; 0x920 <_ZN3PS27getCharEv+0x62>
  66:	58 c4       	rjmp	.+2224   	; 0x918 <_ZN3PS27getCharEv+0x5a>
  68:	87 c4       	rjmp	.+2318   	; 0x978 <_ZN3PS27getCharEv+0xba>
  6a:	84 c5       	rjmp	.+2824   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  6c:	83 c5       	rjmp	.+2822   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  6e:	4c c4       	rjmp	.+2200   	; 0x908 <_ZN3PS27getCharEv+0x4a>
  70:	9f c5       	rjmp	.+2878   	; 0xbb0 <_ZN3PS27getCharEv+0x2f2>
  72:	3e c4       	rjmp	.+2172   	; 0x8f0 <_ZN3PS27getCharEv+0x32>
  74:	3b c4       	rjmp	.+2166   	; 0x8ec <_ZN3PS27getCharEv+0x2e>
  76:	5e c4       	rjmp	.+2236   	; 0x934 <_ZN3PS27getCharEv+0x76>
  78:	85 c4       	rjmp	.+2314   	; 0x984 <_ZN3PS27getCharEv+0xc6>
  7a:	7c c5       	rjmp	.+2808   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  7c:	7b c5       	rjmp	.+2806   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  7e:	7a c5       	rjmp	.+2804   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  80:	41 c4       	rjmp	.+2178   	; 0x904 <_ZN3PS27getCharEv+0x46>
  82:	3a c4       	rjmp	.+2164   	; 0x8f8 <_ZN3PS27getCharEv+0x3a>
  84:	4f c4       	rjmp	.+2206   	; 0x924 <_ZN3PS27getCharEv+0x66>
  86:	83 c4       	rjmp	.+2310   	; 0x98e <_ZN3PS27getCharEv+0xd0>
  88:	88 c4       	rjmp	.+2320   	; 0x99a <_ZN3PS27getCharEv+0xdc>
  8a:	74 c5       	rjmp	.+2792   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  8c:	73 c5       	rjmp	.+2790   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  8e:	c1 c4       	rjmp	.+2434   	; 0xa12 <_ZN3PS27getCharEv+0x154>
  90:	35 c4       	rjmp	.+2154   	; 0x8fc <_ZN3PS27getCharEv+0x3e>
  92:	30 c4       	rjmp	.+2144   	; 0x8f4 <_ZN3PS27getCharEv+0x36>
  94:	3b c4       	rjmp	.+2166   	; 0x90c <_ZN3PS27getCharEv+0x4e>
  96:	52 c4       	rjmp	.+2212   	; 0x93c <_ZN3PS27getCharEv+0x7e>
  98:	86 c4       	rjmp	.+2316   	; 0x9a6 <_ZN3PS27getCharEv+0xe8>
  9a:	6c c5       	rjmp	.+2776   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  9c:	6b c5       	rjmp	.+2774   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  9e:	bf c4       	rjmp	.+2430   	; 0xa1e <_ZN3PS27getCharEv+0x160>
  a0:	c4 c4       	rjmp	.+2440   	; 0xa2a <_ZN3PS27getCharEv+0x16c>
  a2:	2e c4       	rjmp	.+2140   	; 0x900 <_ZN3PS27getCharEv+0x42>
  a4:	aa c4       	rjmp	.+2388   	; 0x9fa <_ZN3PS27getCharEv+0x13c>
  a6:	34 c4       	rjmp	.+2152   	; 0x910 <_ZN3PS27getCharEv+0x52>
  a8:	8a c4       	rjmp	.+2324   	; 0x9be <_ZN3PS27getCharEv+0x100>
  aa:	64 c5       	rjmp	.+2760   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  ac:	63 c5       	rjmp	.+2758   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  ae:	62 c5       	rjmp	.+2756   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  b0:	aa c4       	rjmp	.+2388   	; 0xa06 <_ZN3PS27getCharEv+0x148>
  b2:	60 c5       	rjmp	.+2752   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  b4:	96 c4       	rjmp	.+2348   	; 0x9e2 <_ZN3PS27getCharEv+0x124>
  b6:	89 c4       	rjmp	.+2322   	; 0x9ca <_ZN3PS27getCharEv+0x10c>
  b8:	5d c5       	rjmp	.+2746   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  ba:	5c c5       	rjmp	.+2744   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  bc:	be c4       	rjmp	.+2428   	; 0xa3a <_ZN3PS27getCharEv+0x17c>
  be:	5a c5       	rjmp	.+2740   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  c0:	0d c4       	rjmp	.+2074   	; 0x8dc <_ZN3PS27getCharEv+0x1e>
  c2:	95 c4       	rjmp	.+2346   	; 0x9ee <_ZN3PS27getCharEv+0x130>
  c4:	57 c5       	rjmp	.+2734   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  c6:	87 c4       	rjmp	.+2318   	; 0x9d6 <_ZN3PS27getCharEv+0x118>
  c8:	55 c5       	rjmp	.+2730   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  ca:	54 c5       	rjmp	.+2728   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  cc:	53 c5       	rjmp	.+2726   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  ce:	52 c5       	rjmp	.+2724   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  d0:	51 c5       	rjmp	.+2722   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  d2:	50 c5       	rjmp	.+2720   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  d4:	4f c5       	rjmp	.+2718   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  d6:	4e c5       	rjmp	.+2716   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  d8:	ae c4       	rjmp	.+2396   	; 0xa36 <_ZN3PS27getCharEv+0x178>
  da:	4c c5       	rjmp	.+2712   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  dc:	4b c5       	rjmp	.+2710   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  de:	f4 c4       	rjmp	.+2536   	; 0xac8 <_ZN3PS27getCharEv+0x20a>
  e0:	49 c5       	rjmp	.+2706   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  e2:	10 c5       	rjmp	.+2592   	; 0xb04 <_ZN3PS27getCharEv+0x246>
  e4:	29 c5       	rjmp	.+2642   	; 0xb38 <_ZN3PS27getCharEv+0x27a>
  e6:	46 c5       	rjmp	.+2700   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  e8:	45 c5       	rjmp	.+2698   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  ea:	44 c5       	rjmp	.+2696   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  ec:	e3 c4       	rjmp	.+2502   	; 0xab4 <_ZN3PS27getCharEv+0x1f6>
  ee:	d8 c4       	rjmp	.+2480   	; 0xaa0 <_ZN3PS27getCharEv+0x1e2>
  f0:	f5 c4       	rjmp	.+2538   	; 0xadc <_ZN3PS27getCharEv+0x21e>
  f2:	12 c5       	rjmp	.+2596   	; 0xb18 <_ZN3PS27getCharEv+0x25a>
  f4:	17 c5       	rjmp	.+2606   	; 0xb24 <_ZN3PS27getCharEv+0x266>
  f6:	2a c5       	rjmp	.+2644   	; 0xb4c <_ZN3PS27getCharEv+0x28e>
  f8:	3d c5       	rjmp	.+2682   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  fa:	ae c4       	rjmp	.+2396   	; 0xa58 <_ZN3PS27getCharEv+0x19a>
  fc:	3b c5       	rjmp	.+2678   	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
  fe:	ce c4       	rjmp	.+2460   	; 0xa9c <_ZN3PS27getCharEv+0x1de>
 100:	f7 c4       	rjmp	.+2542   	; 0xaf0 <_ZN3PS27getCharEv+0x232>
 102:	ca c4       	rjmp	.+2452   	; 0xa98 <_ZN3PS27getCharEv+0x1da>
 104:	c7 c4       	rjmp	.+2446   	; 0xa94 <_ZN3PS27getCharEv+0x1d6>
 106:	2c c5       	rjmp	.+2648   	; 0xb60 <_ZN3PS27getCharEv+0x2a2>
 108:	b6 c4       	rjmp	.+2412   	; 0xa76 <_ZN3PS27getCharEv+0x1b8>

0000010a <__ctors_start>:
 10a:	f3 00       	.word	0x00f3	; ????

0000010c <__ctors_end>:
 10c:	11 24       	eor	r1, r1
 10e:	1f be       	out	0x3f, r1	; 63
 110:	cf e5       	ldi	r28, 0x5F	; 95
 112:	d4 e0       	ldi	r29, 0x04	; 4
 114:	de bf       	out	0x3e, r29	; 62
 116:	cd bf       	out	0x3d, r28	; 61

00000118 <__do_copy_data>:
 118:	12 e0       	ldi	r17, 0x02	; 2
 11a:	a0 e6       	ldi	r26, 0x60	; 96
 11c:	b0 e0       	ldi	r27, 0x00	; 0
 11e:	ee e6       	ldi	r30, 0x6E	; 110
 120:	fe e0       	ldi	r31, 0x0E	; 14
 122:	02 c0       	rjmp	.+4      	; 0x128 <__do_copy_data+0x10>
 124:	05 90       	lpm	r0, Z+
 126:	0d 92       	st	X+, r0
 128:	a8 38       	cpi	r26, 0x88	; 136
 12a:	b1 07       	cpc	r27, r17
 12c:	d9 f7       	brne	.-10     	; 0x124 <__do_copy_data+0xc>

0000012e <__do_clear_bss>:
 12e:	22 e0       	ldi	r18, 0x02	; 2
 130:	a8 e8       	ldi	r26, 0x88	; 136
 132:	b2 e0       	ldi	r27, 0x02	; 2
 134:	01 c0       	rjmp	.+2      	; 0x138 <.do_clear_bss_start>

00000136 <.do_clear_bss_loop>:
 136:	1d 92       	st	X+, r1

00000138 <.do_clear_bss_start>:
 138:	ab 3a       	cpi	r26, 0xAB	; 171
 13a:	b2 07       	cpc	r27, r18
 13c:	e1 f7       	brne	.-8      	; 0x136 <.do_clear_bss_loop>

0000013e <__do_global_ctors>:
 13e:	10 e0       	ldi	r17, 0x00	; 0
 140:	c6 e8       	ldi	r28, 0x86	; 134
 142:	d0 e0       	ldi	r29, 0x00	; 0
 144:	03 c0       	rjmp	.+6      	; 0x14c <__do_global_ctors+0xe>
 146:	21 97       	sbiw	r28, 0x01	; 1
 148:	fe 01       	movw	r30, r28
 14a:	89 d6       	rcall	.+3346   	; 0xe5e <__tablejump2__>
 14c:	c5 38       	cpi	r28, 0x85	; 133
 14e:	d1 07       	cpc	r29, r17
 150:	d1 f7       	brne	.-12     	; 0x146 <__do_global_ctors+0x8>
 152:	1c d0       	rcall	.+56     	; 0x18c <main>
 154:	8a c6       	rjmp	.+3348   	; 0xe6a <_exit>

00000156 <__bad_interrupt>:
 156:	54 cf       	rjmp	.-344    	; 0x0 <__vectors>

00000158 <_Z10USART_Initv>:
		}
    }
}

void USART_Init(){
	UBRRH = 0;
 158:	10 bc       	out	0x20, r1	; 32
	UBRRL = 51;
 15a:	83 e3       	ldi	r24, 0x33	; 51
 15c:	89 b9       	out	0x09, r24	; 9
	UCSRC |= (1<<URSEL)|(3<<UCSZ0);
 15e:	80 b5       	in	r24, 0x20	; 32
 160:	86 68       	ori	r24, 0x86	; 134
 162:	80 bd       	out	0x20, r24	; 32
	UCSRB |= (1<<TXEN);
 164:	53 9a       	sbi	0x0a, 3	; 10
 166:	08 95       	ret

00000168 <_Z14USART_Transmitc>:
}
	
void USART_Transmit(char data){
	while(!(UCSRA & (1<<UDRE)));
 168:	5d 9b       	sbis	0x0b, 5	; 11
 16a:	fe cf       	rjmp	.-4      	; 0x168 <_Z14USART_Transmitc>
	UDR = data;
 16c:	8c b9       	out	0x0c, r24	; 12
 16e:	08 95       	ret

00000170 <_Z16USART_SendStringPc>:
}

void USART_SendString(char *data){
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
 174:	ec 01       	movw	r28, r24
	register int i = 0;
	while(data[i]){
 176:	88 81       	ld	r24, Y
 178:	88 23       	and	r24, r24
 17a:	29 f0       	breq	.+10     	; 0x186 <_Z16USART_SendStringPc+0x16>
 17c:	21 96       	adiw	r28, 0x01	; 1
		USART_Transmit(data[i]);
 17e:	f4 df       	rcall	.-24     	; 0x168 <_Z14USART_Transmitc>
	UDR = data;
}

void USART_SendString(char *data){
	register int i = 0;
	while(data[i]){
 180:	89 91       	ld	r24, Y+
 182:	81 11       	cpse	r24, r1
 184:	fc cf       	rjmp	.-8      	; 0x17e <_Z16USART_SendStringPc+0xe>
		USART_Transmit(data[i]);
		i++;
	}
}
 186:	df 91       	pop	r29
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <main>:
PS2 kb;

int main(void)
{
	
	USART_Init();
 18c:	e5 df       	rcall	.-54     	; 0x158 <_Z10USART_Initv>
	USART_SendString("Begin!\n");
 18e:	84 e6       	ldi	r24, 0x64	; 100
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	ee df       	rcall	.-36     	; 0x170 <_Z16USART_SendStringPc>
	
	kb.begin();
 194:	88 e8       	ldi	r24, 0x88	; 136
 196:	92 e0       	ldi	r25, 0x02	; 2
 198:	55 d3       	rcall	.+1706   	; 0x844 <_ZN3PS25beginEv>
	sei();
 19a:	78 94       	sei
	
    lcd.begin();
 19c:	89 e8       	ldi	r24, 0x89	; 137
 19e:	92 e0       	ldi	r25, 0x02	; 2
 1a0:	72 d1       	rcall	.+740    	; 0x486 <_ZN7PCD85445beginEv>
	lcd.createMenu("My System:", mySystem, 2);	
 1a2:	22 e0       	ldi	r18, 0x02	; 2
 1a4:	30 e0       	ldi	r19, 0x00	; 0
 1a6:	40 e6       	ldi	r20, 0x60	; 96
 1a8:	50 e0       	ldi	r21, 0x00	; 0
 1aa:	6c e6       	ldi	r22, 0x6C	; 108
 1ac:	70 e0       	ldi	r23, 0x00	; 0
 1ae:	89 e8       	ldi	r24, 0x89	; 137
 1b0:	92 e0       	ldi	r25, 0x02	; 2
 1b2:	15 d2       	rcall	.+1066   	; 0x5de <_ZN7PCD854410createMenuEPcPS0_i>
	lcd.displayMenu();
 1b4:	89 e8       	ldi	r24, 0x89	; 137
 1b6:	92 e0       	ldi	r25, 0x02	; 2
 1b8:	34 d2       	rcall	.+1128   	; 0x622 <_ZN7PCD854411displayMenuEv>
    while (1) 
    {
		if (kb.available()){
 1ba:	88 e8       	ldi	r24, 0x88	; 136
 1bc:	92 e0       	ldi	r25, 0x02	; 2
 1be:	78 d3       	rcall	.+1776   	; 0x8b0 <_ZN3PS29availableEv>
 1c0:	88 23       	and	r24, r24
 1c2:	d9 f3       	breq	.-10     	; 0x1ba <main+0x2e>
			uint8_t key = kb.getChar();
 1c4:	88 e8       	ldi	r24, 0x88	; 136
 1c6:	92 e0       	ldi	r25, 0x02	; 2
 1c8:	7a d3       	rcall	.+1780   	; 0x8be <_ZN3PS27getCharEv>
 1ca:	c8 2f       	mov	r28, r24
			USART_Transmit(key);
 1cc:	cd df       	rcall	.-102    	; 0x168 <_Z14USART_Transmitc>
			if (key == KB_UP){
 1ce:	c1 38       	cpi	r28, 0x81	; 129
 1d0:	21 f4       	brne	.+8      	; 0x1da <main+0x4e>
				lcd.decreasePointer();
 1d2:	89 e8       	ldi	r24, 0x89	; 137
 1d4:	92 e0       	ldi	r25, 0x02	; 2
 1d6:	d7 d2       	rcall	.+1454   	; 0x786 <_ZN7PCD854415decreasePointerEv>
 1d8:	f0 cf       	rjmp	.-32     	; 0x1ba <main+0x2e>
			}
			else if (key == KB_DOWN){
 1da:	c2 38       	cpi	r28, 0x82	; 130
 1dc:	71 f7       	brne	.-36     	; 0x1ba <main+0x2e>
				lcd.increasePointer();	
 1de:	89 e8       	ldi	r24, 0x89	; 137
 1e0:	92 e0       	ldi	r25, 0x02	; 2
 1e2:	ad d2       	rcall	.+1370   	; 0x73e <_ZN7PCD854415increasePointerEv>
 1e4:	ea cf       	rjmp	.-44     	; 0x1ba <main+0x2e>

000001e6 <_GLOBAL__sub_I_mySystem>:
	register int i = 0;
	while(data[i]){
		USART_Transmit(data[i]);
		i++;
	}
}
 1e6:	ef 92       	push	r14
 1e8:	ff 92       	push	r15
 1ea:	0f 93       	push	r16
 1ec:	1f 93       	push	r17
	
void USART_Init();
void USART_Transmit(char data);
void USART_SendString(char *data);

PCD8544 lcd(4, 3, 2, 1 ,0);
 1ee:	e1 2c       	mov	r14, r1
 1f0:	f1 2c       	mov	r15, r1
 1f2:	01 e0       	ldi	r16, 0x01	; 1
 1f4:	10 e0       	ldi	r17, 0x00	; 0
 1f6:	22 e0       	ldi	r18, 0x02	; 2
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	43 e0       	ldi	r20, 0x03	; 3
 1fc:	50 e0       	ldi	r21, 0x00	; 0
 1fe:	64 e0       	ldi	r22, 0x04	; 4
 200:	70 e0       	ldi	r23, 0x00	; 0
 202:	89 e8       	ldi	r24, 0x89	; 137
 204:	92 e0       	ldi	r25, 0x02	; 2
 206:	08 d0       	rcall	.+16     	; 0x218 <_ZN7PCD8544C1Eiiiii>

PS2 kb;
 208:	88 e8       	ldi	r24, 0x88	; 136
 20a:	92 e0       	ldi	r25, 0x02	; 2
 20c:	de d2       	rcall	.+1468   	; 0x7ca <_ZN3PS2C1Ev>
	register int i = 0;
	while(data[i]){
		USART_Transmit(data[i]);
		i++;
	}
}
 20e:	1f 91       	pop	r17
 210:	0f 91       	pop	r16
 212:	ff 90       	pop	r15
 214:	ef 90       	pop	r14
 216:	08 95       	ret

00000218 <_ZN7PCD8544C1Eiiiii>:
	this->setCursor(0, (pointer - current) + 1);
	lineDisplay(REVERSE, Menu[pointer]);
}
int PCD8544::getPointer(){
	return pointer;
};
 218:	ef 92       	push	r14
 21a:	ff 92       	push	r15
 21c:	0f 93       	push	r16
 21e:	1f 93       	push	r17
 220:	cf 93       	push	r28
 222:	df 93       	push	r29
 224:	fc 01       	movw	r30, r24
 226:	60 83       	st	Z, r22
 228:	71 83       	std	Z+1, r23	; 0x01
 22a:	42 83       	std	Z+2, r20	; 0x02
 22c:	53 83       	std	Z+3, r21	; 0x03
 22e:	24 83       	std	Z+4, r18	; 0x04
 230:	35 83       	std	Z+5, r19	; 0x05
 232:	06 83       	std	Z+6, r16	; 0x06
 234:	17 83       	std	Z+7, r17	; 0x07
 236:	e0 86       	std	Z+8, r14	; 0x08
 238:	f1 86       	std	Z+9, r15	; 0x09
 23a:	c4 b3       	in	r28, 0x14	; 20
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	dc 01       	movw	r26, r24
 242:	02 c0       	rjmp	.+4      	; 0x248 <_ZN7PCD8544C1Eiiiii+0x30>
 244:	aa 0f       	add	r26, r26
 246:	bb 1f       	adc	r27, r27
 248:	ea 94       	dec	r14
 24a:	e2 f7       	brpl	.-8      	; 0x244 <_ZN7PCD8544C1Eiiiii+0x2c>
 24c:	7c 01       	movw	r14, r24
 24e:	02 c0       	rjmp	.+4      	; 0x254 <_ZN7PCD8544C1Eiiiii+0x3c>
 250:	ee 0c       	add	r14, r14
 252:	ff 1c       	adc	r15, r15
 254:	0a 95       	dec	r16
 256:	e2 f7       	brpl	.-8      	; 0x250 <_ZN7PCD8544C1Eiiiii+0x38>
 258:	87 01       	movw	r16, r14
 25a:	ca 2b       	or	r28, r26
 25c:	0c 2b       	or	r16, r28
 25e:	ec 01       	movw	r28, r24
 260:	02 c0       	rjmp	.+4      	; 0x266 <_ZN7PCD8544C1Eiiiii+0x4e>
 262:	cc 0f       	add	r28, r28
 264:	dd 1f       	adc	r29, r29
 266:	2a 95       	dec	r18
 268:	e2 f7       	brpl	.-8      	; 0x262 <_ZN7PCD8544C1Eiiiii+0x4a>
 26a:	2c 2f       	mov	r18, r28
 26c:	20 2b       	or	r18, r16
 26e:	ec 01       	movw	r28, r24
 270:	02 c0       	rjmp	.+4      	; 0x276 <_ZN7PCD8544C1Eiiiii+0x5e>
 272:	cc 0f       	add	r28, r28
 274:	dd 1f       	adc	r29, r29
 276:	4a 95       	dec	r20
 278:	e2 f7       	brpl	.-8      	; 0x272 <_ZN7PCD8544C1Eiiiii+0x5a>
 27a:	ae 01       	movw	r20, r28
 27c:	42 2b       	or	r20, r18
 27e:	9c 01       	movw	r18, r24
 280:	02 c0       	rjmp	.+4      	; 0x286 <_ZN7PCD8544C1Eiiiii+0x6e>
 282:	22 0f       	add	r18, r18
 284:	33 1f       	adc	r19, r19
 286:	6a 95       	dec	r22
 288:	e2 f7       	brpl	.-8      	; 0x282 <_ZN7PCD8544C1Eiiiii+0x6a>
 28a:	24 2b       	or	r18, r20
 28c:	24 bb       	out	0x14, r18	; 20
 28e:	25 b3       	in	r18, 0x15	; 21
 290:	ac 01       	movw	r20, r24
 292:	02 80       	ldd	r0, Z+2	; 0x02
 294:	02 c0       	rjmp	.+4      	; 0x29a <_ZN7PCD8544C1Eiiiii+0x82>
 296:	44 0f       	add	r20, r20
 298:	55 1f       	adc	r21, r21
 29a:	0a 94       	dec	r0
 29c:	e2 f7       	brpl	.-8      	; 0x296 <_ZN7PCD8544C1Eiiiii+0x7e>
 29e:	00 80       	ld	r0, Z
 2a0:	02 c0       	rjmp	.+4      	; 0x2a6 <_ZN7PCD8544C1Eiiiii+0x8e>
 2a2:	88 0f       	add	r24, r24
 2a4:	99 1f       	adc	r25, r25
 2a6:	0a 94       	dec	r0
 2a8:	e2 f7       	brpl	.-8      	; 0x2a2 <_ZN7PCD8544C1Eiiiii+0x8a>
 2aa:	84 2b       	or	r24, r20
 2ac:	82 2b       	or	r24, r18
 2ae:	85 bb       	out	0x15, r24	; 21
 2b0:	85 b3       	in	r24, 0x15	; 21
 2b2:	a0 95       	com	r26
 2b4:	a8 23       	and	r26, r24
 2b6:	a5 bb       	out	0x15, r26	; 21
 2b8:	df 91       	pop	r29
 2ba:	cf 91       	pop	r28
 2bc:	1f 91       	pop	r17
 2be:	0f 91       	pop	r16
 2c0:	ff 90       	pop	r15
 2c2:	ef 90       	pop	r14
 2c4:	08 95       	ret

000002c6 <_ZN7PCD85449sendToPCDEih>:
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	fc 01       	movw	r30, r24
 2cc:	25 b3       	in	r18, 0x15	; 21
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	02 80       	ldd	r0, Z+2	; 0x02
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <_ZN7PCD85449sendToPCDEih+0x14>
 2d6:	88 0f       	add	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	0a 94       	dec	r0
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <_ZN7PCD85449sendToPCDEih+0x10>
 2de:	80 95       	com	r24
 2e0:	82 23       	and	r24, r18
 2e2:	85 bb       	out	0x15, r24	; 21
 2e4:	61 30       	cpi	r22, 0x01	; 1
 2e6:	71 05       	cpc	r23, r1
 2e8:	61 f4       	brne	.+24     	; 0x302 <_ZN7PCD85449sendToPCDEih+0x3c>
 2ea:	25 b3       	in	r18, 0x15	; 21
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	04 80       	ldd	r0, Z+4	; 0x04
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <_ZN7PCD85449sendToPCDEih+0x32>
 2f4:	88 0f       	add	r24, r24
 2f6:	99 1f       	adc	r25, r25
 2f8:	0a 94       	dec	r0
 2fa:	e2 f7       	brpl	.-8      	; 0x2f4 <_ZN7PCD85449sendToPCDEih+0x2e>
 2fc:	82 2b       	or	r24, r18
 2fe:	85 bb       	out	0x15, r24	; 21
 300:	52 c0       	rjmp	.+164    	; 0x3a6 <_ZN7PCD85449sendToPCDEih+0xe0>
 302:	25 b3       	in	r18, 0x15	; 21
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	04 80       	ldd	r0, Z+4	; 0x04
 30a:	02 c0       	rjmp	.+4      	; 0x310 <_ZN7PCD85449sendToPCDEih+0x4a>
 30c:	88 0f       	add	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	0a 94       	dec	r0
 312:	e2 f7       	brpl	.-8      	; 0x30c <_ZN7PCD85449sendToPCDEih+0x46>
 314:	80 95       	com	r24
 316:	82 23       	and	r24, r18
 318:	85 bb       	out	0x15, r24	; 21
 31a:	45 c0       	rjmp	.+138    	; 0x3a6 <_ZN7PCD85449sendToPCDEih+0xe0>
 31c:	ce 01       	movw	r24, r28
 31e:	02 2e       	mov	r0, r18
 320:	02 c0       	rjmp	.+4      	; 0x326 <_ZN7PCD85449sendToPCDEih+0x60>
 322:	95 95       	asr	r25
 324:	87 95       	ror	r24
 326:	0a 94       	dec	r0
 328:	e2 f7       	brpl	.-8      	; 0x322 <_ZN7PCD85449sendToPCDEih+0x5c>
 32a:	80 ff       	sbrs	r24, 0
 32c:	0b c0       	rjmp	.+22     	; 0x344 <_ZN7PCD85449sendToPCDEih+0x7e>
 32e:	45 b3       	in	r20, 0x15	; 21
 330:	cd 01       	movw	r24, r26
 332:	06 80       	ldd	r0, Z+6	; 0x06
 334:	02 c0       	rjmp	.+4      	; 0x33a <_ZN7PCD85449sendToPCDEih+0x74>
 336:	88 0f       	add	r24, r24
 338:	99 1f       	adc	r25, r25
 33a:	0a 94       	dec	r0
 33c:	e2 f7       	brpl	.-8      	; 0x336 <_ZN7PCD85449sendToPCDEih+0x70>
 33e:	84 2b       	or	r24, r20
 340:	85 bb       	out	0x15, r24	; 21
 342:	0c c0       	rjmp	.+24     	; 0x35c <_ZN7PCD85449sendToPCDEih+0x96>
 344:	95 b3       	in	r25, 0x15	; 21
 346:	ad 01       	movw	r20, r26
 348:	06 80       	ldd	r0, Z+6	; 0x06
 34a:	02 c0       	rjmp	.+4      	; 0x350 <_ZN7PCD85449sendToPCDEih+0x8a>
 34c:	44 0f       	add	r20, r20
 34e:	55 1f       	adc	r21, r21
 350:	0a 94       	dec	r0
 352:	e2 f7       	brpl	.-8      	; 0x34c <_ZN7PCD85449sendToPCDEih+0x86>
 354:	84 2f       	mov	r24, r20
 356:	80 95       	com	r24
 358:	89 23       	and	r24, r25
 35a:	85 bb       	out	0x15, r24	; 21
 35c:	85 b3       	in	r24, 0x15	; 21
 35e:	bd 01       	movw	r22, r26
 360:	00 84       	ldd	r0, Z+8	; 0x08
 362:	02 c0       	rjmp	.+4      	; 0x368 <_ZN7PCD85449sendToPCDEih+0xa2>
 364:	66 0f       	add	r22, r22
 366:	77 1f       	adc	r23, r23
 368:	0a 94       	dec	r0
 36a:	e2 f7       	brpl	.-8      	; 0x364 <_ZN7PCD85449sendToPCDEih+0x9e>
 36c:	68 2b       	or	r22, r24
 36e:	65 bb       	out	0x15, r22	; 21
 370:	55 b3       	in	r21, 0x15	; 21
 372:	bd 01       	movw	r22, r26
 374:	00 84       	ldd	r0, Z+8	; 0x08
 376:	02 c0       	rjmp	.+4      	; 0x37c <_ZN7PCD85449sendToPCDEih+0xb6>
 378:	66 0f       	add	r22, r22
 37a:	77 1f       	adc	r23, r23
 37c:	0a 94       	dec	r0
 37e:	e2 f7       	brpl	.-8      	; 0x378 <_ZN7PCD85449sendToPCDEih+0xb2>
 380:	96 2f       	mov	r25, r22
 382:	90 95       	com	r25
 384:	95 23       	and	r25, r21
 386:	95 bb       	out	0x15, r25	; 21
 388:	21 50       	subi	r18, 0x01	; 1
 38a:	31 09       	sbc	r19, r1
 38c:	38 f6       	brcc	.-114    	; 0x31c <_ZN7PCD85449sendToPCDEih+0x56>
 38e:	25 b3       	in	r18, 0x15	; 21
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	02 80       	ldd	r0, Z+2	; 0x02
 396:	02 c0       	rjmp	.+4      	; 0x39c <_ZN7PCD85449sendToPCDEih+0xd6>
 398:	88 0f       	add	r24, r24
 39a:	99 1f       	adc	r25, r25
 39c:	0a 94       	dec	r0
 39e:	e2 f7       	brpl	.-8      	; 0x398 <_ZN7PCD85449sendToPCDEih+0xd2>
 3a0:	82 2b       	or	r24, r18
 3a2:	85 bb       	out	0x15, r24	; 21
 3a4:	07 c0       	rjmp	.+14     	; 0x3b4 <_ZN7PCD85449sendToPCDEih+0xee>
 3a6:	27 e0       	ldi	r18, 0x07	; 7
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	c4 2f       	mov	r28, r20
 3ac:	d0 e0       	ldi	r29, 0x00	; 0
 3ae:	a1 e0       	ldi	r26, 0x01	; 1
 3b0:	b0 e0       	ldi	r27, 0x00	; 0
 3b2:	b4 cf       	rjmp	.-152    	; 0x31c <_ZN7PCD85449sendToPCDEih+0x56>
 3b4:	df 91       	pop	r29
 3b6:	cf 91       	pop	r28
 3b8:	08 95       	ret

000003ba <_ZN7PCD854411sendCommandEh>:
 3ba:	46 2f       	mov	r20, r22
 3bc:	60 e0       	ldi	r22, 0x00	; 0
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	82 df       	rcall	.-252    	; 0x2c6 <_ZN7PCD85449sendToPCDEih>
 3c2:	08 95       	ret

000003c4 <_ZN7PCD85448sendDataEh>:
 3c4:	46 2f       	mov	r20, r22
 3c6:	61 e0       	ldi	r22, 0x01	; 1
 3c8:	70 e0       	ldi	r23, 0x00	; 0
 3ca:	7d df       	rcall	.-262    	; 0x2c6 <_ZN7PCD85449sendToPCDEih>
 3cc:	08 95       	ret

000003ce <_ZN7PCD85449setCursorEhh>:
 3ce:	0f 93       	push	r16
 3d0:	1f 93       	push	r17
 3d2:	cf 93       	push	r28
 3d4:	df 93       	push	r29
 3d6:	ec 01       	movw	r28, r24
 3d8:	06 2f       	mov	r16, r22
 3da:	14 2f       	mov	r17, r20
 3dc:	60 e2       	ldi	r22, 0x20	; 32
 3de:	ed df       	rcall	.-38     	; 0x3ba <_ZN7PCD854411sendCommandEh>
 3e0:	60 2f       	mov	r22, r16
 3e2:	60 68       	ori	r22, 0x80	; 128
 3e4:	ce 01       	movw	r24, r28
 3e6:	e9 df       	rcall	.-46     	; 0x3ba <_ZN7PCD854411sendCommandEh>
 3e8:	61 2f       	mov	r22, r17
 3ea:	60 64       	ori	r22, 0x40	; 64
 3ec:	ce 01       	movw	r24, r28
 3ee:	e5 df       	rcall	.-54     	; 0x3ba <_ZN7PCD854411sendCommandEh>
 3f0:	df 91       	pop	r29
 3f2:	cf 91       	pop	r28
 3f4:	1f 91       	pop	r17
 3f6:	0f 91       	pop	r16
 3f8:	08 95       	ret

000003fa <_ZN7PCD85445resetEv>:
 3fa:	fc 01       	movw	r30, r24
 3fc:	95 b3       	in	r25, 0x15	; 21
 3fe:	21 e0       	ldi	r18, 0x01	; 1
 400:	30 e0       	ldi	r19, 0x00	; 0
 402:	b9 01       	movw	r22, r18
 404:	00 80       	ld	r0, Z
 406:	02 c0       	rjmp	.+4      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 408:	66 0f       	add	r22, r22
 40a:	77 1f       	adc	r23, r23
 40c:	0a 94       	dec	r0
 40e:	e2 f7       	brpl	.-8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 410:	a9 01       	movw	r20, r18
 412:	02 80       	ldd	r0, Z+2	; 0x02
 414:	02 c0       	rjmp	.+4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 416:	44 0f       	add	r20, r20
 418:	55 1f       	adc	r21, r21
 41a:	0a 94       	dec	r0
 41c:	e2 f7       	brpl	.-8      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 41e:	86 2f       	mov	r24, r22
 420:	84 2b       	or	r24, r20
 422:	89 2b       	or	r24, r25
 424:	85 bb       	out	0x15, r24	; 21
 426:	95 b3       	in	r25, 0x15	; 21
 428:	a9 01       	movw	r20, r18
 42a:	00 80       	ld	r0, Z
 42c:	02 c0       	rjmp	.+4      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42e:	44 0f       	add	r20, r20
 430:	55 1f       	adc	r21, r21
 432:	0a 94       	dec	r0
 434:	e2 f7       	brpl	.-8      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 436:	84 2f       	mov	r24, r20
 438:	80 95       	com	r24
 43a:	89 23       	and	r24, r25
 43c:	85 bb       	out	0x15, r24	; 21
 43e:	83 ed       	ldi	r24, 0xD3	; 211
 440:	90 e3       	ldi	r25, 0x30	; 48
 442:	01 97       	sbiw	r24, 0x01	; 1
 444:	f1 f7       	brne	.-4      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 446:	00 c0       	rjmp	.+0      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 448:	00 00       	nop
 44a:	85 b3       	in	r24, 0x15	; 21
 44c:	00 80       	ld	r0, Z
 44e:	02 c0       	rjmp	.+4      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 450:	22 0f       	add	r18, r18
 452:	33 1f       	adc	r19, r19
 454:	0a 94       	dec	r0
 456:	e2 f7       	brpl	.-8      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 458:	28 2b       	or	r18, r24
 45a:	25 bb       	out	0x15, r18	; 21
 45c:	08 95       	ret

0000045e <_ZN7PCD854410clearSreenEv>:
 45e:	0f 93       	push	r16
 460:	1f 93       	push	r17
 462:	cf 93       	push	r28
 464:	df 93       	push	r29
 466:	8c 01       	movw	r16, r24
 468:	40 e0       	ldi	r20, 0x00	; 0
 46a:	60 e0       	ldi	r22, 0x00	; 0
 46c:	b0 df       	rcall	.-160    	; 0x3ce <_ZN7PCD85449setCursorEhh>
 46e:	c8 ef       	ldi	r28, 0xF8	; 248
 470:	d1 e0       	ldi	r29, 0x01	; 1
 472:	60 e0       	ldi	r22, 0x00	; 0
 474:	c8 01       	movw	r24, r16
 476:	a6 df       	rcall	.-180    	; 0x3c4 <_ZN7PCD85448sendDataEh>
 478:	21 97       	sbiw	r28, 0x01	; 1
 47a:	d9 f7       	brne	.-10     	; 0x472 <__stack+0x13>
 47c:	df 91       	pop	r29
 47e:	cf 91       	pop	r28
 480:	1f 91       	pop	r17
 482:	0f 91       	pop	r16
 484:	08 95       	ret

00000486 <_ZN7PCD85445beginEv>:
 486:	cf 93       	push	r28
 488:	df 93       	push	r29
 48a:	ec 01       	movw	r28, r24
 48c:	b6 df       	rcall	.-148    	; 0x3fa <_ZN7PCD85445resetEv>
 48e:	61 e2       	ldi	r22, 0x21	; 33
 490:	ce 01       	movw	r24, r28
 492:	93 df       	rcall	.-218    	; 0x3ba <_ZN7PCD854411sendCommandEh>
 494:	63 e0       	ldi	r22, 0x03	; 3
 496:	ce 01       	movw	r24, r28
 498:	90 df       	rcall	.-224    	; 0x3ba <_ZN7PCD854411sendCommandEh>
 49a:	65 ec       	ldi	r22, 0xC5	; 197
 49c:	ce 01       	movw	r24, r28
 49e:	8d df       	rcall	.-230    	; 0x3ba <_ZN7PCD854411sendCommandEh>
 4a0:	64 e0       	ldi	r22, 0x04	; 4
 4a2:	ce 01       	movw	r24, r28
 4a4:	8a df       	rcall	.-236    	; 0x3ba <_ZN7PCD854411sendCommandEh>
 4a6:	60 e2       	ldi	r22, 0x20	; 32
 4a8:	ce 01       	movw	r24, r28
 4aa:	87 df       	rcall	.-242    	; 0x3ba <_ZN7PCD854411sendCommandEh>
 4ac:	6c e0       	ldi	r22, 0x0C	; 12
 4ae:	ce 01       	movw	r24, r28
 4b0:	84 df       	rcall	.-248    	; 0x3ba <_ZN7PCD854411sendCommandEh>
 4b2:	60 e8       	ldi	r22, 0x80	; 128
 4b4:	ce 01       	movw	r24, r28
 4b6:	81 df       	rcall	.-254    	; 0x3ba <_ZN7PCD854411sendCommandEh>
 4b8:	60 e4       	ldi	r22, 0x40	; 64
 4ba:	ce 01       	movw	r24, r28
 4bc:	7e df       	rcall	.-260    	; 0x3ba <_ZN7PCD854411sendCommandEh>
 4be:	ce 01       	movw	r24, r28
 4c0:	ce df       	rcall	.-100    	; 0x45e <_ZN7PCD854410clearSreenEv>
 4c2:	df 91       	pop	r29
 4c4:	cf 91       	pop	r28
 4c6:	08 95       	ret

000004c8 <_ZN7PCD854411charDisplayEic>:
 4c8:	df 92       	push	r13
 4ca:	ef 92       	push	r14
 4cc:	ff 92       	push	r15
 4ce:	0f 93       	push	r16
 4d0:	1f 93       	push	r17
 4d2:	cf 93       	push	r28
 4d4:	df 93       	push	r29
 4d6:	8c 01       	movw	r16, r24
 4d8:	81 e0       	ldi	r24, 0x01	; 1
 4da:	67 2b       	or	r22, r23
 4dc:	09 f4       	brne	.+2      	; 0x4e0 <_ZN7PCD854411charDisplayEic+0x18>
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	d8 2e       	mov	r13, r24
 4e2:	d1 94       	neg	r13
 4e4:	50 e0       	ldi	r21, 0x00	; 0
 4e6:	ea 01       	movw	r28, r20
 4e8:	cc 0f       	add	r28, r28
 4ea:	dd 1f       	adc	r29, r29
 4ec:	cc 0f       	add	r28, r28
 4ee:	dd 1f       	adc	r29, r29
 4f0:	4c 0f       	add	r20, r28
 4f2:	5d 1f       	adc	r21, r29
 4f4:	ea 01       	movw	r28, r20
 4f6:	c9 5f       	subi	r28, 0xF9	; 249
 4f8:	df 4f       	sbci	r29, 0xFF	; 255
 4fa:	e1 2c       	mov	r14, r1
 4fc:	f1 2c       	mov	r15, r1
 4fe:	69 91       	ld	r22, Y+
 500:	6d 25       	eor	r22, r13
 502:	c8 01       	movw	r24, r16
 504:	5f df       	rcall	.-322    	; 0x3c4 <_ZN7PCD85448sendDataEh>
 506:	8f ef       	ldi	r24, 0xFF	; 255
 508:	e8 1a       	sub	r14, r24
 50a:	f8 0a       	sbc	r15, r24
 50c:	85 e0       	ldi	r24, 0x05	; 5
 50e:	e8 16       	cp	r14, r24
 510:	f1 04       	cpc	r15, r1
 512:	a9 f7       	brne	.-22     	; 0x4fe <_ZN7PCD854411charDisplayEic+0x36>
 514:	6d 2d       	mov	r22, r13
 516:	c8 01       	movw	r24, r16
 518:	55 df       	rcall	.-342    	; 0x3c4 <_ZN7PCD85448sendDataEh>
 51a:	df 91       	pop	r29
 51c:	cf 91       	pop	r28
 51e:	1f 91       	pop	r17
 520:	0f 91       	pop	r16
 522:	ff 90       	pop	r15
 524:	ef 90       	pop	r14
 526:	df 90       	pop	r13
 528:	08 95       	ret

0000052a <_ZN7PCD854411lineDisplayEiPc>:
 52a:	9f 92       	push	r9
 52c:	af 92       	push	r10
 52e:	bf 92       	push	r11
 530:	cf 92       	push	r12
 532:	df 92       	push	r13
 534:	ef 92       	push	r14
 536:	ff 92       	push	r15
 538:	0f 93       	push	r16
 53a:	1f 93       	push	r17
 53c:	cf 93       	push	r28
 53e:	df 93       	push	r29
 540:	7c 01       	movw	r14, r24
 542:	6b 01       	movw	r12, r22
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	67 2b       	or	r22, r23
 548:	09 f4       	brne	.+2      	; 0x54c <_ZN7PCD854411lineDisplayEiPc+0x22>
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	98 2e       	mov	r9, r24
 54e:	91 94       	neg	r9
 550:	fa 01       	movw	r30, r20
 552:	80 81       	ld	r24, Z
 554:	88 23       	and	r24, r24
 556:	61 f1       	breq	.+88     	; 0x5b0 <_ZN7PCD854411lineDisplayEiPc+0x86>
 558:	31 96       	adiw	r30, 0x01	; 1
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	01 96       	adiw	r24, 0x01	; 1
 560:	21 91       	ld	r18, Z+
 562:	21 11       	cpse	r18, r1
 564:	fc cf       	rjmp	.-8      	; 0x55e <_ZN7PCD854411lineDisplayEiPc+0x34>
 566:	8c 01       	movw	r16, r24
 568:	0f 97       	sbiw	r24, 0x0f	; 15
 56a:	14 f0       	brlt	.+4      	; 0x570 <_ZN7PCD854411lineDisplayEiPc+0x46>
 56c:	0e e0       	ldi	r16, 0x0E	; 14
 56e:	10 e0       	ldi	r17, 0x00	; 0
 570:	10 16       	cp	r1, r16
 572:	11 06       	cpc	r1, r17
 574:	8c f0       	brlt	.+34     	; 0x598 <_ZN7PCD854411lineDisplayEiPc+0x6e>
 576:	8e e0       	ldi	r24, 0x0E	; 14
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	9c 01       	movw	r18, r24
 57c:	20 1b       	sub	r18, r16
 57e:	31 0b       	sbc	r19, r17
 580:	89 01       	movw	r16, r18
 582:	c9 01       	movw	r24, r18
 584:	88 0f       	add	r24, r24
 586:	99 1f       	adc	r25, r25
 588:	08 0f       	add	r16, r24
 58a:	19 1f       	adc	r17, r25
 58c:	00 0f       	add	r16, r16
 58e:	11 1f       	adc	r17, r17
 590:	10 16       	cp	r1, r16
 592:	11 06       	cpc	r1, r17
 594:	7c f0       	brlt	.+30     	; 0x5b4 <_ZN7PCD854411lineDisplayEiPc+0x8a>
 596:	17 c0       	rjmp	.+46     	; 0x5c6 <_ZN7PCD854411lineDisplayEiPc+0x9c>
 598:	ea 01       	movw	r28, r20
 59a:	5a 01       	movw	r10, r20
 59c:	a0 0e       	add	r10, r16
 59e:	b1 1e       	adc	r11, r17
 5a0:	49 91       	ld	r20, Y+
 5a2:	b6 01       	movw	r22, r12
 5a4:	c7 01       	movw	r24, r14
 5a6:	90 df       	rcall	.-224    	; 0x4c8 <_ZN7PCD854411charDisplayEic>
 5a8:	ca 15       	cp	r28, r10
 5aa:	db 05       	cpc	r29, r11
 5ac:	c9 f7       	brne	.-14     	; 0x5a0 <_ZN7PCD854411lineDisplayEiPc+0x76>
 5ae:	e3 cf       	rjmp	.-58     	; 0x576 <_ZN7PCD854411lineDisplayEiPc+0x4c>
 5b0:	04 e5       	ldi	r16, 0x54	; 84
 5b2:	10 e0       	ldi	r17, 0x00	; 0
 5b4:	c0 e0       	ldi	r28, 0x00	; 0
 5b6:	d0 e0       	ldi	r29, 0x00	; 0
 5b8:	69 2d       	mov	r22, r9
 5ba:	c7 01       	movw	r24, r14
 5bc:	03 df       	rcall	.-506    	; 0x3c4 <_ZN7PCD85448sendDataEh>
 5be:	21 96       	adiw	r28, 0x01	; 1
 5c0:	0c 17       	cp	r16, r28
 5c2:	1d 07       	cpc	r17, r29
 5c4:	c9 f7       	brne	.-14     	; 0x5b8 <_ZN7PCD854411lineDisplayEiPc+0x8e>
 5c6:	df 91       	pop	r29
 5c8:	cf 91       	pop	r28
 5ca:	1f 91       	pop	r17
 5cc:	0f 91       	pop	r16
 5ce:	ff 90       	pop	r15
 5d0:	ef 90       	pop	r14
 5d2:	df 90       	pop	r13
 5d4:	cf 90       	pop	r12
 5d6:	bf 90       	pop	r11
 5d8:	af 90       	pop	r10
 5da:	9f 90       	pop	r9
 5dc:	08 95       	ret

000005de <_ZN7PCD854410createMenuEPcPS0_i>:
 5de:	dc 01       	movw	r26, r24
 5e0:	1b 96       	adiw	r26, 0x0b	; 11
 5e2:	1c 92       	st	X, r1
 5e4:	1e 92       	st	-X, r1
 5e6:	1a 97       	sbiw	r26, 0x0a	; 10
 5e8:	1d 96       	adiw	r26, 0x0d	; 13
 5ea:	1c 92       	st	X, r1
 5ec:	1e 92       	st	-X, r1
 5ee:	1c 97       	sbiw	r26, 0x0c	; 12
 5f0:	1f 96       	adiw	r26, 0x0f	; 15
 5f2:	3c 93       	st	X, r19
 5f4:	2e 93       	st	-X, r18
 5f6:	1e 97       	sbiw	r26, 0x0e	; 14
 5f8:	51 96       	adiw	r26, 0x11	; 17
 5fa:	7c 93       	st	X, r23
 5fc:	6e 93       	st	-X, r22
 5fe:	50 97       	sbiw	r26, 0x10	; 16
 600:	12 16       	cp	r1, r18
 602:	13 06       	cpc	r1, r19
 604:	6c f4       	brge	.+26     	; 0x620 <_ZN7PCD854410createMenuEPcPS0_i+0x42>
 606:	fa 01       	movw	r30, r20
 608:	52 96       	adiw	r26, 0x12	; 18
 60a:	22 0f       	add	r18, r18
 60c:	33 1f       	adc	r19, r19
 60e:	42 0f       	add	r20, r18
 610:	53 1f       	adc	r21, r19
 612:	81 91       	ld	r24, Z+
 614:	91 91       	ld	r25, Z+
 616:	8d 93       	st	X+, r24
 618:	9d 93       	st	X+, r25
 61a:	e4 17       	cp	r30, r20
 61c:	f5 07       	cpc	r31, r21
 61e:	c9 f7       	brne	.-14     	; 0x612 <_ZN7PCD854410createMenuEPcPS0_i+0x34>
 620:	08 95       	ret

00000622 <_ZN7PCD854411displayMenuEv>:
 622:	df 92       	push	r13
 624:	ef 92       	push	r14
 626:	ff 92       	push	r15
 628:	0f 93       	push	r16
 62a:	1f 93       	push	r17
 62c:	cf 93       	push	r28
 62e:	df 93       	push	r29
 630:	ec 01       	movw	r28, r24
 632:	40 e0       	ldi	r20, 0x00	; 0
 634:	60 e0       	ldi	r22, 0x00	; 0
 636:	cb de       	rcall	.-618    	; 0x3ce <_ZN7PCD85449setCursorEhh>
 638:	48 89       	ldd	r20, Y+16	; 0x10
 63a:	59 89       	ldd	r21, Y+17	; 0x11
 63c:	60 e0       	ldi	r22, 0x00	; 0
 63e:	70 e0       	ldi	r23, 0x00	; 0
 640:	ce 01       	movw	r24, r28
 642:	73 df       	rcall	.-282    	; 0x52a <_ZN7PCD854411lineDisplayEiPc>
 644:	ee 84       	ldd	r14, Y+14	; 0x0e
 646:	ff 84       	ldd	r15, Y+15	; 0x0f
 648:	85 e0       	ldi	r24, 0x05	; 5
 64a:	e8 16       	cp	r14, r24
 64c:	f1 04       	cpc	r15, r1
 64e:	f4 f5       	brge	.+124    	; 0x6cc <_ZN7PCD854411displayMenuEv+0xaa>
 650:	1e 14       	cp	r1, r14
 652:	1f 04       	cpc	r1, r15
 654:	34 f5       	brge	.+76     	; 0x6a2 <_ZN7PCD854411displayMenuEv+0x80>
 656:	dd 24       	eor	r13, r13
 658:	d3 94       	inc	r13
 65a:	00 e0       	ldi	r16, 0x00	; 0
 65c:	10 e0       	ldi	r17, 0x00	; 0
 65e:	05 c0       	rjmp	.+10     	; 0x66a <_ZN7PCD854411displayMenuEv+0x48>
 660:	85 e0       	ldi	r24, 0x05	; 5
 662:	e8 16       	cp	r14, r24
 664:	f1 04       	cpc	r15, r1
 666:	ec f0       	brlt	.+58     	; 0x6a2 <_ZN7PCD854411displayMenuEv+0x80>
 668:	4e c0       	rjmp	.+156    	; 0x706 <_ZN7PCD854411displayMenuEv+0xe4>
 66a:	4d 2d       	mov	r20, r13
 66c:	60 e0       	ldi	r22, 0x00	; 0
 66e:	ce 01       	movw	r24, r28
 670:	ae de       	rcall	.-676    	; 0x3ce <_ZN7PCD85449setCursorEhh>
 672:	ec 85       	ldd	r30, Y+12	; 0x0c
 674:	fd 85       	ldd	r31, Y+13	; 0x0d
 676:	e0 0f       	add	r30, r16
 678:	f1 1f       	adc	r31, r17
 67a:	39 96       	adiw	r30, 0x09	; 9
 67c:	ee 0f       	add	r30, r30
 67e:	ff 1f       	adc	r31, r31
 680:	ec 0f       	add	r30, r28
 682:	fd 1f       	adc	r31, r29
 684:	40 81       	ld	r20, Z
 686:	51 81       	ldd	r21, Z+1	; 0x01
 688:	60 e0       	ldi	r22, 0x00	; 0
 68a:	70 e0       	ldi	r23, 0x00	; 0
 68c:	ce 01       	movw	r24, r28
 68e:	4d df       	rcall	.-358    	; 0x52a <_ZN7PCD854411lineDisplayEiPc>
 690:	0f 5f       	subi	r16, 0xFF	; 255
 692:	1f 4f       	sbci	r17, 0xFF	; 255
 694:	ee 84       	ldd	r14, Y+14	; 0x0e
 696:	ff 84       	ldd	r15, Y+15	; 0x0f
 698:	d3 94       	inc	r13
 69a:	0e 15       	cp	r16, r14
 69c:	1f 05       	cpc	r17, r15
 69e:	2c f3       	brlt	.-54     	; 0x66a <_ZN7PCD854411displayMenuEv+0x48>
 6a0:	df cf       	rjmp	.-66     	; 0x660 <_ZN7PCD854411displayMenuEv+0x3e>
 6a2:	11 e0       	ldi	r17, 0x01	; 1
 6a4:	1e 0d       	add	r17, r14
 6a6:	41 2f       	mov	r20, r17
 6a8:	60 e0       	ldi	r22, 0x00	; 0
 6aa:	ce 01       	movw	r24, r28
 6ac:	90 de       	rcall	.-736    	; 0x3ce <_ZN7PCD85449setCursorEhh>
 6ae:	45 ea       	ldi	r20, 0xA5	; 165
 6b0:	50 e0       	ldi	r21, 0x00	; 0
 6b2:	60 e0       	ldi	r22, 0x00	; 0
 6b4:	70 e0       	ldi	r23, 0x00	; 0
 6b6:	ce 01       	movw	r24, r28
 6b8:	38 df       	rcall	.-400    	; 0x52a <_ZN7PCD854411lineDisplayEiPc>
 6ba:	8f ef       	ldi	r24, 0xFF	; 255
 6bc:	e8 1a       	sub	r14, r24
 6be:	f8 0a       	sbc	r15, r24
 6c0:	1f 5f       	subi	r17, 0xFF	; 255
 6c2:	85 e0       	ldi	r24, 0x05	; 5
 6c4:	e8 16       	cp	r14, r24
 6c6:	f1 04       	cpc	r15, r1
 6c8:	74 f3       	brlt	.-36     	; 0x6a6 <_ZN7PCD854411displayMenuEv+0x84>
 6ca:	1d c0       	rjmp	.+58     	; 0x706 <_ZN7PCD854411displayMenuEv+0xe4>
 6cc:	ff 24       	eor	r15, r15
 6ce:	f3 94       	inc	r15
 6d0:	00 e0       	ldi	r16, 0x00	; 0
 6d2:	10 e0       	ldi	r17, 0x00	; 0
 6d4:	4f 2d       	mov	r20, r15
 6d6:	60 e0       	ldi	r22, 0x00	; 0
 6d8:	ce 01       	movw	r24, r28
 6da:	79 de       	rcall	.-782    	; 0x3ce <_ZN7PCD85449setCursorEhh>
 6dc:	ec 85       	ldd	r30, Y+12	; 0x0c
 6de:	fd 85       	ldd	r31, Y+13	; 0x0d
 6e0:	e0 0f       	add	r30, r16
 6e2:	f1 1f       	adc	r31, r17
 6e4:	39 96       	adiw	r30, 0x09	; 9
 6e6:	ee 0f       	add	r30, r30
 6e8:	ff 1f       	adc	r31, r31
 6ea:	ec 0f       	add	r30, r28
 6ec:	fd 1f       	adc	r31, r29
 6ee:	40 81       	ld	r20, Z
 6f0:	51 81       	ldd	r21, Z+1	; 0x01
 6f2:	60 e0       	ldi	r22, 0x00	; 0
 6f4:	70 e0       	ldi	r23, 0x00	; 0
 6f6:	ce 01       	movw	r24, r28
 6f8:	18 df       	rcall	.-464    	; 0x52a <_ZN7PCD854411lineDisplayEiPc>
 6fa:	0f 5f       	subi	r16, 0xFF	; 255
 6fc:	1f 4f       	sbci	r17, 0xFF	; 255
 6fe:	f3 94       	inc	r15
 700:	86 e0       	ldi	r24, 0x06	; 6
 702:	f8 12       	cpse	r15, r24
 704:	e7 cf       	rjmp	.-50     	; 0x6d4 <_ZN7PCD854411displayMenuEv+0xb2>
 706:	4a 85       	ldd	r20, Y+10	; 0x0a
 708:	4f 5f       	subi	r20, 0xFF	; 255
 70a:	8c 85       	ldd	r24, Y+12	; 0x0c
 70c:	48 1b       	sub	r20, r24
 70e:	60 e0       	ldi	r22, 0x00	; 0
 710:	ce 01       	movw	r24, r28
 712:	5d de       	rcall	.-838    	; 0x3ce <_ZN7PCD85449setCursorEhh>
 714:	ea 85       	ldd	r30, Y+10	; 0x0a
 716:	fb 85       	ldd	r31, Y+11	; 0x0b
 718:	39 96       	adiw	r30, 0x09	; 9
 71a:	ee 0f       	add	r30, r30
 71c:	ff 1f       	adc	r31, r31
 71e:	ec 0f       	add	r30, r28
 720:	fd 1f       	adc	r31, r29
 722:	40 81       	ld	r20, Z
 724:	51 81       	ldd	r21, Z+1	; 0x01
 726:	61 e0       	ldi	r22, 0x01	; 1
 728:	70 e0       	ldi	r23, 0x00	; 0
 72a:	ce 01       	movw	r24, r28
 72c:	fe de       	rcall	.-516    	; 0x52a <_ZN7PCD854411lineDisplayEiPc>
 72e:	df 91       	pop	r29
 730:	cf 91       	pop	r28
 732:	1f 91       	pop	r17
 734:	0f 91       	pop	r16
 736:	ff 90       	pop	r15
 738:	ef 90       	pop	r14
 73a:	df 90       	pop	r13
 73c:	08 95       	ret

0000073e <_ZN7PCD854415increasePointerEv>:

void PCD8544::increasePointer(){
	if ((pointer + 1) < lenOfMenu){
 73e:	fc 01       	movw	r30, r24
 740:	22 85       	ldd	r18, Z+10	; 0x0a
 742:	33 85       	ldd	r19, Z+11	; 0x0b
 744:	2f 5f       	subi	r18, 0xFF	; 255
 746:	3f 4f       	sbci	r19, 0xFF	; 255
 748:	46 85       	ldd	r20, Z+14	; 0x0e
 74a:	57 85       	ldd	r21, Z+15	; 0x0f
 74c:	24 17       	cp	r18, r20
 74e:	35 07       	cpc	r19, r21
 750:	94 f4       	brge	.+36     	; 0x776 <_ZN7PCD854415increasePointerEv+0x38>
		pointer++;
 752:	33 87       	std	Z+11, r19	; 0x0b
 754:	22 87       	std	Z+10, r18	; 0x0a
		if (((lenOfMenu - current ) > 5) && ((pointer - current) == 5)){
 756:	64 85       	ldd	r22, Z+12	; 0x0c
 758:	75 85       	ldd	r23, Z+13	; 0x0d
 75a:	46 1b       	sub	r20, r22
 75c:	57 0b       	sbc	r21, r23
 75e:	46 30       	cpi	r20, 0x06	; 6
 760:	51 05       	cpc	r21, r1
 762:	4c f0       	brlt	.+18     	; 0x776 <_ZN7PCD854415increasePointerEv+0x38>
 764:	26 1b       	sub	r18, r22
 766:	37 0b       	sbc	r19, r23
 768:	25 30       	cpi	r18, 0x05	; 5
 76a:	31 05       	cpc	r19, r1
 76c:	21 f4       	brne	.+8      	; 0x776 <_ZN7PCD854415increasePointerEv+0x38>
			current++;
 76e:	6f 5f       	subi	r22, 0xFF	; 255
 770:	7f 4f       	sbci	r23, 0xFF	; 255
 772:	75 87       	std	Z+13, r23	; 0x0d
 774:	64 87       	std	Z+12, r22	; 0x0c
		}
	}
	this->displayMenu();
 776:	55 df       	rcall	.-342    	; 0x622 <_ZN7PCD854411displayMenuEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 778:	8f e4       	ldi	r24, 0x4F	; 79
 77a:	93 ec       	ldi	r25, 0xC3	; 195
 77c:	01 97       	sbiw	r24, 0x01	; 1
 77e:	f1 f7       	brne	.-4      	; 0x77c <_ZN7PCD854415increasePointerEv+0x3e>
 780:	00 c0       	rjmp	.+0      	; 0x782 <_ZN7PCD854415increasePointerEv+0x44>
 782:	00 00       	nop
 784:	08 95       	ret

00000786 <_ZN7PCD854415decreasePointerEv>:
	_delay_ms(200);
}

void PCD8544::decreasePointer(){
	if (pointer > 0){
 786:	fc 01       	movw	r30, r24
 788:	22 85       	ldd	r18, Z+10	; 0x0a
 78a:	33 85       	ldd	r19, Z+11	; 0x0b
 78c:	12 16       	cp	r1, r18
 78e:	13 06       	cpc	r1, r19
 790:	a4 f4       	brge	.+40     	; 0x7ba <_ZN7PCD854415decreasePointerEv+0x34>
		pointer--;
 792:	21 50       	subi	r18, 0x01	; 1
 794:	31 09       	sbc	r19, r1
 796:	33 87       	std	Z+11, r19	; 0x0b
 798:	22 87       	std	Z+10, r18	; 0x0a
		if (((lenOfMenu - pointer) > 4) && (pointer < current)){
 79a:	46 85       	ldd	r20, Z+14	; 0x0e
 79c:	57 85       	ldd	r21, Z+15	; 0x0f
 79e:	42 1b       	sub	r20, r18
 7a0:	53 0b       	sbc	r21, r19
 7a2:	45 30       	cpi	r20, 0x05	; 5
 7a4:	51 05       	cpc	r21, r1
 7a6:	4c f0       	brlt	.+18     	; 0x7ba <_ZN7PCD854415decreasePointerEv+0x34>
 7a8:	44 85       	ldd	r20, Z+12	; 0x0c
 7aa:	55 85       	ldd	r21, Z+13	; 0x0d
 7ac:	24 17       	cp	r18, r20
 7ae:	35 07       	cpc	r19, r21
 7b0:	24 f4       	brge	.+8      	; 0x7ba <_ZN7PCD854415decreasePointerEv+0x34>
			current--;
 7b2:	41 50       	subi	r20, 0x01	; 1
 7b4:	51 09       	sbc	r21, r1
 7b6:	55 87       	std	Z+13, r21	; 0x0d
 7b8:	44 87       	std	Z+12, r20	; 0x0c
		}
	}
	this->displayMenu();
 7ba:	33 df       	rcall	.-410    	; 0x622 <_ZN7PCD854411displayMenuEv>
 7bc:	8f e4       	ldi	r24, 0x4F	; 79
 7be:	93 ec       	ldi	r25, 0xC3	; 195
 7c0:	01 97       	sbiw	r24, 0x01	; 1
 7c2:	f1 f7       	brne	.-4      	; 0x7c0 <_ZN7PCD854415decreasePointerEv+0x3a>
 7c4:	00 c0       	rjmp	.+0      	; 0x7c6 <_ZN7PCD854415decreasePointerEv+0x40>
 7c6:	00 00       	nop
 7c8:	08 95       	ret

000007ca <_ZN3PS2C1Ev>:
volatile uint8_t	cmd_ACKValue;
uint8_t				cmd_Parity;
volatile bool		cmd_ACKOk;

PS2::PS2(){
	this->Lights = 0x00;
 7ca:	fc 01       	movw	r30, r24
 7cc:	10 82       	st	Z, r1
 7ce:	08 95       	ret

000007d0 <_ZN3PS29oddParityEh>:
}
uint8_t PS2::oddParity(uint8_t data){
	int i, count = 1;
 7d0:	81 e0       	ldi	r24, 0x01	; 1
 7d2:	90 e0       	ldi	r25, 0x00	; 0
	for(i = 0; i < 8; i++){
 7d4:	20 e0       	ldi	r18, 0x00	; 0
 7d6:	30 e0       	ldi	r19, 0x00	; 0
		if ((data >> i) & 0x01)
 7d8:	70 e0       	ldi	r23, 0x00	; 0
 7da:	ab 01       	movw	r20, r22
 7dc:	02 2e       	mov	r0, r18
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <_ZN3PS29oddParityEh+0x14>
 7e0:	55 95       	asr	r21
 7e2:	47 95       	ror	r20
 7e4:	0a 94       	dec	r0
 7e6:	e2 f7       	brpl	.-8      	; 0x7e0 <_ZN3PS29oddParityEh+0x10>
 7e8:	40 fd       	sbrc	r20, 0
		count++;
 7ea:	01 96       	adiw	r24, 0x01	; 1
PS2::PS2(){
	this->Lights = 0x00;
}
uint8_t PS2::oddParity(uint8_t data){
	int i, count = 1;
	for(i = 0; i < 8; i++){
 7ec:	2f 5f       	subi	r18, 0xFF	; 255
 7ee:	3f 4f       	sbci	r19, 0xFF	; 255
 7f0:	28 30       	cpi	r18, 0x08	; 8
 7f2:	31 05       	cpc	r19, r1
 7f4:	91 f7       	brne	.-28     	; 0x7da <_ZN3PS29oddParityEh+0xa>
		if ((data >> i) & 0x01)
		count++;
	}
	return count & 0x01;
}
 7f6:	81 70       	andi	r24, 0x01	; 1
 7f8:	08 95       	ret

000007fa <_ZN3PS211sendCommandEh>:

void PS2::sendCommand(uint8_t data){
	cmd_InProgress	= true;
 7fa:	21 e0       	ldi	r18, 0x01	; 1
 7fc:	20 93 a1 02 	sts	0x02A1, r18	; 0x8002a1 <cmd_InProgress>
	cmd_Count		= 0;
 800:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <cmd_Count+0x1>
 804:	10 92 9f 02 	sts	0x029F, r1	; 0x80029f <cmd_Count>
	
	cmd_Value		= data;
 808:	60 93 9e 02 	sts	0x029E, r22	; 0x80029e <cmd_Value>
	cmd_ACKValue		= 1;
 80c:	20 93 9d 02 	sts	0x029D, r18	; 0x80029d <cmd_ACKValue>
	cmd_Parity		= oddParity(data);
 810:	df df       	rcall	.-66     	; 0x7d0 <_ZN3PS29oddParityEh>
 812:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <cmd_Parity>
	
	//set DATA line  and CLK as OUTPUT to send data to keyboard
	DDR_KB	|= (1<<DATA_PIN);
 816:	8b 9a       	sbi	0x11, 3	; 17
	DDR_KB		|= (1<<CLK_PIN);
 818:	8a 9a       	sbi	0x11, 2	; 17
	
	//Inhibit all communication
	PORT_KB	|= (1<<DATA_PIN);
 81a:	93 9a       	sbi	0x12, 3	; 18
	PORT_KB	&= ~(1<<CLK_PIN); 
 81c:	92 98       	cbi	0x12, 2	; 18
 81e:	2f e7       	ldi	r18, 0x7F	; 127
 820:	88 e3       	ldi	r24, 0x38	; 56
 822:	91 e0       	ldi	r25, 0x01	; 1
 824:	21 50       	subi	r18, 0x01	; 1
 826:	80 40       	sbci	r24, 0x00	; 0
 828:	90 40       	sbci	r25, 0x00	; 0
 82a:	e1 f7       	brne	.-8      	; 0x824 <_ZN3PS211sendCommandEh+0x2a>
 82c:	00 c0       	rjmp	.+0      	; 0x82e <_ZN3PS211sendCommandEh+0x34>
 82e:	00 00       	nop

	_delay_ms(50);
	
	PORT_KB	&= ~(1<<DATA_PIN);
 830:	93 98       	cbi	0x12, 3	; 18
	
	PORT_KB	|= (1<<CLK_PIN);
 832:	92 9a       	sbi	0x12, 2	; 18
	DDR_KB		&= ~(1<<CLK_PIN);
 834:	8a 98       	cbi	0x11, 2	; 17
	
	//An INT0 Interrupt will generate here
	
	while (cmd_ACKValue != 0);
 836:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <cmd_ACKValue>
 83a:	81 11       	cpse	r24, r1
 83c:	fc cf       	rjmp	.-8      	; 0x836 <_ZN3PS211sendCommandEh+0x3c>
	
	cmd_InProgress = false;
 83e:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <cmd_InProgress>
 842:	08 95       	ret

00000844 <_ZN3PS25beginEv>:
}

void PS2::begin(){
	
	char_Current	= 0x00;
 844:	10 92 aa 02 	sts	0x02AA, r1	; 0x8002aa <char_Current>
	char_Received	= 0x00;
 848:	10 92 a9 02 	sts	0x02A9, r1	; 0x8002a9 <char_Received>
	char_Count		= 0x00;
 84c:	10 92 a8 02 	sts	0x02A8, r1	; 0x8002a8 <char_Count>
	
	kb_Shift		= false;
 850:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <kb_Shift>
	
	kb_Capslock		= false;
 854:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <kb_Capslock>
	kb_Numlock		= false;
 858:	10 92 a3 02 	sts	0x02A3, r1	; 0x8002a3 <kb_Numlock>
	
	kb_Extend		= false;
 85c:	10 92 a7 02 	sts	0x02A7, r1	; 0x8002a7 <kb_Extend>
	kb_Release		= false;
 860:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <kb_Release>
	
	cmd_InProgress	= false;
 864:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <cmd_InProgress>
	cmd_Count		= 0;
 868:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <cmd_Count+0x1>
 86c:	10 92 9f 02 	sts	0x029F, r1	; 0x80029f <cmd_Count>
	cmd_Value		= 0x00;
 870:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <cmd_Value>
	cmd_ACKValue	= 1;
 874:	81 e0       	ldi	r24, 0x01	; 1
 876:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <cmd_ACKValue>
	
	DDR_KB		&= ~(1<<CLK_PIN);	
 87a:	8a 98       	cbi	0x11, 2	; 17
	
	DDR_KB	&= ~(1<<DATA_PIN);	
 87c:	8b 98       	cbi	0x11, 3	; 17
	PORT_KB	|= (1<<DATA_PIN);
 87e:	93 9a       	sbi	0x12, 3	; 18
	
	MCUCR |= (1<<ISC01);
 880:	85 b7       	in	r24, 0x35	; 53
 882:	82 60       	ori	r24, 0x02	; 2
 884:	85 bf       	out	0x35, r24	; 53
	GICR	|= (1<<INT0);
 886:	8b b7       	in	r24, 0x3b	; 59
 888:	80 64       	ori	r24, 0x40	; 64
 88a:	8b bf       	out	0x3b, r24	; 59
 88c:	08 95       	ret

0000088e <_ZN3PS28setLightEv>:
}

void PS2::setLight(){
 88e:	cf 93       	push	r28
 890:	df 93       	push	r29
 892:	ec 01       	movw	r28, r24
	cmd_ACKOk = false;
 894:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <cmd_ACKOk>
	sendCommand(0xED);
 898:	6d ee       	ldi	r22, 0xED	; 237
 89a:	af df       	rcall	.-162    	; 0x7fa <_ZN3PS211sendCommandEh>
	while(!cmd_ACKOk);
 89c:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <cmd_ACKOk>
 8a0:	88 23       	and	r24, r24
 8a2:	e1 f3       	breq	.-8      	; 0x89c <_ZN3PS28setLightEv+0xe>
	sendCommand(this->Lights);
 8a4:	68 81       	ld	r22, Y
 8a6:	ce 01       	movw	r24, r28
 8a8:	a8 df       	rcall	.-176    	; 0x7fa <_ZN3PS211sendCommandEh>
}
 8aa:	df 91       	pop	r29
 8ac:	cf 91       	pop	r28
 8ae:	08 95       	ret

000008b0 <_ZN3PS29availableEv>:
bool PS2::available(){
	return (char_Received != 0);
 8b0:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <char_Received>
 8b4:	81 e0       	ldi	r24, 0x01	; 1
 8b6:	91 11       	cpse	r25, r1
 8b8:	01 c0       	rjmp	.+2      	; 0x8bc <_ZN3PS29availableEv+0xc>
 8ba:	80 e0       	ldi	r24, 0x00	; 0
}
 8bc:	08 95       	ret

000008be <_ZN3PS27getCharEv>:

uint8_t PS2::getChar(){
 8be:	9c 01       	movw	r18, r24
	uint8_t result;
	result = char_Received;
 8c0:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <char_Received>
	switch(result){
 8c4:	49 2f       	mov	r20, r25
 8c6:	50 e0       	ldi	r21, 0x00	; 0
 8c8:	fa 01       	movw	r30, r20
 8ca:	3d 97       	sbiw	r30, 0x0d	; 13
 8cc:	e2 37       	cpi	r30, 0x72	; 114
 8ce:	f1 05       	cpc	r31, r1
 8d0:	08 f0       	brcs	.+2      	; 0x8d4 <_ZN3PS27getCharEv+0x16>
 8d2:	50 c1       	rjmp	.+672    	; 0xb74 <_ZN3PS27getCharEv+0x2b6>
 8d4:	d9 01       	movw	r26, r18
 8d6:	ed 5e       	subi	r30, 0xED	; 237
 8d8:	ff 4f       	sbci	r31, 0xFF	; 255
 8da:	09 94       	ijmp
		case 0x41: result = kb_Shift ? '<' : ','; break;
		case 0x49: result = kb_Shift ? '>' : '.'; break;
		case 0x4A: result = kb_Shift ? '?' : '/'; break;
		
		case 0x0D: result = '\t';		break;
		case 0x5A: result = '\n';		break;
 8dc:	9a e0       	ldi	r25, 0x0A	; 10
 8de:	c5 c1       	rjmp	.+906    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
	uint8_t result;
	result = char_Received;
	switch(result){
		case 0x1C: result = 'a'; break;
		case 0x32: result = 'b'; break;
		case 0x21: result = 'c'; break;
 8e0:	93 e6       	ldi	r25, 0x63	; 99
 8e2:	54 c1       	rjmp	.+680    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x23: result = 'd'; break;
		case 0x24: result = 'e'; break;
 8e4:	95 e6       	ldi	r25, 0x65	; 101
 8e6:	52 c1       	rjmp	.+676    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x2B: result = 'f'; break;
 8e8:	96 e6       	ldi	r25, 0x66	; 102
 8ea:	50 c1       	rjmp	.+672    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x34: result = 'g'; break;
 8ec:	97 e6       	ldi	r25, 0x67	; 103
 8ee:	4e c1       	rjmp	.+668    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x33: result = 'h'; break;
 8f0:	98 e6       	ldi	r25, 0x68	; 104
 8f2:	4c c1       	rjmp	.+664    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x43: result = 'i'; break;
 8f4:	99 e6       	ldi	r25, 0x69	; 105
 8f6:	4a c1       	rjmp	.+660    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x3B: result = 'j'; break;
 8f8:	9a e6       	ldi	r25, 0x6A	; 106
 8fa:	48 c1       	rjmp	.+656    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x42: result = 'k'; break;
 8fc:	9b e6       	ldi	r25, 0x6B	; 107
 8fe:	46 c1       	rjmp	.+652    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x4B: result = 'l'; break;
 900:	9c e6       	ldi	r25, 0x6C	; 108
 902:	44 c1       	rjmp	.+648    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x3A: result = 'm'; break;
 904:	9d e6       	ldi	r25, 0x6D	; 109
 906:	42 c1       	rjmp	.+644    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x31: result = 'n'; break;
 908:	9e e6       	ldi	r25, 0x6E	; 110
 90a:	40 c1       	rjmp	.+640    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x44: result = 'o'; break;
 90c:	9f e6       	ldi	r25, 0x6F	; 111
 90e:	3e c1       	rjmp	.+636    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x4D: result = 'p'; break;
 910:	90 e7       	ldi	r25, 0x70	; 112
 912:	3c c1       	rjmp	.+632    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x15: result = 'q'; break;
 914:	91 e7       	ldi	r25, 0x71	; 113
 916:	3a c1       	rjmp	.+628    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x2D: result = 'r'; break;
 918:	92 e7       	ldi	r25, 0x72	; 114
 91a:	38 c1       	rjmp	.+624    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x1B: result = 's'; break;
 91c:	93 e7       	ldi	r25, 0x73	; 115
 91e:	36 c1       	rjmp	.+620    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x2C: result = 't'; break;
 920:	94 e7       	ldi	r25, 0x74	; 116
 922:	34 c1       	rjmp	.+616    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x3C: result = 'u'; break;
 924:	95 e7       	ldi	r25, 0x75	; 117
 926:	32 c1       	rjmp	.+612    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x2A: result = 'v'; break;
 928:	96 e7       	ldi	r25, 0x76	; 118
 92a:	30 c1       	rjmp	.+608    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x1D: result = 'w'; break;
 92c:	97 e7       	ldi	r25, 0x77	; 119
 92e:	2e c1       	rjmp	.+604    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x22: result = 'x'; break;
 930:	98 e7       	ldi	r25, 0x78	; 120
 932:	2c c1       	rjmp	.+600    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x35: result = 'y'; break;
 934:	99 e7       	ldi	r25, 0x79	; 121
 936:	2a c1       	rjmp	.+596    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x1A: result = 'z'; break;
 938:	9a e7       	ldi	r25, 0x7A	; 122
 93a:	28 c1       	rjmp	.+592    	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		
		case 0x45: result = kb_Shift ? ')' : '0'; break;
 93c:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 940:	81 11       	cpse	r24, r1
 942:	3e c1       	rjmp	.+636    	; 0xbc0 <_ZN3PS27getCharEv+0x302>
 944:	90 e3       	ldi	r25, 0x30	; 48
 946:	91 c1       	rjmp	.+802    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x16: result = kb_Shift ? '!' : '1'; break;
 948:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 94c:	81 11       	cpse	r24, r1
 94e:	3a c1       	rjmp	.+628    	; 0xbc4 <_ZN3PS27getCharEv+0x306>
 950:	91 e3       	ldi	r25, 0x31	; 49
 952:	8b c1       	rjmp	.+790    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x1E: result = kb_Shift ? '@' : '2'; break;
 954:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 958:	81 11       	cpse	r24, r1
 95a:	36 c1       	rjmp	.+620    	; 0xbc8 <_ZN3PS27getCharEv+0x30a>
 95c:	92 e3       	ldi	r25, 0x32	; 50
 95e:	85 c1       	rjmp	.+778    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x26: result = kb_Shift ? '#' : '3'; break;
 960:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 964:	81 11       	cpse	r24, r1
 966:	32 c1       	rjmp	.+612    	; 0xbcc <_ZN3PS27getCharEv+0x30e>
 968:	93 e3       	ldi	r25, 0x33	; 51
 96a:	7f c1       	rjmp	.+766    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x25: result = kb_Shift ? '$' : '4'; break;
 96c:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 970:	81 11       	cpse	r24, r1
 972:	2e c1       	rjmp	.+604    	; 0xbd0 <_ZN3PS27getCharEv+0x312>
 974:	94 e3       	ldi	r25, 0x34	; 52
 976:	79 c1       	rjmp	.+754    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x2E: result = kb_Shift ? '%' : '5'; break;
 978:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 97c:	81 11       	cpse	r24, r1
 97e:	2a c1       	rjmp	.+596    	; 0xbd4 <_ZN3PS27getCharEv+0x316>
 980:	95 e3       	ldi	r25, 0x35	; 53
 982:	73 c1       	rjmp	.+742    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x36: result = kb_Shift ? '^' : '6'; break;
 984:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 988:	81 11       	cpse	r24, r1
 98a:	26 c1       	rjmp	.+588    	; 0xbd8 <_ZN3PS27getCharEv+0x31a>
 98c:	6e c1       	rjmp	.+732    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x3D: result = kb_Shift ? '&' : '7'; break;
 98e:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 992:	81 11       	cpse	r24, r1
 994:	23 c1       	rjmp	.+582    	; 0xbdc <_ZN3PS27getCharEv+0x31e>
 996:	97 e3       	ldi	r25, 0x37	; 55
 998:	68 c1       	rjmp	.+720    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x3E: result = kb_Shift ? '*' : '8'; break;
 99a:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 99e:	81 11       	cpse	r24, r1
 9a0:	1f c1       	rjmp	.+574    	; 0xbe0 <_ZN3PS27getCharEv+0x322>
 9a2:	98 e3       	ldi	r25, 0x38	; 56
 9a4:	62 c1       	rjmp	.+708    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x46: result = kb_Shift ? '(' : '9'; break;
 9a6:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 9aa:	81 11       	cpse	r24, r1
 9ac:	1b c1       	rjmp	.+566    	; 0xbe4 <_ZN3PS27getCharEv+0x326>
 9ae:	99 e3       	ldi	r25, 0x39	; 57
 9b0:	5c c1       	rjmp	.+696    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		
		case 0x0E: result = kb_Shift ? '~' : '`'; break;
 9b2:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 9b6:	81 11       	cpse	r24, r1
 9b8:	17 c1       	rjmp	.+558    	; 0xbe8 <_ZN3PS27getCharEv+0x32a>
 9ba:	90 e6       	ldi	r25, 0x60	; 96
 9bc:	56 c1       	rjmp	.+684    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x4E: result = kb_Shift ? '_' : '-'; break;
 9be:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 9c2:	81 11       	cpse	r24, r1
 9c4:	13 c1       	rjmp	.+550    	; 0xbec <_ZN3PS27getCharEv+0x32e>
 9c6:	9d e2       	ldi	r25, 0x2D	; 45
 9c8:	50 c1       	rjmp	.+672    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x55: result = kb_Shift ? '+' : '='; break;
 9ca:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 9ce:	81 11       	cpse	r24, r1
 9d0:	0f c1       	rjmp	.+542    	; 0xbf0 <_ZN3PS27getCharEv+0x332>
 9d2:	9d e3       	ldi	r25, 0x3D	; 61
 9d4:	4a c1       	rjmp	.+660    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x5D: result = kb_Shift ? '|' : '\\'; break;
 9d6:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 9da:	81 11       	cpse	r24, r1
 9dc:	0b c1       	rjmp	.+534    	; 0xbf4 <_ZN3PS27getCharEv+0x336>
 9de:	9c e5       	ldi	r25, 0x5C	; 92
 9e0:	44 c1       	rjmp	.+648    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x54: result = kb_Shift ? '{' : '['; break;
 9e2:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 9e6:	81 11       	cpse	r24, r1
 9e8:	07 c1       	rjmp	.+526    	; 0xbf8 <_ZN3PS27getCharEv+0x33a>
 9ea:	9b e5       	ldi	r25, 0x5B	; 91
 9ec:	3e c1       	rjmp	.+636    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x5B: result = kb_Shift ? '}' : ']'; break;
 9ee:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 9f2:	81 11       	cpse	r24, r1
 9f4:	03 c1       	rjmp	.+518    	; 0xbfc <_ZN3PS27getCharEv+0x33e>
 9f6:	9d e5       	ldi	r25, 0x5D	; 93
 9f8:	38 c1       	rjmp	.+624    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x4C: result = kb_Shift ? ':' : ';'; break;
 9fa:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 9fe:	81 11       	cpse	r24, r1
 a00:	ff c0       	rjmp	.+510    	; 0xc00 <_ZN3PS27getCharEv+0x342>
 a02:	9b e3       	ldi	r25, 0x3B	; 59
 a04:	32 c1       	rjmp	.+612    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x52: result = kb_Shift ? '\"' : '\''; break;
 a06:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 a0a:	81 11       	cpse	r24, r1
 a0c:	fb c0       	rjmp	.+502    	; 0xc04 <_ZN3PS27getCharEv+0x346>
 a0e:	97 e2       	ldi	r25, 0x27	; 39
 a10:	2c c1       	rjmp	.+600    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x41: result = kb_Shift ? '<' : ','; break;
 a12:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 a16:	81 11       	cpse	r24, r1
 a18:	f7 c0       	rjmp	.+494    	; 0xc08 <_ZN3PS27getCharEv+0x34a>
 a1a:	9c e2       	ldi	r25, 0x2C	; 44
 a1c:	26 c1       	rjmp	.+588    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x49: result = kb_Shift ? '>' : '.'; break;
 a1e:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 a22:	81 11       	cpse	r24, r1
 a24:	f3 c0       	rjmp	.+486    	; 0xc0c <_ZN3PS27getCharEv+0x34e>
 a26:	9e e2       	ldi	r25, 0x2E	; 46
 a28:	20 c1       	rjmp	.+576    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x4A: result = kb_Shift ? '?' : '/'; break;
 a2a:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 a2e:	81 11       	cpse	r24, r1
 a30:	ef c0       	rjmp	.+478    	; 0xc10 <_ZN3PS27getCharEv+0x352>
 a32:	9f e2       	ldi	r25, 0x2F	; 47
 a34:	1a c1       	rjmp	.+564    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		
		case 0x0D: result = '\t';		break;
		case 0x5A: result = '\n';		break;
		case 0x29: result = ' ';		break;
		case 0x66: result = KB_BACKSPACE; break;
 a36:	90 e8       	ldi	r25, 0x80	; 128
 a38:	18 c1       	rjmp	.+560    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		
		case 0x58:{
			if (kb_Capslock){
 a3a:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <kb_Capslock>
 a3e:	88 23       	and	r24, r24
 a40:	21 f0       	breq	.+8      	; 0xa4a <_ZN3PS27getCharEv+0x18c>
				Lights |= (1<<2);
 a42:	8c 91       	ld	r24, X
 a44:	84 60       	ori	r24, 0x04	; 4
 a46:	8c 93       	st	X, r24
 a48:	03 c0       	rjmp	.+6      	; 0xa50 <_ZN3PS27getCharEv+0x192>
			}
			else{
				Lights &= ~(1<<2);
 a4a:	8c 91       	ld	r24, X
 a4c:	8b 7f       	andi	r24, 0xFB	; 251
 a4e:	8c 93       	st	X, r24
			}
			setLight();
 a50:	cd 01       	movw	r24, r26
 a52:	1d df       	rcall	.-454    	; 0x88e <_ZN3PS28setLightEv>
			result = 0x00;
 a54:	90 e0       	ldi	r25, 0x00	; 0
			break;
 a56:	09 c1       	rjmp	.+530    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		}
		
		case 0x77:{
			if (kb_Numlock){
 a58:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 a5c:	88 23       	and	r24, r24
 a5e:	21 f0       	breq	.+8      	; 0xa68 <_ZN3PS27getCharEv+0x1aa>
				Lights |= (1<<1);
 a60:	8c 91       	ld	r24, X
 a62:	82 60       	ori	r24, 0x02	; 2
 a64:	8c 93       	st	X, r24
 a66:	03 c0       	rjmp	.+6      	; 0xa6e <_ZN3PS27getCharEv+0x1b0>
			}
			else{
				Lights &= ~(1<<1);
 a68:	8c 91       	ld	r24, X
 a6a:	8d 7f       	andi	r24, 0xFD	; 253
 a6c:	8c 93       	st	X, r24
			}
			setLight();
 a6e:	cd 01       	movw	r24, r26
 a70:	0e df       	rcall	.-484    	; 0x88e <_ZN3PS28setLightEv>
			result = 0x00;
 a72:	90 e0       	ldi	r25, 0x00	; 0
			break;
 a74:	fa c0       	rjmp	.+500    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		}
		
		case 0x7E:{
			if (kb_ScrollLock){
 a76:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <kb_ScrollLock>
 a7a:	88 23       	and	r24, r24
 a7c:	21 f0       	breq	.+8      	; 0xa86 <_ZN3PS27getCharEv+0x1c8>
				Lights |= (1<<0);
 a7e:	8c 91       	ld	r24, X
 a80:	81 60       	ori	r24, 0x01	; 1
 a82:	8c 93       	st	X, r24
 a84:	03 c0       	rjmp	.+6      	; 0xa8c <_ZN3PS27getCharEv+0x1ce>
			}
			else{
				Lights &= ~(1<<0);
 a86:	8c 91       	ld	r24, X
 a88:	8e 7f       	andi	r24, 0xFE	; 254
 a8a:	8c 93       	st	X, r24
			}
			setLight();
 a8c:	cd 01       	movw	r24, r26
 a8e:	ff de       	rcall	.-514    	; 0x88e <_ZN3PS28setLightEv>
			result = 0x00;
 a90:	90 e0       	ldi	r25, 0x00	; 0
			break;	
 a92:	eb c0       	rjmp	.+470    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		}
		case 0x7C: result = '*'; break;
 a94:	9a e2       	ldi	r25, 0x2A	; 42
 a96:	e9 c0       	rjmp	.+466    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x7B: result = '-'; break;
 a98:	9d e2       	ldi	r25, 0x2D	; 45
 a9a:	e7 c0       	rjmp	.+462    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x79: result = '+'; break;
 a9c:	9b e2       	ldi	r25, 0x2B	; 43
 a9e:	e5 c0       	rjmp	.+458    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x71:
			if(kb_Extend) result = KB_DELETE;
 aa0:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 aa4:	81 11       	cpse	r24, r1
 aa6:	b6 c0       	rjmp	.+364    	; 0xc14 <_ZN3PS27getCharEv+0x356>
			else result = kb_Numlock ? '.' : 0x00;
 aa8:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 aac:	81 11       	cpse	r24, r1
 aae:	b4 c0       	rjmp	.+360    	; 0xc18 <_ZN3PS27getCharEv+0x35a>
 ab0:	90 e0       	ldi	r25, 0x00	; 0
 ab2:	db c0       	rjmp	.+438    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x70:
			if(kb_Extend) result = KB_INSERT;
 ab4:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 ab8:	81 11       	cpse	r24, r1
 aba:	b0 c0       	rjmp	.+352    	; 0xc1c <_ZN3PS27getCharEv+0x35e>
			else result = kb_Numlock ? '0' : 0x00;
 abc:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 ac0:	81 11       	cpse	r24, r1
 ac2:	ae c0       	rjmp	.+348    	; 0xc20 <_ZN3PS27getCharEv+0x362>
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	d1 c0       	rjmp	.+418    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x69:
			if(kb_Extend) result = KB_END;
 ac8:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 acc:	81 11       	cpse	r24, r1
 ace:	aa c0       	rjmp	.+340    	; 0xc24 <_ZN3PS27getCharEv+0x366>
			else result = kb_Numlock ? '1' : 0x00;
 ad0:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 ad4:	81 11       	cpse	r24, r1
 ad6:	a8 c0       	rjmp	.+336    	; 0xc28 <_ZN3PS27getCharEv+0x36a>
 ad8:	90 e0       	ldi	r25, 0x00	; 0
 ada:	c7 c0       	rjmp	.+398    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x72:
			if(kb_Extend) result = KB_DOWN;
 adc:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 ae0:	81 11       	cpse	r24, r1
 ae2:	a4 c0       	rjmp	.+328    	; 0xc2c <_ZN3PS27getCharEv+0x36e>
			else result = kb_Numlock ? '2' : 0x00;
 ae4:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 ae8:	81 11       	cpse	r24, r1
 aea:	a2 c0       	rjmp	.+324    	; 0xc30 <_ZN3PS27getCharEv+0x372>
 aec:	90 e0       	ldi	r25, 0x00	; 0
 aee:	bd c0       	rjmp	.+378    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x7A:
			if(kb_Extend) result = KB_PG_DN;
 af0:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 af4:	81 11       	cpse	r24, r1
 af6:	9e c0       	rjmp	.+316    	; 0xc34 <_ZN3PS27getCharEv+0x376>
			else result = kb_Numlock ? '3' : 0x00;
 af8:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 afc:	81 11       	cpse	r24, r1
 afe:	9c c0       	rjmp	.+312    	; 0xc38 <_ZN3PS27getCharEv+0x37a>
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	b3 c0       	rjmp	.+358    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x6B:
			if(kb_Extend) result = KB_LEFT;
 b04:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 b08:	81 11       	cpse	r24, r1
 b0a:	98 c0       	rjmp	.+304    	; 0xc3c <_ZN3PS27getCharEv+0x37e>
			else result = kb_Numlock ? '4' : 0x00;
 b0c:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 b10:	81 11       	cpse	r24, r1
 b12:	96 c0       	rjmp	.+300    	; 0xc40 <_ZN3PS27getCharEv+0x382>
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	a9 c0       	rjmp	.+338    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x73:
			result = kb_Numlock ? '5' : 0x00;
 b18:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 b1c:	81 11       	cpse	r24, r1
 b1e:	92 c0       	rjmp	.+292    	; 0xc44 <_ZN3PS27getCharEv+0x386>
 b20:	90 e0       	ldi	r25, 0x00	; 0
 b22:	a3 c0       	rjmp	.+326    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x74:
			if(kb_Extend) result = KB_RIGHT;
 b24:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 b28:	81 11       	cpse	r24, r1
 b2a:	8e c0       	rjmp	.+284    	; 0xc48 <_ZN3PS27getCharEv+0x38a>
			else result = kb_Numlock ? '6' : 0x00;
 b2c:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 b30:	81 11       	cpse	r24, r1
 b32:	8c c0       	rjmp	.+280    	; 0xc4c <_ZN3PS27getCharEv+0x38e>
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	99 c0       	rjmp	.+306    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x6C:
			if(kb_Extend) result = KB_HOME;
 b38:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 b3c:	81 11       	cpse	r24, r1
 b3e:	88 c0       	rjmp	.+272    	; 0xc50 <_ZN3PS27getCharEv+0x392>
			else result = kb_Numlock ? '7' : 0x00;
 b40:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 b44:	81 11       	cpse	r24, r1
 b46:	86 c0       	rjmp	.+268    	; 0xc54 <_ZN3PS27getCharEv+0x396>
 b48:	90 e0       	ldi	r25, 0x00	; 0
 b4a:	8f c0       	rjmp	.+286    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x75:
			if(kb_Extend) result = KB_UP;
 b4c:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 b50:	81 11       	cpse	r24, r1
 b52:	82 c0       	rjmp	.+260    	; 0xc58 <_ZN3PS27getCharEv+0x39a>
			else result = kb_Numlock ? '8' : 0x00;
 b54:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 b58:	81 11       	cpse	r24, r1
 b5a:	80 c0       	rjmp	.+256    	; 0xc5c <_ZN3PS27getCharEv+0x39e>
 b5c:	90 e0       	ldi	r25, 0x00	; 0
 b5e:	85 c0       	rjmp	.+266    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x7D:
			if(kb_Extend) result = KB_PG_UP;
 b60:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <kb_Extend>
 b64:	81 11       	cpse	r24, r1
 b66:	7c c0       	rjmp	.+248    	; 0xc60 <_ZN3PS27getCharEv+0x3a2>
			else result = kb_Numlock ? '9' : 0x00;
 b68:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <kb_Numlock>
 b6c:	81 11       	cpse	r24, r1
 b6e:	7a c0       	rjmp	.+244    	; 0xc64 <_ZN3PS27getCharEv+0x3a6>
 b70:	90 e0       	ldi	r25, 0x00	; 0
 b72:	7b c0       	rjmp	.+246    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
 b74:	2f ef       	ldi	r18, 0xFF	; 255
 b76:	84 e3       	ldi	r24, 0x34	; 52
 b78:	9c e0       	ldi	r25, 0x0C	; 12
 b7a:	21 50       	subi	r18, 0x01	; 1
 b7c:	80 40       	sbci	r24, 0x00	; 0
 b7e:	90 40       	sbci	r25, 0x00	; 0
 b80:	e1 f7       	brne	.-8      	; 0xb7a <_ZN3PS27getCharEv+0x2bc>
 b82:	00 c0       	rjmp	.+0      	; 0xb84 <_ZN3PS27getCharEv+0x2c6>
 b84:	00 00       	nop
			break;
		
		
		default:{
			result = 0x00;
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	70 c0       	rjmp	.+224    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>

uint8_t PS2::getChar(){
	uint8_t result;
	result = char_Received;
	switch(result){
		case 0x1C: result = 'a'; break;
 b8a:	91 e6       	ldi	r25, 0x61	; 97
			result = 0x00;
			_delay_ms(500);
		}
	}
	if ((result>= 'a') && (result <= 'z')){
		if((kb_Shift && !kb_Capslock) || (!kb_Shift && kb_Capslock)){
 b8c:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 b90:	88 23       	and	r24, r24
 b92:	29 f0       	breq	.+10     	; 0xb9e <_ZN3PS27getCharEv+0x2e0>
 b94:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <kb_Capslock>
 b98:	88 23       	and	r24, r24
 b9a:	09 f4       	brne	.+2      	; 0xb9e <_ZN3PS27getCharEv+0x2e0>
 b9c:	65 c0       	rjmp	.+202    	; 0xc68 <_ZN3PS27getCharEv+0x3aa>
 b9e:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <kb_Shift>
 ba2:	81 11       	cpse	r24, r1
 ba4:	62 c0       	rjmp	.+196    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
 ba6:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <kb_Capslock>
 baa:	81 11       	cpse	r24, r1
 bac:	5d c0       	rjmp	.+186    	; 0xc68 <_ZN3PS27getCharEv+0x3aa>
 bae:	5d c0       	rjmp	.+186    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
uint8_t PS2::getChar(){
	uint8_t result;
	result = char_Received;
	switch(result){
		case 0x1C: result = 'a'; break;
		case 0x32: result = 'b'; break;
 bb0:	92 e6       	ldi	r25, 0x62	; 98
 bb2:	ec cf       	rjmp	.-40     	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x21: result = 'c'; break;
		case 0x23: result = 'd'; break;
 bb4:	94 e6       	ldi	r25, 0x64	; 100
 bb6:	ea cf       	rjmp	.-44     	; 0xb8c <_ZN3PS27getCharEv+0x2ce>
		case 0x52: result = kb_Shift ? '\"' : '\''; break;
		case 0x41: result = kb_Shift ? '<' : ','; break;
		case 0x49: result = kb_Shift ? '>' : '.'; break;
		case 0x4A: result = kb_Shift ? '?' : '/'; break;
		
		case 0x0D: result = '\t';		break;
 bb8:	99 e0       	ldi	r25, 0x09	; 9
 bba:	57 c0       	rjmp	.+174    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x5A: result = '\n';		break;
		case 0x29: result = ' ';		break;
 bbc:	90 e2       	ldi	r25, 0x20	; 32
 bbe:	55 c0       	rjmp	.+170    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x1D: result = 'w'; break;
		case 0x22: result = 'x'; break;
		case 0x35: result = 'y'; break;
		case 0x1A: result = 'z'; break;
		
		case 0x45: result = kb_Shift ? ')' : '0'; break;
 bc0:	99 e2       	ldi	r25, 0x29	; 41
 bc2:	53 c0       	rjmp	.+166    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x16: result = kb_Shift ? '!' : '1'; break;
 bc4:	91 e2       	ldi	r25, 0x21	; 33
 bc6:	51 c0       	rjmp	.+162    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x1E: result = kb_Shift ? '@' : '2'; break;
 bc8:	90 e4       	ldi	r25, 0x40	; 64
 bca:	4f c0       	rjmp	.+158    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x26: result = kb_Shift ? '#' : '3'; break;
 bcc:	93 e2       	ldi	r25, 0x23	; 35
 bce:	4d c0       	rjmp	.+154    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x25: result = kb_Shift ? '$' : '4'; break;
 bd0:	94 e2       	ldi	r25, 0x24	; 36
 bd2:	4b c0       	rjmp	.+150    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x2E: result = kb_Shift ? '%' : '5'; break;
 bd4:	95 e2       	ldi	r25, 0x25	; 37
 bd6:	49 c0       	rjmp	.+146    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x36: result = kb_Shift ? '^' : '6'; break;
 bd8:	9e e5       	ldi	r25, 0x5E	; 94
 bda:	47 c0       	rjmp	.+142    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x3D: result = kb_Shift ? '&' : '7'; break;
 bdc:	96 e2       	ldi	r25, 0x26	; 38
 bde:	45 c0       	rjmp	.+138    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x3E: result = kb_Shift ? '*' : '8'; break;
 be0:	9a e2       	ldi	r25, 0x2A	; 42
 be2:	43 c0       	rjmp	.+134    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x46: result = kb_Shift ? '(' : '9'; break;
 be4:	98 e2       	ldi	r25, 0x28	; 40
 be6:	41 c0       	rjmp	.+130    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		
		case 0x0E: result = kb_Shift ? '~' : '`'; break;
 be8:	9e e7       	ldi	r25, 0x7E	; 126
 bea:	3f c0       	rjmp	.+126    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x4E: result = kb_Shift ? '_' : '-'; break;
 bec:	9f e5       	ldi	r25, 0x5F	; 95
 bee:	3d c0       	rjmp	.+122    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x55: result = kb_Shift ? '+' : '='; break;
 bf0:	9b e2       	ldi	r25, 0x2B	; 43
 bf2:	3b c0       	rjmp	.+118    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x5D: result = kb_Shift ? '|' : '\\'; break;
 bf4:	9c e7       	ldi	r25, 0x7C	; 124
 bf6:	39 c0       	rjmp	.+114    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x54: result = kb_Shift ? '{' : '['; break;
 bf8:	9b e7       	ldi	r25, 0x7B	; 123
 bfa:	37 c0       	rjmp	.+110    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x5B: result = kb_Shift ? '}' : ']'; break;
 bfc:	9d e7       	ldi	r25, 0x7D	; 125
 bfe:	35 c0       	rjmp	.+106    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x4C: result = kb_Shift ? ':' : ';'; break;
 c00:	9a e3       	ldi	r25, 0x3A	; 58
 c02:	33 c0       	rjmp	.+102    	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x52: result = kb_Shift ? '\"' : '\''; break;
 c04:	92 e2       	ldi	r25, 0x22	; 34
 c06:	31 c0       	rjmp	.+98     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x41: result = kb_Shift ? '<' : ','; break;
 c08:	9c e3       	ldi	r25, 0x3C	; 60
 c0a:	2f c0       	rjmp	.+94     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x49: result = kb_Shift ? '>' : '.'; break;
 c0c:	9e e3       	ldi	r25, 0x3E	; 62
 c0e:	2d c0       	rjmp	.+90     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		case 0x4A: result = kb_Shift ? '?' : '/'; break;
 c10:	9f e3       	ldi	r25, 0x3F	; 63
 c12:	2b c0       	rjmp	.+86     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
		}
		case 0x7C: result = '*'; break;
		case 0x7B: result = '-'; break;
		case 0x79: result = '+'; break;
		case 0x71:
			if(kb_Extend) result = KB_DELETE;
 c14:	94 e8       	ldi	r25, 0x84	; 132
 c16:	29 c0       	rjmp	.+82     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '.' : 0x00;
 c18:	9e e2       	ldi	r25, 0x2E	; 46
 c1a:	27 c0       	rjmp	.+78     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x70:
			if(kb_Extend) result = KB_INSERT;
 c1c:	93 e8       	ldi	r25, 0x83	; 131
 c1e:	25 c0       	rjmp	.+74     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '0' : 0x00;
 c20:	90 e3       	ldi	r25, 0x30	; 48
 c22:	23 c0       	rjmp	.+70     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x69:
			if(kb_Extend) result = KB_END;
 c24:	96 e8       	ldi	r25, 0x86	; 134
 c26:	21 c0       	rjmp	.+66     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '1' : 0x00;
 c28:	91 e3       	ldi	r25, 0x31	; 49
 c2a:	1f c0       	rjmp	.+62     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x72:
			if(kb_Extend) result = KB_DOWN;
 c2c:	92 e8       	ldi	r25, 0x82	; 130
 c2e:	1d c0       	rjmp	.+58     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '2' : 0x00;
 c30:	92 e3       	ldi	r25, 0x32	; 50
 c32:	1b c0       	rjmp	.+54     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x7A:
			if(kb_Extend) result = KB_PG_DN;
 c34:	98 e8       	ldi	r25, 0x88	; 136
 c36:	19 c0       	rjmp	.+50     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '3' : 0x00;
 c38:	93 e3       	ldi	r25, 0x33	; 51
 c3a:	17 c0       	rjmp	.+46     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x6B:
			if(kb_Extend) result = KB_LEFT;
 c3c:	93 e8       	ldi	r25, 0x83	; 131
 c3e:	15 c0       	rjmp	.+42     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '4' : 0x00;
 c40:	94 e3       	ldi	r25, 0x34	; 52
 c42:	13 c0       	rjmp	.+38     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x73:
			result = kb_Numlock ? '5' : 0x00;
 c44:	95 e3       	ldi	r25, 0x35	; 53
 c46:	11 c0       	rjmp	.+34     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x74:
			if(kb_Extend) result = KB_RIGHT;
 c48:	94 e8       	ldi	r25, 0x84	; 132
 c4a:	0f c0       	rjmp	.+30     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '6' : 0x00;
 c4c:	96 e3       	ldi	r25, 0x36	; 54
 c4e:	0d c0       	rjmp	.+26     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x6C:
			if(kb_Extend) result = KB_HOME;
 c50:	95 e8       	ldi	r25, 0x85	; 133
 c52:	0b c0       	rjmp	.+22     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '7' : 0x00;
 c54:	97 e3       	ldi	r25, 0x37	; 55
 c56:	09 c0       	rjmp	.+18     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x75:
			if(kb_Extend) result = KB_UP;
 c58:	91 e8       	ldi	r25, 0x81	; 129
 c5a:	07 c0       	rjmp	.+14     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '8' : 0x00;
 c5c:	98 e3       	ldi	r25, 0x38	; 56
 c5e:	05 c0       	rjmp	.+10     	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			break;
		case 0x7D:
			if(kb_Extend) result = KB_PG_UP;
 c60:	97 e8       	ldi	r25, 0x87	; 135
 c62:	03 c0       	rjmp	.+6      	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			else result = kb_Numlock ? '9' : 0x00;
 c64:	99 e3       	ldi	r25, 0x39	; 57
 c66:	01 c0       	rjmp	.+2      	; 0xc6a <_ZN3PS27getCharEv+0x3ac>
			_delay_ms(500);
		}
	}
	if ((result>= 'a') && (result <= 'z')){
		if((kb_Shift && !kb_Capslock) || (!kb_Shift && kb_Capslock)){
			result = result + ('A' - 'a');
 c68:	90 52       	subi	r25, 0x20	; 32
		}
	}
	char_Received = 0x00;
 c6a:	10 92 a9 02 	sts	0x02A9, r1	; 0x8002a9 <char_Received>
	return result;
}
 c6e:	89 2f       	mov	r24, r25
 c70:	08 95       	ret

00000c72 <__vector_1>:


ISR(INT0_vect){
 c72:	1f 92       	push	r1
 c74:	0f 92       	push	r0
 c76:	0f b6       	in	r0, 0x3f	; 63
 c78:	0f 92       	push	r0
 c7a:	11 24       	eor	r1, r1
 c7c:	2f 93       	push	r18
 c7e:	3f 93       	push	r19
 c80:	8f 93       	push	r24
 c82:	9f 93       	push	r25
	//Send data
	if (cmd_InProgress){
 c84:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <cmd_InProgress>
 c88:	88 23       	and	r24, r24
 c8a:	09 f4       	brne	.+2      	; 0xc8e <__vector_1+0x1c>
 c8c:	44 c0       	rjmp	.+136    	; 0xd16 <__vector_1+0xa4>
		cmd_Count++;
 c8e:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <cmd_Count>
 c92:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <cmd_Count+0x1>
 c96:	01 96       	adiw	r24, 0x01	; 1
 c98:	90 93 a0 02 	sts	0x02A0, r25	; 0x8002a0 <cmd_Count+0x1>
 c9c:	80 93 9f 02 	sts	0x029F, r24	; 0x80029f <cmd_Count>
		switch(cmd_Count){
 ca0:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <cmd_Count>
 ca4:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <cmd_Count+0x1>
 ca8:	8a 30       	cpi	r24, 0x0A	; 10
 caa:	91 05       	cpc	r25, r1
 cac:	34 f4       	brge	.+12     	; 0xcba <__vector_1+0x48>
 cae:	82 30       	cpi	r24, 0x02	; 2
 cb0:	91 05       	cpc	r25, r1
 cb2:	64 f4       	brge	.+24     	; 0xccc <__vector_1+0x5a>
 cb4:	01 97       	sbiw	r24, 0x01	; 1
 cb6:	41 f0       	breq	.+16     	; 0xcc8 <__vector_1+0x56>
 cb8:	c9 c0       	rjmp	.+402    	; 0xe4c <__vector_1+0x1da>
 cba:	8b 30       	cpi	r24, 0x0B	; 11
 cbc:	91 05       	cpc	r25, r1
 cbe:	e9 f0       	breq	.+58     	; 0xcfa <__vector_1+0x88>
 cc0:	a4 f0       	brlt	.+40     	; 0xcea <__vector_1+0x78>
 cc2:	0c 97       	sbiw	r24, 0x0c	; 12
 cc4:	e9 f0       	breq	.+58     	; 0xd00 <__vector_1+0x8e>
 cc6:	c2 c0       	rjmp	.+388    	; 0xe4c <__vector_1+0x1da>
			case 1:{ //Start bit
				PORT_KB &= ~(1<<DATA_PIN);
 cc8:	93 98       	cbi	0x12, 3	; 18
				break;
 cca:	c0 c0       	rjmp	.+384    	; 0xe4c <__vector_1+0x1da>
			}
			
			case 2: case 3: case 4: case 5: case 6: case 7: case 8: case 9:{ //Data bits
				if (cmd_Value & 0x01){
 ccc:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <cmd_Value>
 cd0:	80 ff       	sbrs	r24, 0
 cd2:	02 c0       	rjmp	.+4      	; 0xcd8 <__vector_1+0x66>
					PORT_KB |= (1<<DATA_PIN);
 cd4:	93 9a       	sbi	0x12, 3	; 18
 cd6:	01 c0       	rjmp	.+2      	; 0xcda <__vector_1+0x68>
				}
				else{
					PORT_KB &= ~(1<<DATA_PIN);
 cd8:	93 98       	cbi	0x12, 3	; 18
				}
				cmd_Value = cmd_Value >> 1;
 cda:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <cmd_Value>
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	95 95       	asr	r25
 ce2:	87 95       	ror	r24
 ce4:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <cmd_Value>
				break;
 ce8:	b1 c0       	rjmp	.+354    	; 0xe4c <__vector_1+0x1da>
			}
			
			case 10: {
				if (cmd_Parity){
 cea:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <cmd_Parity>
 cee:	88 23       	and	r24, r24
 cf0:	11 f0       	breq	.+4      	; 0xcf6 <__vector_1+0x84>
					PORT_KB |= (1<<DATA_PIN);
 cf2:	93 9a       	sbi	0x12, 3	; 18
 cf4:	ab c0       	rjmp	.+342    	; 0xe4c <__vector_1+0x1da>
				}
				else{
					PORT_KB &= ~(1<<DATA_PIN);
 cf6:	93 98       	cbi	0x12, 3	; 18
 cf8:	a9 c0       	rjmp	.+338    	; 0xe4c <__vector_1+0x1da>
				}
				break;
			}
			
			case 11:{ //Stop bit
				PORT_KB |= (1<<DATA_PIN);
 cfa:	93 9a       	sbi	0x12, 3	; 18
				DDR_KB  &= ~(1<<DATA_PIN); //Ready to receive data from KB
 cfc:	8b 98       	cbi	0x11, 3	; 17
				break;
 cfe:	a6 c0       	rjmp	.+332    	; 0xe4c <__vector_1+0x1da>
			}
			
			case 12:{ //ACK from KB
				if (!(PIND & (1<<DATA_PIN))){
 d00:	83 99       	sbic	0x10, 3	; 16
 d02:	03 c0       	rjmp	.+6      	; 0xd0a <__vector_1+0x98>
					cmd_ACKValue = 0;
 d04:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <cmd_ACKValue>
 d08:	03 c0       	rjmp	.+6      	; 0xd10 <__vector_1+0x9e>
				}
				else{
					cmd_ACKValue = 1;
 d0a:	81 e0       	ldi	r24, 0x01	; 1
 d0c:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <cmd_ACKValue>
				}
				cmd_InProgress = false;
 d10:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <cmd_InProgress>
 d14:	9b c0       	rjmp	.+310    	; 0xe4c <__vector_1+0x1da>
		}
		return ;
	}
	//Get Data
	int value;
	if (!(PIND & (1<<DATA_PIN))){
 d16:	90 b3       	in	r25, 0x10	; 16
	}
	else{
		value = 1;
	}
	
	if (char_Count > 0 && char_Count < 11){
 d18:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <char_Count>
 d1c:	88 23       	and	r24, r24
 d1e:	29 f0       	breq	.+10     	; 0xd2a <__vector_1+0xb8>
 d20:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <char_Count>
 d24:	8b 30       	cpi	r24, 0x0B	; 11
 d26:	08 f4       	brcc	.+2      	; 0xd2a <__vector_1+0xb8>
 d28:	7f c0       	rjmp	.+254    	; 0xe28 <__vector_1+0x1b6>
		char_Current |= (value << (char_Count - 1));
	}
	char_Count++;
 d2a:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <char_Count>
 d2e:	8f 5f       	subi	r24, 0xFF	; 255
 d30:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <char_Count>
	
	if (char_Count == 11){
 d34:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <char_Count>
 d38:	8b 30       	cpi	r24, 0x0B	; 11
 d3a:	09 f0       	breq	.+2      	; 0xd3e <__vector_1+0xcc>
 d3c:	87 c0       	rjmp	.+270    	; 0xe4c <__vector_1+0x1da>
		switch(char_Current){
 d3e:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <char_Current>
 d42:	87 37       	cpi	r24, 0x77	; 119
 d44:	09 f4       	brne	.+2      	; 0xd48 <__vector_1+0xd6>
 d46:	40 c0       	rjmp	.+128    	; 0xdc8 <__vector_1+0x156>
 d48:	48 f4       	brcc	.+18     	; 0xd5c <__vector_1+0xea>
 d4a:	88 35       	cpi	r24, 0x58	; 88
 d4c:	09 f4       	brne	.+2      	; 0xd50 <__vector_1+0xde>
 d4e:	4d c0       	rjmp	.+154    	; 0xdea <__vector_1+0x178>
 d50:	89 35       	cpi	r24, 0x59	; 89
 d52:	b9 f0       	breq	.+46     	; 0xd82 <__vector_1+0x110>
 d54:	82 31       	cpi	r24, 0x12	; 18
 d56:	09 f0       	breq	.+2      	; 0xd5a <__vector_1+0xe8>
 d58:	59 c0       	rjmp	.+178    	; 0xe0c <__vector_1+0x19a>
 d5a:	13 c0       	rjmp	.+38     	; 0xd82 <__vector_1+0x110>
 d5c:	80 3e       	cpi	r24, 0xE0	; 224
 d5e:	d1 f0       	breq	.+52     	; 0xd94 <__vector_1+0x122>
 d60:	18 f4       	brcc	.+6      	; 0xd68 <__vector_1+0xf6>
 d62:	8e 37       	cpi	r24, 0x7E	; 126
 d64:	01 f1       	breq	.+64     	; 0xda6 <__vector_1+0x134>
 d66:	52 c0       	rjmp	.+164    	; 0xe0c <__vector_1+0x19a>
 d68:	80 3f       	cpi	r24, 0xF0	; 240
 d6a:	19 f0       	breq	.+6      	; 0xd72 <__vector_1+0x100>
 d6c:	8a 3f       	cpi	r24, 0xFA	; 250
 d6e:	29 f0       	breq	.+10     	; 0xd7a <__vector_1+0x108>
 d70:	4d c0       	rjmp	.+154    	; 0xe0c <__vector_1+0x19a>
			case 0xF0: { 
				kb_Release = true;
 d72:	81 e0       	ldi	r24, 0x01	; 1
 d74:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <kb_Release>
				break;
 d78:	52 c0       	rjmp	.+164    	; 0xe1e <__vector_1+0x1ac>
			}
			
			case 0xFA: { 
				cmd_ACKOk = true;
 d7a:	81 e0       	ldi	r24, 0x01	; 1
 d7c:	80 93 9b 02 	sts	0x029B, r24	; 0x80029b <cmd_ACKOk>
				break;
 d80:	4e c0       	rjmp	.+156    	; 0xe1e <__vector_1+0x1ac>
			}
			
			case 0x12:
			case 0x59: {
				kb_Shift = kb_Release ? false : true;
 d82:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <kb_Release>
 d86:	81 e0       	ldi	r24, 0x01	; 1
 d88:	89 27       	eor	r24, r25
 d8a:	80 93 a5 02 	sts	0x02A5, r24	; 0x8002a5 <kb_Shift>
				kb_Release	= false;
 d8e:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <kb_Release>
				break;
 d92:	45 c0       	rjmp	.+138    	; 0xe1e <__vector_1+0x1ac>
			}
			
			case 0xE0:{
				kb_Extend = !kb_Extend;
 d94:	90 91 a7 02 	lds	r25, 0x02A7	; 0x8002a7 <kb_Extend>
 d98:	81 e0       	ldi	r24, 0x01	; 1
 d9a:	89 27       	eor	r24, r25
 d9c:	80 93 a7 02 	sts	0x02A7, r24	; 0x8002a7 <kb_Extend>
				kb_Release = false;
 da0:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <kb_Release>
				break;
 da4:	3c c0       	rjmp	.+120    	; 0xe1e <__vector_1+0x1ac>
			}
			case 0x7E:{
				if (kb_Release){
 da6:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <kb_Release>
 daa:	88 23       	and	r24, r24
 dac:	19 f0       	breq	.+6      	; 0xdb4 <__vector_1+0x142>
					kb_Release	= false;
 dae:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <kb_Release>
 db2:	35 c0       	rjmp	.+106    	; 0xe1e <__vector_1+0x1ac>
				}
				else{
					kb_ScrollLock = !(kb_ScrollLock);
 db4:	90 91 a2 02 	lds	r25, 0x02A2	; 0x8002a2 <kb_ScrollLock>
 db8:	81 e0       	ldi	r24, 0x01	; 1
 dba:	89 27       	eor	r24, r25
 dbc:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <kb_ScrollLock>
					char_Received = char_Current;
 dc0:	8e e7       	ldi	r24, 0x7E	; 126
 dc2:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <char_Received>
 dc6:	2b c0       	rjmp	.+86     	; 0xe1e <__vector_1+0x1ac>
				}
				break;
			}
			case 0x77: {
				if (kb_Release){
 dc8:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <kb_Release>
 dcc:	88 23       	and	r24, r24
 dce:	19 f0       	breq	.+6      	; 0xdd6 <__vector_1+0x164>
					kb_Release	= false;
 dd0:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <kb_Release>
 dd4:	24 c0       	rjmp	.+72     	; 0xe1e <__vector_1+0x1ac>
				}
				else{
					kb_Numlock = !(kb_Numlock);
 dd6:	90 91 a3 02 	lds	r25, 0x02A3	; 0x8002a3 <kb_Numlock>
 dda:	81 e0       	ldi	r24, 0x01	; 1
 ddc:	89 27       	eor	r24, r25
 dde:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <kb_Numlock>
					char_Received = char_Current;
 de2:	87 e7       	ldi	r24, 0x77	; 119
 de4:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <char_Received>
 de8:	1a c0       	rjmp	.+52     	; 0xe1e <__vector_1+0x1ac>
				}
				break;
			}
			case 0x58: {
				if (kb_Release){
 dea:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <kb_Release>
 dee:	88 23       	and	r24, r24
 df0:	19 f0       	breq	.+6      	; 0xdf8 <__vector_1+0x186>
					kb_Release	= false;
 df2:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <kb_Release>
 df6:	13 c0       	rjmp	.+38     	; 0xe1e <__vector_1+0x1ac>
				}
				else{
					kb_Capslock = !(kb_Capslock);
 df8:	90 91 a4 02 	lds	r25, 0x02A4	; 0x8002a4 <kb_Capslock>
 dfc:	81 e0       	ldi	r24, 0x01	; 1
 dfe:	89 27       	eor	r24, r25
 e00:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <kb_Capslock>
					char_Received = char_Current;
 e04:	88 e5       	ldi	r24, 0x58	; 88
 e06:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <char_Received>
 e0a:	09 c0       	rjmp	.+18     	; 0xe1e <__vector_1+0x1ac>
				}
				break;
			}
			
			default: { 
				if (kb_Release){
 e0c:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <kb_Release>
 e10:	99 23       	and	r25, r25
 e12:	19 f0       	breq	.+6      	; 0xe1a <__vector_1+0x1a8>
					kb_Release = false;
 e14:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <kb_Release>
 e18:	02 c0       	rjmp	.+4      	; 0xe1e <__vector_1+0x1ac>
				}
				else{
					char_Received = char_Current;
 e1a:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <char_Received>
				}
			}
		}
		char_Current = 0;
 e1e:	10 92 aa 02 	sts	0x02AA, r1	; 0x8002aa <char_Current>
		char_Count = 0;
 e22:	10 92 a8 02 	sts	0x02A8, r1	; 0x8002a8 <char_Count>
 e26:	12 c0       	rjmp	.+36     	; 0xe4c <__vector_1+0x1da>
	else{
		value = 1;
	}
	
	if (char_Count > 0 && char_Count < 11){
		char_Current |= (value << (char_Count - 1));
 e28:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <char_Count>
 e2c:	93 fb       	bst	r25, 3
 e2e:	22 27       	eor	r18, r18
 e30:	20 f9       	bld	r18, 0
 e32:	30 e0       	ldi	r19, 0x00	; 0
 e34:	81 50       	subi	r24, 0x01	; 1
 e36:	02 c0       	rjmp	.+4      	; 0xe3c <__vector_1+0x1ca>
 e38:	22 0f       	add	r18, r18
 e3a:	33 1f       	adc	r19, r19
 e3c:	8a 95       	dec	r24
 e3e:	e2 f7       	brpl	.-8      	; 0xe38 <__vector_1+0x1c6>
 e40:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <char_Current>
 e44:	28 2b       	or	r18, r24
 e46:	20 93 aa 02 	sts	0x02AA, r18	; 0x8002aa <char_Current>
 e4a:	6f cf       	rjmp	.-290    	; 0xd2a <__vector_1+0xb8>
			}
		}
		char_Current = 0;
		char_Count = 0;
	}
 e4c:	9f 91       	pop	r25
 e4e:	8f 91       	pop	r24
 e50:	3f 91       	pop	r19
 e52:	2f 91       	pop	r18
 e54:	0f 90       	pop	r0
 e56:	0f be       	out	0x3f, r0	; 63
 e58:	0f 90       	pop	r0
 e5a:	1f 90       	pop	r1
 e5c:	18 95       	reti

00000e5e <__tablejump2__>:
 e5e:	ee 0f       	add	r30, r30
 e60:	ff 1f       	adc	r31, r31
 e62:	05 90       	lpm	r0, Z+
 e64:	f4 91       	lpm	r31, Z
 e66:	e0 2d       	mov	r30, r0
 e68:	09 94       	ijmp

00000e6a <_exit>:
 e6a:	f8 94       	cli

00000e6c <__stop_program>:
 e6c:	ff cf       	rjmp	.-2      	; 0xe6c <__stop_program>
