
Attiny13-Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000038  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000008c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000008c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000000bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000000f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000004ae  00000000  00000000  00000130  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000040c  00000000  00000000  000005de  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f8  00000000  00000000  000009ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000060  00000000  00000000  00000be4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002c0  00000000  00000000  00000c44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000157  00000000  00000000  00000f04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  0000105b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
   2:	0e c0       	rjmp	.+28     	; 0x20 <__bad_interrupt>
   4:	0d c0       	rjmp	.+26     	; 0x20 <__bad_interrupt>
   6:	0c c0       	rjmp	.+24     	; 0x20 <__bad_interrupt>
   8:	0b c0       	rjmp	.+22     	; 0x20 <__bad_interrupt>
   a:	0a c0       	rjmp	.+20     	; 0x20 <__bad_interrupt>
   c:	09 c0       	rjmp	.+18     	; 0x20 <__bad_interrupt>
   e:	08 c0       	rjmp	.+16     	; 0x20 <__bad_interrupt>
  10:	07 c0       	rjmp	.+14     	; 0x20 <__bad_interrupt>
  12:	06 c0       	rjmp	.+12     	; 0x20 <__bad_interrupt>

00000014 <__ctors_end>:
  14:	11 24       	eor	r1, r1
  16:	1f be       	out	0x3f, r1	; 63
  18:	cf e9       	ldi	r28, 0x9F	; 159
  1a:	cd bf       	out	0x3d, r28	; 61
  1c:	05 d0       	rcall	.+10     	; 0x28 <main>
  1e:	0a c0       	rjmp	.+20     	; 0x34 <_exit>

00000020 <__bad_interrupt>:
  20:	ef cf       	rjmp	.-34     	; 0x0 <__vectors>

00000022 <_Z9uart_initv>:
		}
		makeDelay(103);
	}
	PORTB |= (1<<3);
	makeDelay(103);
}
  22:	bb 9a       	sbi	0x17, 3	; 23
  24:	c3 9a       	sbi	0x18, 3	; 24
  26:	08 95       	ret

00000028 <main>:

int main(void)
{
	DDRB |= (1>>1);
  28:	87 b3       	in	r24, 0x17	; 23
  2a:	87 bb       	out	0x17, r24	; 23
	PORTB |= (1<<1);
  2c:	c1 9a       	sbi	0x18, 1	; 24
	uart_init();
  2e:	f9 df       	rcall	.-14     	; 0x22 <_Z9uart_initv>
	while (1){
		PORTB &= ~(1<<1);
  30:	c1 98       	cbi	0x18, 1	; 24
  32:	ff cf       	rjmp	.-2      	; 0x32 <main+0xa>

00000034 <_exit>:
  34:	f8 94       	cli

00000036 <__stop_program>:
  36:	ff cf       	rjmp	.-2      	; 0x36 <__stop_program>
