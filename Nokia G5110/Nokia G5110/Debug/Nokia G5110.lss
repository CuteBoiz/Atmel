
Nokia G5110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001f6  00800060  000002c8  0000035c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800256  00800256  00000552  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000552  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000584  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001235  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ed  00000000  00000000  00001885  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000051a  00000000  00000000  00002072  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  0000258c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000530  00000000  00000000  000026e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000064d  00000000  00000000  00002c18  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003265  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
  26:	67 00       	.word	0x0067	; ????

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d4 e0       	ldi	r29, 0x04	; 4
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
  34:	12 e0       	ldi	r17, 0x02	; 2
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	e8 ec       	ldi	r30, 0xC8	; 200
  3c:	f2 e0       	ldi	r31, 0x02	; 2
  3e:	02 c0       	rjmp	.+4      	; 0x44 <__SREG__+0x5>
  40:	05 90       	lpm	r0, Z+
  42:	0d 92       	st	X+, r0
  44:	a6 35       	cpi	r26, 0x56	; 86
  46:	b1 07       	cpc	r27, r17
  48:	d9 f7       	brne	.-10     	; 0x40 <__SREG__+0x1>

0000004a <__do_clear_bss>:
  4a:	22 e0       	ldi	r18, 0x02	; 2
  4c:	a6 e5       	ldi	r26, 0x56	; 86
  4e:	b2 e0       	ldi	r27, 0x02	; 2
  50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
  52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
  54:	a9 35       	cpi	r26, 0x59	; 89
  56:	b2 07       	cpc	r27, r18
  58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>

0000005a <__do_global_ctors>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	c4 e1       	ldi	r28, 0x14	; 20
  5e:	d0 e0       	ldi	r29, 0x00	; 0
  60:	03 c0       	rjmp	.+6      	; 0x68 <__do_global_ctors+0xe>
  62:	21 97       	sbiw	r28, 0x01	; 1
  64:	fe 01       	movw	r30, r28
  66:	28 d1       	rcall	.+592    	; 0x2b8 <__tablejump2__>
  68:	c3 31       	cpi	r28, 0x13	; 19
  6a:	d1 07       	cpc	r29, r17
  6c:	d1 f7       	brne	.-12     	; 0x62 <__do_global_ctors+0x8>
  6e:	02 d0       	rcall	.+4      	; 0x74 <main>
  70:	29 c1       	rjmp	.+594    	; 0x2c4 <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <main>:

Nokia5110 lcd;

int main(void)
{	
	DDRC |= (1 << 5);
  74:	a5 9a       	sbi	0x14, 5	; 20
	PORTC |= (1 << 5);
  76:	ad 9a       	sbi	0x15, 5	; 21
	lcd.begin();
  78:	86 e5       	ldi	r24, 0x56	; 86
  7a:	92 e0       	ldi	r25, 0x02	; 2
  7c:	8a d0       	rcall	.+276    	; 0x192 <_ZN9Nokia51105beginEv>
	while(1){
		lcd.setCursor(0 ,0);
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	60 e0       	ldi	r22, 0x00	; 0
  82:	86 e5       	ldi	r24, 0x56	; 86
  84:	92 e0       	ldi	r25, 0x02	; 2
  86:	4e d0       	rcall	.+156    	; 0x124 <_ZN9Nokia51109setCursorEhh>
		lcd.fillUp("PHAT");
  88:	60 e6       	ldi	r22, 0x60	; 96
  8a:	70 e0       	ldi	r23, 0x00	; 0
  8c:	86 e5       	ldi	r24, 0x56	; 86
  8e:	92 e0       	ldi	r25, 0x02	; 2
  90:	c7 d0       	rcall	.+398    	; 0x220 <_ZN9Nokia51106fillUpEPc>
		lcd.setCursor(0 ,1);
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	86 e5       	ldi	r24, 0x56	; 86
  98:	92 e0       	ldi	r25, 0x02	; 2
  9a:	44 d0       	rcall	.+136    	; 0x124 <_ZN9Nokia51109setCursorEhh>
		lcd.fillUp("VINH NGU");
  9c:	65 e6       	ldi	r22, 0x65	; 101
  9e:	70 e0       	ldi	r23, 0x00	; 0
  a0:	86 e5       	ldi	r24, 0x56	; 86
  a2:	92 e0       	ldi	r25, 0x02	; 2
  a4:	bd d0       	rcall	.+378    	; 0x220 <_ZN9Nokia51106fillUpEPc>
		lcd.setCursor(0, 3);
  a6:	43 e0       	ldi	r20, 0x03	; 3
  a8:	60 e0       	ldi	r22, 0x00	; 0
  aa:	86 e5       	ldi	r24, 0x56	; 86
  ac:	92 e0       	ldi	r25, 0x02	; 2
  ae:	3a d0       	rcall	.+116    	; 0x124 <_ZN9Nokia51109setCursorEhh>
		lcd.fillUp("Bo Linh");
  b0:	6e e6       	ldi	r22, 0x6E	; 110
  b2:	70 e0       	ldi	r23, 0x00	; 0
  b4:	86 e5       	ldi	r24, 0x56	; 86
  b6:	92 e0       	ldi	r25, 0x02	; 2
  b8:	b3 d0       	rcall	.+358    	; 0x220 <_ZN9Nokia51106fillUpEPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	8d e3       	ldi	r24, 0x3D	; 61
  be:	99 e4       	ldi	r25, 0x49	; 73
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	80 40       	sbci	r24, 0x00	; 0
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <main+0x4c>
  c8:	00 c0       	rjmp	.+0      	; 0xca <main+0x56>
  ca:	00 00       	nop
  cc:	d8 cf       	rjmp	.-80     	; 0x7e <main+0xa>

000000ce <_GLOBAL__sub_I_line>:

#include "N5110.h"

uint8_t line[84];

Nokia5110 lcd;
  ce:	86 e5       	ldi	r24, 0x56	; 86
  d0:	92 e0       	ldi	r25, 0x02	; 2
  d2:	3a d0       	rcall	.+116    	; 0x148 <_ZN9Nokia5110C1Ev>
  d4:	08 95       	ret

000000d6 <_ZN9Nokia51104sendEih>:
#include "N5110.h"
void Nokia5110::send(int type, uint8_t data){
	LCD_PORT &= ~(1 << SCE);
  d6:	c2 98       	cbi	0x18, 2	; 24
	
	if (type)
  d8:	67 2b       	or	r22, r23
  da:	11 f0       	breq	.+4      	; 0xe0 <_ZN9Nokia51104sendEih+0xa>
		LCD_PORT |= (1 << DC);
  dc:	c0 9a       	sbi	0x18, 0	; 24
  de:	14 c0       	rjmp	.+40     	; 0x108 <_ZN9Nokia51104sendEih+0x32>
	else
		LCD_PORT &= ~(1 << DC );
  e0:	c0 98       	cbi	0x18, 0	; 24
  e2:	12 c0       	rjmp	.+36     	; 0x108 <_ZN9Nokia51104sendEih+0x32>
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7 - i)) & 0x01)
  e4:	9a 01       	movw	r18, r20
  e6:	08 2e       	mov	r0, r24
  e8:	02 c0       	rjmp	.+4      	; 0xee <_ZN9Nokia51104sendEih+0x18>
  ea:	35 95       	asr	r19
  ec:	27 95       	ror	r18
  ee:	0a 94       	dec	r0
  f0:	e2 f7       	brpl	.-8      	; 0xea <_ZN9Nokia51104sendEih+0x14>
  f2:	20 ff       	sbrs	r18, 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <_ZN9Nokia51104sendEih+0x24>
			LCD_PORT |= (1 << SDIN);
  f6:	c3 9a       	sbi	0x18, 3	; 24
  f8:	01 c0       	rjmp	.+2      	; 0xfc <_ZN9Nokia51104sendEih+0x26>
		else
			LCD_PORT &= ~(1 << SDIN);
  fa:	c3 98       	cbi	0x18, 3	; 24
			
		LCD_PORT |= (1 << SCLK);
  fc:	c5 9a       	sbi	0x18, 5	; 24
		LCD_PORT &= ~(1 << SCLK);
  fe:	c5 98       	cbi	0x18, 5	; 24
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	80 f7       	brcc	.-32     	; 0xe4 <_ZN9Nokia51104sendEih+0xe>
	}
	
	LCD_PORT |= (1 << SCE);
 104:	c2 9a       	sbi	0x18, 2	; 24
}
 106:	08 95       	ret
#include "N5110.h"
void Nokia5110::send(int type, uint8_t data){
 108:	87 e0       	ldi	r24, 0x07	; 7
 10a:	90 e0       	ldi	r25, 0x00	; 0
		LCD_PORT |= (1 << DC);
	else
		LCD_PORT &= ~(1 << DC );
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7 - i)) & 0x01)
 10c:	50 e0       	ldi	r21, 0x00	; 0
 10e:	ea cf       	rjmp	.-44     	; 0xe4 <_ZN9Nokia51104sendEih+0xe>

00000110 <_ZN9Nokia511011sendCommandEh>:
	}
	
	LCD_PORT |= (1 << SCE);
}

void Nokia5110::sendCommand(uint8_t cmd){
 110:	46 2f       	mov	r20, r22
	send(PCD8544_cmd, cmd);
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	df df       	rcall	.-66     	; 0xd6 <_ZN9Nokia51104sendEih>
 118:	08 95       	ret

0000011a <_ZN9Nokia51108sendDataEh>:
}
void Nokia5110::sendData(uint8_t data){
 11a:	46 2f       	mov	r20, r22
	send(PCD8544_data, data);
 11c:	61 e0       	ldi	r22, 0x01	; 1
 11e:	70 e0       	ldi	r23, 0x00	; 0
 120:	da df       	rcall	.-76     	; 0xd6 <_ZN9Nokia51104sendEih>
 122:	08 95       	ret

00000124 <_ZN9Nokia51109setCursorEhh>:
}

void Nokia5110::setCursor(uint8_t x, uint8_t y){
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	ec 01       	movw	r28, r24
	this->cursor_x = x;
 12a:	68 83       	st	Y, r22
	this->cursor_y = y;
 12c:	49 83       	std	Y+1, r20	; 0x01
	sendCommand(0x20);
 12e:	60 e2       	ldi	r22, 0x20	; 32
 130:	ef df       	rcall	.-34     	; 0x110 <_ZN9Nokia511011sendCommandEh>
	sendCommand(0x80 | this->cursor_x);
 132:	68 81       	ld	r22, Y
 134:	60 68       	ori	r22, 0x80	; 128
 136:	ce 01       	movw	r24, r28
 138:	eb df       	rcall	.-42     	; 0x110 <_ZN9Nokia511011sendCommandEh>
	sendCommand(0x40 | this->cursor_y);
 13a:	69 81       	ldd	r22, Y+1	; 0x01
 13c:	60 64       	ori	r22, 0x40	; 64
 13e:	ce 01       	movw	r24, r28
 140:	e7 df       	rcall	.-50     	; 0x110 <_ZN9Nokia511011sendCommandEh>
}
 142:	df 91       	pop	r29
 144:	cf 91       	pop	r28
 146:	08 95       	ret

00000148 <_ZN9Nokia5110C1Ev>:
Nokia5110::Nokia5110(){
 148:	fc 01       	movw	r30, r24
	this->cursor_x = 0;
 14a:	10 82       	st	Z, r1
	this->cursor_y = 0;
 14c:	11 82       	std	Z+1, r1	; 0x01
	this->inverse_output = false;
 14e:	12 82       	std	Z+2, r1	; 0x02
	LCD_DDR |= (1 << RST) | (1 << SCE) | (1 << DC) | (1 << SDIN) | (1 << SCLK);
 150:	87 b3       	in	r24, 0x17	; 23
 152:	8f 62       	ori	r24, 0x2F	; 47
 154:	87 bb       	out	0x17, r24	; 23
	LCD_PORT |= (1 << RST) | (1 << SCE);
 156:	88 b3       	in	r24, 0x18	; 24
 158:	86 60       	ori	r24, 0x06	; 6
 15a:	88 bb       	out	0x18, r24	; 24
 15c:	08 95       	ret

0000015e <_ZN9Nokia51105resetEv>:
}

void Nokia5110::reset(){
	LCD_PORT |= (1 << RST) | (1 << SCE);
 15e:	88 b3       	in	r24, 0x18	; 24
 160:	86 60       	ori	r24, 0x06	; 6
 162:	88 bb       	out	0x18, r24	; 24
	
	LCD_PORT &= ~(1 << RST);
 164:	c1 98       	cbi	0x18, 1	; 24
	LCD_PORT |= (1 << RST);
 166:	c1 9a       	sbi	0x18, 1	; 24
 168:	08 95       	ret

0000016a <_ZN9Nokia511010clearSreenEv>:
}

void Nokia5110::clearSreen(){
 16a:	0f 93       	push	r16
 16c:	1f 93       	push	r17
 16e:	cf 93       	push	r28
 170:	df 93       	push	r29
 172:	8c 01       	movw	r16, r24
	setCursor(0, 0);
 174:	40 e0       	ldi	r20, 0x00	; 0
 176:	60 e0       	ldi	r22, 0x00	; 0
 178:	d5 df       	rcall	.-86     	; 0x124 <_ZN9Nokia51109setCursorEhh>
 17a:	c8 ef       	ldi	r28, 0xF8	; 248
 17c:	d1 e0       	ldi	r29, 0x01	; 1
	for (int i = 0; i < 504; i++)
		sendData(0x00);
 17e:	60 e0       	ldi	r22, 0x00	; 0
 180:	c8 01       	movw	r24, r16
 182:	cb df       	rcall	.-106    	; 0x11a <_ZN9Nokia51108sendDataEh>
 184:	21 97       	sbiw	r28, 0x01	; 1
	LCD_PORT |= (1 << RST);
}

void Nokia5110::clearSreen(){
	setCursor(0, 0);
	for (int i = 0; i < 504; i++)
 186:	d9 f7       	brne	.-10     	; 0x17e <_ZN9Nokia511010clearSreenEv+0x14>
		sendData(0x00);
}
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	1f 91       	pop	r17
 18e:	0f 91       	pop	r16
 190:	08 95       	ret

00000192 <_ZN9Nokia51105beginEv>:

void Nokia5110::begin(){
 192:	cf 93       	push	r28
 194:	df 93       	push	r29
 196:	ec 01       	movw	r28, r24
	this->reset();
 198:	e2 df       	rcall	.-60     	; 0x15e <_ZN9Nokia51105resetEv>
	
	this->sendCommand(0x21); // H = 1
 19a:	61 e2       	ldi	r22, 0x21	; 33
 19c:	ce 01       	movw	r24, r28
 19e:	b8 df       	rcall	.-144    	; 0x110 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x80 | 0x15); //VOP[6:0] = (VLCD - 3,06) / 0.06 (Chinh do tuong phan)
 1a0:	65 e9       	ldi	r22, 0x95	; 149
 1a2:	ce 01       	movw	r24, r28
 1a4:	b5 df       	rcall	.-150    	; 0x110 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x04); // TC0			
 1a6:	64 e0       	ldi	r22, 0x04	; 4
 1a8:	ce 01       	movw	r24, r28
 1aa:	b2 df       	rcall	.-156    	; 0x110 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x14); // Bias 1:40 - 1:34
 1ac:	64 e1       	ldi	r22, 0x14	; 20
 1ae:	ce 01       	movw	r24, r28
 1b0:	af df       	rcall	.-162    	; 0x110 <_ZN9Nokia511011sendCommandEh>
	
	this->sendCommand(0x20); //H = 0
 1b2:	60 e2       	ldi	r22, 0x20	; 32
 1b4:	ce 01       	movw	r24, r28
 1b6:	ac df       	rcall	.-168    	; 0x110 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x80);
 1b8:	60 e8       	ldi	r22, 0x80	; 128
 1ba:	ce 01       	movw	r24, r28
 1bc:	a9 df       	rcall	.-174    	; 0x110 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x40);
 1be:	60 e4       	ldi	r22, 0x40	; 64
 1c0:	ce 01       	movw	r24, r28
 1c2:	a6 df       	rcall	.-180    	; 0x110 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x0C); //Normal Mode
 1c4:	6c e0       	ldi	r22, 0x0C	; 12
 1c6:	ce 01       	movw	r24, r28
 1c8:	a3 df       	rcall	.-186    	; 0x110 <_ZN9Nokia511011sendCommandEh>
	
	this->clearSreen();
 1ca:	ce 01       	movw	r24, r28
 1cc:	ce df       	rcall	.-100    	; 0x16a <_ZN9Nokia511010clearSreenEv>
}
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <_ZN9Nokia51108sendCharEc>:
	for (i = 0; i < (14-length)*6; i++){
		this->sendData(0x00);
	}
}
void Nokia5110::sendChar(char data)
{
 1d4:	ef 92       	push	r14
 1d6:	ff 92       	push	r15
 1d8:	0f 93       	push	r16
 1da:	1f 93       	push	r17
 1dc:	cf 93       	push	r28
 1de:	df 93       	push	r29
 1e0:	7c 01       	movw	r14, r24
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	eb 01       	movw	r28, r22
 1e6:	cc 0f       	add	r28, r28
 1e8:	dd 1f       	adc	r29, r29
 1ea:	cc 0f       	add	r28, r28
 1ec:	dd 1f       	adc	r29, r29
 1ee:	6c 0f       	add	r22, r28
 1f0:	7d 1f       	adc	r23, r29
 1f2:	eb 01       	movw	r28, r22
 1f4:	ca 52       	subi	r28, 0x2A	; 42
 1f6:	d0 40       	sbci	r29, 0x00	; 0
	for(int i = 0; i < 5; i++)
 1f8:	00 e0       	ldi	r16, 0x00	; 0
 1fa:	10 e0       	ldi	r17, 0x00	; 0
	{
		this->sendData(CHARSET[int(data) - 0x20][i]);
 1fc:	69 91       	ld	r22, Y+
 1fe:	c7 01       	movw	r24, r14
 200:	8c df       	rcall	.-232    	; 0x11a <_ZN9Nokia51108sendDataEh>
		this->sendData(0x00);
	}
}
void Nokia5110::sendChar(char data)
{
	for(int i = 0; i < 5; i++)
 202:	0f 5f       	subi	r16, 0xFF	; 255
 204:	1f 4f       	sbci	r17, 0xFF	; 255
 206:	05 30       	cpi	r16, 0x05	; 5
 208:	11 05       	cpc	r17, r1
 20a:	c1 f7       	brne	.-16     	; 0x1fc <_ZN9Nokia51108sendCharEc+0x28>
	{
		this->sendData(CHARSET[int(data) - 0x20][i]);
	}
	this->sendData(0x00);
 20c:	60 e0       	ldi	r22, 0x00	; 0
 20e:	c7 01       	movw	r24, r14
 210:	84 df       	rcall	.-248    	; 0x11a <_ZN9Nokia51108sendDataEh>
}
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	ff 90       	pop	r15
 21c:	ef 90       	pop	r14
 21e:	08 95       	ret

00000220 <_ZN9Nokia51106fillUpEPc>:
	this->sendCommand(0x0C); //Normal Mode
	
	this->clearSreen();
}

void Nokia5110::fillUp(char *data){
 220:	cf 92       	push	r12
 222:	df 92       	push	r13
 224:	ef 92       	push	r14
 226:	ff 92       	push	r15
 228:	0f 93       	push	r16
 22a:	1f 93       	push	r17
 22c:	cf 93       	push	r28
 22e:	df 93       	push	r29
 230:	7c 01       	movw	r14, r24
	register int i = 0;
	int length = 0;
	while (data[i]){
 232:	fb 01       	movw	r30, r22
 234:	80 81       	ld	r24, Z
 236:	81 11       	cpse	r24, r1
 238:	05 c0       	rjmp	.+10     	; 0x244 <_ZN9Nokia51106fillUpEPc+0x24>
 23a:	2a c0       	rjmp	.+84     	; 0x290 <_ZN9Nokia51106fillUpEPc+0x70>
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
 23c:	10 16       	cp	r1, r16
 23e:	11 06       	cpc	r1, r17
 240:	e4 f0       	brlt	.+56     	; 0x27a <_ZN9Nokia51106fillUpEPc+0x5a>
 242:	0a c0       	rjmp	.+20     	; 0x258 <_ZN9Nokia51106fillUpEPc+0x38>
 244:	fb 01       	movw	r30, r22
 246:	31 96       	adiw	r30, 0x01	; 1
}

void Nokia5110::fillUp(char *data){
	register int i = 0;
	int length = 0;
	while (data[i]){
 248:	00 e0       	ldi	r16, 0x00	; 0
 24a:	10 e0       	ldi	r17, 0x00	; 0
		length++;
 24c:	0f 5f       	subi	r16, 0xFF	; 255
 24e:	1f 4f       	sbci	r17, 0xFF	; 255
}

void Nokia5110::fillUp(char *data){
	register int i = 0;
	int length = 0;
	while (data[i]){
 250:	81 91       	ld	r24, Z+
 252:	81 11       	cpse	r24, r1
 254:	fb cf       	rjmp	.-10     	; 0x24c <_ZN9Nokia51106fillUpEPc+0x2c>
 256:	f2 cf       	rjmp	.-28     	; 0x23c <_ZN9Nokia51106fillUpEPc+0x1c>
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 258:	8e e0       	ldi	r24, 0x0E	; 14
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	9c 01       	movw	r18, r24
 25e:	20 1b       	sub	r18, r16
 260:	31 0b       	sbc	r19, r17
 262:	89 01       	movw	r16, r18
 264:	c9 01       	movw	r24, r18
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	08 0f       	add	r16, r24
 26c:	19 1f       	adc	r17, r25
 26e:	00 0f       	add	r16, r16
 270:	11 1f       	adc	r17, r17
 272:	10 16       	cp	r1, r16
 274:	11 06       	cpc	r1, r17
 276:	74 f0       	brlt	.+28     	; 0x294 <_ZN9Nokia51106fillUpEPc+0x74>
 278:	16 c0       	rjmp	.+44     	; 0x2a6 <_ZN9Nokia51106fillUpEPc+0x86>
 27a:	eb 01       	movw	r28, r22
 27c:	6b 01       	movw	r12, r22
 27e:	c0 0e       	add	r12, r16
 280:	d1 1e       	adc	r13, r17
	while (data[i]){
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
 282:	69 91       	ld	r22, Y+
 284:	c7 01       	movw	r24, r14
 286:	a6 df       	rcall	.-180    	; 0x1d4 <_ZN9Nokia51108sendCharEc>
	int length = 0;
	while (data[i]){
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
 288:	cc 16       	cp	r12, r28
 28a:	dd 06       	cpc	r13, r29
 28c:	d1 f7       	brne	.-12     	; 0x282 <_ZN9Nokia51106fillUpEPc+0x62>
 28e:	e4 cf       	rjmp	.-56     	; 0x258 <_ZN9Nokia51106fillUpEPc+0x38>
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 290:	04 e5       	ldi	r16, 0x54	; 84
 292:	10 e0       	ldi	r17, 0x00	; 0
 294:	c0 e0       	ldi	r28, 0x00	; 0
 296:	d0 e0       	ldi	r29, 0x00	; 0
		this->sendData(0x00);
 298:	60 e0       	ldi	r22, 0x00	; 0
 29a:	c7 01       	movw	r24, r14
 29c:	3e df       	rcall	.-388    	; 0x11a <_ZN9Nokia51108sendDataEh>
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 29e:	21 96       	adiw	r28, 0x01	; 1
 2a0:	0c 17       	cp	r16, r28
 2a2:	1d 07       	cpc	r17, r29
 2a4:	c9 f7       	brne	.-14     	; 0x298 <_ZN9Nokia51106fillUpEPc+0x78>
		this->sendData(0x00);
	}
}
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	1f 91       	pop	r17
 2ac:	0f 91       	pop	r16
 2ae:	ff 90       	pop	r15
 2b0:	ef 90       	pop	r14
 2b2:	df 90       	pop	r13
 2b4:	cf 90       	pop	r12
 2b6:	08 95       	ret

000002b8 <__tablejump2__>:
 2b8:	ee 0f       	add	r30, r30
 2ba:	ff 1f       	adc	r31, r31
 2bc:	05 90       	lpm	r0, Z+
 2be:	f4 91       	lpm	r31, Z
 2c0:	e0 2d       	mov	r30, r0
 2c2:	09 94       	ijmp

000002c4 <_exit>:
 2c4:	f8 94       	cli

000002c6 <__stop_program>:
 2c6:	ff cf       	rjmp	.-2      	; 0x2c6 <__stop_program>
