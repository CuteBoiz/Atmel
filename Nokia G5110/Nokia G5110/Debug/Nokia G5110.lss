
Nokia G5110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001f6  00800060  000002be  00000352  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800256  00800256  00000548  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000578  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000120f  00000000  00000000  00000644  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ed  00000000  00000000  00001853  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000510  00000000  00000000  00002040  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00002550  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000530  00000000  00000000  000026ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000064d  00000000  00000000  00002bdc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003229  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
  26:	62 00       	.word	0x0062	; ????

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d4 e0       	ldi	r29, 0x04	; 4
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
  34:	12 e0       	ldi	r17, 0x02	; 2
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	ee eb       	ldi	r30, 0xBE	; 190
  3c:	f2 e0       	ldi	r31, 0x02	; 2
  3e:	02 c0       	rjmp	.+4      	; 0x44 <__SREG__+0x5>
  40:	05 90       	lpm	r0, Z+
  42:	0d 92       	st	X+, r0
  44:	a6 35       	cpi	r26, 0x56	; 86
  46:	b1 07       	cpc	r27, r17
  48:	d9 f7       	brne	.-10     	; 0x40 <__SREG__+0x1>

0000004a <__do_clear_bss>:
  4a:	22 e0       	ldi	r18, 0x02	; 2
  4c:	a6 e5       	ldi	r26, 0x56	; 86
  4e:	b2 e0       	ldi	r27, 0x02	; 2
  50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
  52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
  54:	a9 35       	cpi	r26, 0x59	; 89
  56:	b2 07       	cpc	r27, r18
  58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>

0000005a <__do_global_ctors>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	c4 e1       	ldi	r28, 0x14	; 20
  5e:	d0 e0       	ldi	r29, 0x00	; 0
  60:	03 c0       	rjmp	.+6      	; 0x68 <__do_global_ctors+0xe>
  62:	21 97       	sbiw	r28, 0x01	; 1
  64:	fe 01       	movw	r30, r28
  66:	23 d1       	rcall	.+582    	; 0x2ae <__tablejump2__>
  68:	c3 31       	cpi	r28, 0x13	; 19
  6a:	d1 07       	cpc	r29, r17
  6c:	d1 f7       	brne	.-12     	; 0x62 <__do_global_ctors+0x8>
  6e:	02 d0       	rcall	.+4      	; 0x74 <main>
  70:	24 c1       	rjmp	.+584    	; 0x2ba <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <main>:

Nokia5110 lcd;

int main(void)
{	
	DDRC |= (1 << 5);
  74:	a5 9a       	sbi	0x14, 5	; 20
	PORTC |= (1 << 5);
  76:	ad 9a       	sbi	0x15, 5	; 21
	lcd.begin();
  78:	86 e5       	ldi	r24, 0x56	; 86
  7a:	92 e0       	ldi	r25, 0x02	; 2
  7c:	85 d0       	rcall	.+266    	; 0x188 <_ZN9Nokia51105beginEv>
	while(1){
		//lcd.setCursor(0 ,0);
		lcd.fillUp("PHAT");
  7e:	60 e6       	ldi	r22, 0x60	; 96
  80:	70 e0       	ldi	r23, 0x00	; 0
  82:	86 e5       	ldi	r24, 0x56	; 86
  84:	92 e0       	ldi	r25, 0x02	; 2
  86:	c7 d0       	rcall	.+398    	; 0x216 <_ZN9Nokia51106fillUpEPc>
		lcd.setCursor(0 ,1);
  88:	41 e0       	ldi	r20, 0x01	; 1
  8a:	60 e0       	ldi	r22, 0x00	; 0
  8c:	86 e5       	ldi	r24, 0x56	; 86
  8e:	92 e0       	ldi	r25, 0x02	; 2
  90:	44 d0       	rcall	.+136    	; 0x11a <_ZN9Nokia51109setCursorEhh>
		lcd.fillUp("VINH NGU");
  92:	65 e6       	ldi	r22, 0x65	; 101
  94:	70 e0       	ldi	r23, 0x00	; 0
  96:	86 e5       	ldi	r24, 0x56	; 86
  98:	92 e0       	ldi	r25, 0x02	; 2
  9a:	bd d0       	rcall	.+378    	; 0x216 <_ZN9Nokia51106fillUpEPc>
		lcd.setCursor(0, 3);
  9c:	43 e0       	ldi	r20, 0x03	; 3
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	86 e5       	ldi	r24, 0x56	; 86
  a2:	92 e0       	ldi	r25, 0x02	; 2
  a4:	3a d0       	rcall	.+116    	; 0x11a <_ZN9Nokia51109setCursorEhh>
		lcd.fillUp("Bo Linh");
  a6:	6e e6       	ldi	r22, 0x6E	; 110
  a8:	70 e0       	ldi	r23, 0x00	; 0
  aa:	86 e5       	ldi	r24, 0x56	; 86
  ac:	92 e0       	ldi	r25, 0x02	; 2
  ae:	b3 d0       	rcall	.+358    	; 0x216 <_ZN9Nokia51106fillUpEPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	8d e3       	ldi	r24, 0x3D	; 61
  b4:	99 e4       	ldi	r25, 0x49	; 73
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	80 40       	sbci	r24, 0x00	; 0
  ba:	90 40       	sbci	r25, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <main+0x42>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <main+0x4c>
  c0:	00 00       	nop
  c2:	dd cf       	rjmp	.-70     	; 0x7e <main+0xa>

000000c4 <_GLOBAL__sub_I_line>:

#include "N5110.h"

uint8_t line[84];

Nokia5110 lcd;
  c4:	86 e5       	ldi	r24, 0x56	; 86
  c6:	92 e0       	ldi	r25, 0x02	; 2
  c8:	3a d0       	rcall	.+116    	; 0x13e <_ZN9Nokia5110C1Ev>
  ca:	08 95       	ret

000000cc <_ZN9Nokia51104sendEih>:
#include "N5110.h"
void Nokia5110::send(int type, uint8_t data){
	LCD_PORT &= ~(1 << SCE);
  cc:	c2 98       	cbi	0x18, 2	; 24
	
	if (type)
  ce:	67 2b       	or	r22, r23
  d0:	11 f0       	breq	.+4      	; 0xd6 <_ZN9Nokia51104sendEih+0xa>
		LCD_PORT |= (1 << DC);
  d2:	c6 9a       	sbi	0x18, 6	; 24
  d4:	14 c0       	rjmp	.+40     	; 0xfe <_ZN9Nokia51104sendEih+0x32>
	else
		LCD_PORT &= ~(1 << DC );
  d6:	c6 98       	cbi	0x18, 6	; 24
  d8:	12 c0       	rjmp	.+36     	; 0xfe <_ZN9Nokia51104sendEih+0x32>
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7 - i)) & 0x01)
  da:	9a 01       	movw	r18, r20
  dc:	08 2e       	mov	r0, r24
  de:	02 c0       	rjmp	.+4      	; 0xe4 <_ZN9Nokia51104sendEih+0x18>
  e0:	35 95       	asr	r19
  e2:	27 95       	ror	r18
  e4:	0a 94       	dec	r0
  e6:	e2 f7       	brpl	.-8      	; 0xe0 <_ZN9Nokia51104sendEih+0x14>
  e8:	20 ff       	sbrs	r18, 0
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <_ZN9Nokia51104sendEih+0x24>
			LCD_PORT |= (1 << SDIN);
  ec:	c3 9a       	sbi	0x18, 3	; 24
  ee:	01 c0       	rjmp	.+2      	; 0xf2 <_ZN9Nokia51104sendEih+0x26>
		else
			LCD_PORT &= ~(1 << SDIN);
  f0:	c3 98       	cbi	0x18, 3	; 24
			
		LCD_PORT |= (1 << SCLK);
  f2:	c5 9a       	sbi	0x18, 5	; 24
		LCD_PORT &= ~(1 << SCLK);
  f4:	c5 98       	cbi	0x18, 5	; 24
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	80 f7       	brcc	.-32     	; 0xda <_ZN9Nokia51104sendEih+0xe>
	}
	
	LCD_PORT |= (1 << SCE);
  fa:	c2 9a       	sbi	0x18, 2	; 24
}
  fc:	08 95       	ret
#include "N5110.h"
void Nokia5110::send(int type, uint8_t data){
  fe:	87 e0       	ldi	r24, 0x07	; 7
 100:	90 e0       	ldi	r25, 0x00	; 0
		LCD_PORT |= (1 << DC);
	else
		LCD_PORT &= ~(1 << DC );
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7 - i)) & 0x01)
 102:	50 e0       	ldi	r21, 0x00	; 0
 104:	ea cf       	rjmp	.-44     	; 0xda <_ZN9Nokia51104sendEih+0xe>

00000106 <_ZN9Nokia511011sendCommandEh>:
	}
	
	LCD_PORT |= (1 << SCE);
}

void Nokia5110::sendCommand(uint8_t cmd){
 106:	46 2f       	mov	r20, r22
	send(PCD8544_cmd, cmd);
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	70 e0       	ldi	r23, 0x00	; 0
 10c:	df df       	rcall	.-66     	; 0xcc <_ZN9Nokia51104sendEih>
 10e:	08 95       	ret

00000110 <_ZN9Nokia51108sendDataEh>:
}
void Nokia5110::sendData(uint8_t data){
 110:	46 2f       	mov	r20, r22
	send(PCD8544_data, data);
 112:	61 e0       	ldi	r22, 0x01	; 1
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	da df       	rcall	.-76     	; 0xcc <_ZN9Nokia51104sendEih>
 118:	08 95       	ret

0000011a <_ZN9Nokia51109setCursorEhh>:
}

void Nokia5110::setCursor(uint8_t x, uint8_t y){
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	ec 01       	movw	r28, r24
	this->cursor_x = x;
 120:	68 83       	st	Y, r22
	this->cursor_y = y;
 122:	49 83       	std	Y+1, r20	; 0x01
	sendCommand(0x20);
 124:	60 e2       	ldi	r22, 0x20	; 32
 126:	ef df       	rcall	.-34     	; 0x106 <_ZN9Nokia511011sendCommandEh>
	sendCommand(0x80 | this->cursor_x);
 128:	68 81       	ld	r22, Y
 12a:	60 68       	ori	r22, 0x80	; 128
 12c:	ce 01       	movw	r24, r28
 12e:	eb df       	rcall	.-42     	; 0x106 <_ZN9Nokia511011sendCommandEh>
	sendCommand(0x40 | this->cursor_y);
 130:	69 81       	ldd	r22, Y+1	; 0x01
 132:	60 64       	ori	r22, 0x40	; 64
 134:	ce 01       	movw	r24, r28
 136:	e7 df       	rcall	.-50     	; 0x106 <_ZN9Nokia511011sendCommandEh>
}
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <_ZN9Nokia5110C1Ev>:
Nokia5110::Nokia5110(){
 13e:	fc 01       	movw	r30, r24
	this->cursor_x = 0;
 140:	10 82       	st	Z, r1
	this->cursor_y = 0;
 142:	11 82       	std	Z+1, r1	; 0x01
	this->inverse_output = false;
 144:	12 82       	std	Z+2, r1	; 0x02
	LCD_DDR |= (1 << RST) | (1 << SCE) | (1 << DC) | (1 << SDIN) | (1 << SCLK);
 146:	87 b3       	in	r24, 0x17	; 23
 148:	8e 66       	ori	r24, 0x6E	; 110
 14a:	87 bb       	out	0x17, r24	; 23
	LCD_PORT |= (1 << RST) | (1 << SCE);
 14c:	88 b3       	in	r24, 0x18	; 24
 14e:	86 60       	ori	r24, 0x06	; 6
 150:	88 bb       	out	0x18, r24	; 24
 152:	08 95       	ret

00000154 <_ZN9Nokia51105resetEv>:
}

void Nokia5110::reset(){
	LCD_PORT |= (1 << RST) | (1 << SCE);
 154:	88 b3       	in	r24, 0x18	; 24
 156:	86 60       	ori	r24, 0x06	; 6
 158:	88 bb       	out	0x18, r24	; 24
	
	LCD_PORT &= ~(1 << RST);
 15a:	c1 98       	cbi	0x18, 1	; 24
	LCD_PORT |= (1 << RST);
 15c:	c1 9a       	sbi	0x18, 1	; 24
 15e:	08 95       	ret

00000160 <_ZN9Nokia511010clearSreenEv>:
}

void Nokia5110::clearSreen(){
 160:	0f 93       	push	r16
 162:	1f 93       	push	r17
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	8c 01       	movw	r16, r24
	setCursor(0, 0);
 16a:	40 e0       	ldi	r20, 0x00	; 0
 16c:	60 e0       	ldi	r22, 0x00	; 0
 16e:	d5 df       	rcall	.-86     	; 0x11a <_ZN9Nokia51109setCursorEhh>
 170:	c8 ef       	ldi	r28, 0xF8	; 248
 172:	d1 e0       	ldi	r29, 0x01	; 1
	for (int i = 0; i < 504; i++)
		sendData(0x00);
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	c8 01       	movw	r24, r16
 178:	cb df       	rcall	.-106    	; 0x110 <_ZN9Nokia51108sendDataEh>
 17a:	21 97       	sbiw	r28, 0x01	; 1
	LCD_PORT |= (1 << RST);
}

void Nokia5110::clearSreen(){
	setCursor(0, 0);
	for (int i = 0; i < 504; i++)
 17c:	d9 f7       	brne	.-10     	; 0x174 <_ZN9Nokia511010clearSreenEv+0x14>
		sendData(0x00);
}
 17e:	df 91       	pop	r29
 180:	cf 91       	pop	r28
 182:	1f 91       	pop	r17
 184:	0f 91       	pop	r16
 186:	08 95       	ret

00000188 <_ZN9Nokia51105beginEv>:

void Nokia5110::begin(){
 188:	cf 93       	push	r28
 18a:	df 93       	push	r29
 18c:	ec 01       	movw	r28, r24
	this->reset();
 18e:	e2 df       	rcall	.-60     	; 0x154 <_ZN9Nokia51105resetEv>
	
	this->sendCommand(0x21); // H = 1
 190:	61 e2       	ldi	r22, 0x21	; 33
 192:	ce 01       	movw	r24, r28
 194:	b8 df       	rcall	.-144    	; 0x106 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x80 | 0x5); //VOP[6:0] = (VLCD - 3,06) / 0.06 (Chinh do tuong phan)
 196:	65 e8       	ldi	r22, 0x85	; 133
 198:	ce 01       	movw	r24, r28
 19a:	b5 df       	rcall	.-150    	; 0x106 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x04); // TC0			
 19c:	64 e0       	ldi	r22, 0x04	; 4
 19e:	ce 01       	movw	r24, r28
 1a0:	b2 df       	rcall	.-156    	; 0x106 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x14); // Bias 1:40 - 1:34
 1a2:	64 e1       	ldi	r22, 0x14	; 20
 1a4:	ce 01       	movw	r24, r28
 1a6:	af df       	rcall	.-162    	; 0x106 <_ZN9Nokia511011sendCommandEh>
	
	this->sendCommand(0x20); //H = 0
 1a8:	60 e2       	ldi	r22, 0x20	; 32
 1aa:	ce 01       	movw	r24, r28
 1ac:	ac df       	rcall	.-168    	; 0x106 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x80);
 1ae:	60 e8       	ldi	r22, 0x80	; 128
 1b0:	ce 01       	movw	r24, r28
 1b2:	a9 df       	rcall	.-174    	; 0x106 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x40);
 1b4:	60 e4       	ldi	r22, 0x40	; 64
 1b6:	ce 01       	movw	r24, r28
 1b8:	a6 df       	rcall	.-180    	; 0x106 <_ZN9Nokia511011sendCommandEh>
	this->sendCommand(0x0C); //Normal Mode
 1ba:	6c e0       	ldi	r22, 0x0C	; 12
 1bc:	ce 01       	movw	r24, r28
 1be:	a3 df       	rcall	.-186    	; 0x106 <_ZN9Nokia511011sendCommandEh>
	
	this->clearSreen();
 1c0:	ce 01       	movw	r24, r28
 1c2:	ce df       	rcall	.-100    	; 0x160 <_ZN9Nokia511010clearSreenEv>
}
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <_ZN9Nokia51108sendCharEc>:
	for (i = 0; i < (14-length)*6; i++){
		this->sendData(0x00);
	}
}
void Nokia5110::sendChar(char data)
{
 1ca:	ef 92       	push	r14
 1cc:	ff 92       	push	r15
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	7c 01       	movw	r14, r24
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	eb 01       	movw	r28, r22
 1dc:	cc 0f       	add	r28, r28
 1de:	dd 1f       	adc	r29, r29
 1e0:	cc 0f       	add	r28, r28
 1e2:	dd 1f       	adc	r29, r29
 1e4:	6c 0f       	add	r22, r28
 1e6:	7d 1f       	adc	r23, r29
 1e8:	eb 01       	movw	r28, r22
 1ea:	ca 52       	subi	r28, 0x2A	; 42
 1ec:	d0 40       	sbci	r29, 0x00	; 0
	for(int i = 0; i < 5; i++)
 1ee:	00 e0       	ldi	r16, 0x00	; 0
 1f0:	10 e0       	ldi	r17, 0x00	; 0
	{
		this->sendData(CHARSET[int(data) - 0x20][i]);
 1f2:	69 91       	ld	r22, Y+
 1f4:	c7 01       	movw	r24, r14
 1f6:	8c df       	rcall	.-232    	; 0x110 <_ZN9Nokia51108sendDataEh>
		this->sendData(0x00);
	}
}
void Nokia5110::sendChar(char data)
{
	for(int i = 0; i < 5; i++)
 1f8:	0f 5f       	subi	r16, 0xFF	; 255
 1fa:	1f 4f       	sbci	r17, 0xFF	; 255
 1fc:	05 30       	cpi	r16, 0x05	; 5
 1fe:	11 05       	cpc	r17, r1
 200:	c1 f7       	brne	.-16     	; 0x1f2 <_ZN9Nokia51108sendCharEc+0x28>
	{
		this->sendData(CHARSET[int(data) - 0x20][i]);
	}
	this->sendData(0x00);
 202:	60 e0       	ldi	r22, 0x00	; 0
 204:	c7 01       	movw	r24, r14
 206:	84 df       	rcall	.-248    	; 0x110 <_ZN9Nokia51108sendDataEh>
}
 208:	df 91       	pop	r29
 20a:	cf 91       	pop	r28
 20c:	1f 91       	pop	r17
 20e:	0f 91       	pop	r16
 210:	ff 90       	pop	r15
 212:	ef 90       	pop	r14
 214:	08 95       	ret

00000216 <_ZN9Nokia51106fillUpEPc>:
	this->sendCommand(0x0C); //Normal Mode
	
	this->clearSreen();
}

void Nokia5110::fillUp(char *data){
 216:	cf 92       	push	r12
 218:	df 92       	push	r13
 21a:	ef 92       	push	r14
 21c:	ff 92       	push	r15
 21e:	0f 93       	push	r16
 220:	1f 93       	push	r17
 222:	cf 93       	push	r28
 224:	df 93       	push	r29
 226:	7c 01       	movw	r14, r24
	register int i = 0;
	int length = 0;
	while (data[i]){
 228:	fb 01       	movw	r30, r22
 22a:	80 81       	ld	r24, Z
 22c:	81 11       	cpse	r24, r1
 22e:	05 c0       	rjmp	.+10     	; 0x23a <_ZN9Nokia51106fillUpEPc+0x24>
 230:	2a c0       	rjmp	.+84     	; 0x286 <_ZN9Nokia51106fillUpEPc+0x70>
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
 232:	10 16       	cp	r1, r16
 234:	11 06       	cpc	r1, r17
 236:	e4 f0       	brlt	.+56     	; 0x270 <_ZN9Nokia51106fillUpEPc+0x5a>
 238:	0a c0       	rjmp	.+20     	; 0x24e <_ZN9Nokia51106fillUpEPc+0x38>
 23a:	fb 01       	movw	r30, r22
 23c:	31 96       	adiw	r30, 0x01	; 1
}

void Nokia5110::fillUp(char *data){
	register int i = 0;
	int length = 0;
	while (data[i]){
 23e:	00 e0       	ldi	r16, 0x00	; 0
 240:	10 e0       	ldi	r17, 0x00	; 0
		length++;
 242:	0f 5f       	subi	r16, 0xFF	; 255
 244:	1f 4f       	sbci	r17, 0xFF	; 255
}

void Nokia5110::fillUp(char *data){
	register int i = 0;
	int length = 0;
	while (data[i]){
 246:	81 91       	ld	r24, Z+
 248:	81 11       	cpse	r24, r1
 24a:	fb cf       	rjmp	.-10     	; 0x242 <_ZN9Nokia51106fillUpEPc+0x2c>
 24c:	f2 cf       	rjmp	.-28     	; 0x232 <_ZN9Nokia51106fillUpEPc+0x1c>
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 24e:	8e e0       	ldi	r24, 0x0E	; 14
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	9c 01       	movw	r18, r24
 254:	20 1b       	sub	r18, r16
 256:	31 0b       	sbc	r19, r17
 258:	89 01       	movw	r16, r18
 25a:	c9 01       	movw	r24, r18
 25c:	88 0f       	add	r24, r24
 25e:	99 1f       	adc	r25, r25
 260:	08 0f       	add	r16, r24
 262:	19 1f       	adc	r17, r25
 264:	00 0f       	add	r16, r16
 266:	11 1f       	adc	r17, r17
 268:	10 16       	cp	r1, r16
 26a:	11 06       	cpc	r1, r17
 26c:	74 f0       	brlt	.+28     	; 0x28a <_ZN9Nokia51106fillUpEPc+0x74>
 26e:	16 c0       	rjmp	.+44     	; 0x29c <_ZN9Nokia51106fillUpEPc+0x86>
 270:	eb 01       	movw	r28, r22
 272:	6b 01       	movw	r12, r22
 274:	c0 0e       	add	r12, r16
 276:	d1 1e       	adc	r13, r17
	while (data[i]){
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
 278:	69 91       	ld	r22, Y+
 27a:	c7 01       	movw	r24, r14
 27c:	a6 df       	rcall	.-180    	; 0x1ca <_ZN9Nokia51108sendCharEc>
	int length = 0;
	while (data[i]){
		length++;
		i++;
	}
	for (i = 0; i < length; i++){
 27e:	cc 16       	cp	r12, r28
 280:	dd 06       	cpc	r13, r29
 282:	d1 f7       	brne	.-12     	; 0x278 <_ZN9Nokia51106fillUpEPc+0x62>
 284:	e4 cf       	rjmp	.-56     	; 0x24e <_ZN9Nokia51106fillUpEPc+0x38>
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 286:	04 e5       	ldi	r16, 0x54	; 84
 288:	10 e0       	ldi	r17, 0x00	; 0
 28a:	c0 e0       	ldi	r28, 0x00	; 0
 28c:	d0 e0       	ldi	r29, 0x00	; 0
		this->sendData(0x00);
 28e:	60 e0       	ldi	r22, 0x00	; 0
 290:	c7 01       	movw	r24, r14
 292:	3e df       	rcall	.-388    	; 0x110 <_ZN9Nokia51108sendDataEh>
		i++;
	}
	for (i = 0; i < length; i++){
		this->sendChar(data[i]);
	}
	for (i = 0; i < (14-length)*6; i++){
 294:	21 96       	adiw	r28, 0x01	; 1
 296:	0c 17       	cp	r16, r28
 298:	1d 07       	cpc	r17, r29
 29a:	c9 f7       	brne	.-14     	; 0x28e <_ZN9Nokia51106fillUpEPc+0x78>
		this->sendData(0x00);
	}
}
 29c:	df 91       	pop	r29
 29e:	cf 91       	pop	r28
 2a0:	1f 91       	pop	r17
 2a2:	0f 91       	pop	r16
 2a4:	ff 90       	pop	r15
 2a6:	ef 90       	pop	r14
 2a8:	df 90       	pop	r13
 2aa:	cf 90       	pop	r12
 2ac:	08 95       	ret

000002ae <__tablejump2__>:
 2ae:	ee 0f       	add	r30, r30
 2b0:	ff 1f       	adc	r31, r31
 2b2:	05 90       	lpm	r0, Z+
 2b4:	f4 91       	lpm	r31, Z
 2b6:	e0 2d       	mov	r30, r0
 2b8:	09 94       	ijmp

000002ba <_exit>:
 2ba:	f8 94       	cli

000002bc <__stop_program>:
 2bc:	ff cf       	rjmp	.-2      	; 0x2bc <__stop_program>
