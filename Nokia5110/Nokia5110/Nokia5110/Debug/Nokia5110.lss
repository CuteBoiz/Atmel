
Nokia5110.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000718  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000220  00800060  00000718  000007ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001e  00800280  00800280  000009cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017e0  00000000  00000000  00000ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000856  00000000  00000000  000022c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000704  00000000  00000000  00002b1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000228  00000000  00000000  00003224  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000644  00000000  00000000  0000344c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bf8  00000000  00000000  00003a90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004688  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	13 c0       	rjmp	.+38     	; 0x28 <__ctors_end>
   2:	37 c0       	rjmp	.+110    	; 0x72 <__bad_interrupt>
   4:	36 c0       	rjmp	.+108    	; 0x72 <__bad_interrupt>
   6:	35 c0       	rjmp	.+106    	; 0x72 <__bad_interrupt>
   8:	34 c0       	rjmp	.+104    	; 0x72 <__bad_interrupt>
   a:	33 c0       	rjmp	.+102    	; 0x72 <__bad_interrupt>
   c:	32 c0       	rjmp	.+100    	; 0x72 <__bad_interrupt>
   e:	31 c0       	rjmp	.+98     	; 0x72 <__bad_interrupt>
  10:	30 c0       	rjmp	.+96     	; 0x72 <__bad_interrupt>
  12:	2f c0       	rjmp	.+94     	; 0x72 <__bad_interrupt>
  14:	2e c0       	rjmp	.+92     	; 0x72 <__bad_interrupt>
  16:	2d c0       	rjmp	.+90     	; 0x72 <__bad_interrupt>
  18:	2c c0       	rjmp	.+88     	; 0x72 <__bad_interrupt>
  1a:	2b c0       	rjmp	.+86     	; 0x72 <__bad_interrupt>
  1c:	2a c0       	rjmp	.+84     	; 0x72 <__bad_interrupt>
  1e:	29 c0       	rjmp	.+82     	; 0x72 <__bad_interrupt>
  20:	28 c0       	rjmp	.+80     	; 0x72 <__bad_interrupt>
  22:	27 c0       	rjmp	.+78     	; 0x72 <__bad_interrupt>
  24:	26 c0       	rjmp	.+76     	; 0x72 <__bad_interrupt>

00000026 <__ctors_start>:
  26:	5e 00       	.word	0x005e	; ????

00000028 <__ctors_end>:
  28:	11 24       	eor	r1, r1
  2a:	1f be       	out	0x3f, r1	; 63
  2c:	cf e5       	ldi	r28, 0x5F	; 95
  2e:	d4 e0       	ldi	r29, 0x04	; 4
  30:	de bf       	out	0x3e, r29	; 62
  32:	cd bf       	out	0x3d, r28	; 61

00000034 <__do_copy_data>:
  34:	12 e0       	ldi	r17, 0x02	; 2
  36:	a0 e6       	ldi	r26, 0x60	; 96
  38:	b0 e0       	ldi	r27, 0x00	; 0
  3a:	e8 e1       	ldi	r30, 0x18	; 24
  3c:	f7 e0       	ldi	r31, 0x07	; 7
  3e:	02 c0       	rjmp	.+4      	; 0x44 <__SREG__+0x5>
  40:	05 90       	lpm	r0, Z+
  42:	0d 92       	st	X+, r0
  44:	a0 38       	cpi	r26, 0x80	; 128
  46:	b1 07       	cpc	r27, r17
  48:	d9 f7       	brne	.-10     	; 0x40 <__SREG__+0x1>

0000004a <__do_clear_bss>:
  4a:	22 e0       	ldi	r18, 0x02	; 2
  4c:	a0 e8       	ldi	r26, 0x80	; 128
  4e:	b2 e0       	ldi	r27, 0x02	; 2
  50:	01 c0       	rjmp	.+2      	; 0x54 <.do_clear_bss_start>

00000052 <.do_clear_bss_loop>:
  52:	1d 92       	st	X+, r1

00000054 <.do_clear_bss_start>:
  54:	ae 39       	cpi	r26, 0x9E	; 158
  56:	b2 07       	cpc	r27, r18
  58:	e1 f7       	brne	.-8      	; 0x52 <.do_clear_bss_loop>

0000005a <__do_global_ctors>:
  5a:	10 e0       	ldi	r17, 0x00	; 0
  5c:	c4 e1       	ldi	r28, 0x14	; 20
  5e:	d0 e0       	ldi	r29, 0x00	; 0
  60:	03 c0       	rjmp	.+6      	; 0x68 <__do_global_ctors+0xe>
  62:	21 97       	sbiw	r28, 0x01	; 1
  64:	fe 01       	movw	r30, r28
  66:	50 d3       	rcall	.+1696   	; 0x708 <__tablejump2__>
  68:	c3 31       	cpi	r28, 0x13	; 19
  6a:	d1 07       	cpc	r29, r17
  6c:	d1 f7       	brne	.-12     	; 0x62 <__do_global_ctors+0x8>
  6e:	02 d0       	rcall	.+4      	; 0x74 <main>
  70:	51 c3       	rjmp	.+1698   	; 0x714 <_exit>

00000072 <__bad_interrupt>:
  72:	c6 cf       	rjmp	.-116    	; 0x0 <__vectors>

00000074 <main>:
PCD8544 LCD(4, 3, 2, 1, 0);


int main(void)
{
	DDRD &= ~((1<<0) | (1<<1));
  74:	81 b3       	in	r24, 0x11	; 17
  76:	8c 7f       	andi	r24, 0xFC	; 252
  78:	81 bb       	out	0x11, r24	; 17
	PORTD |= (1<<0) | (1<<1);
  7a:	82 b3       	in	r24, 0x12	; 18
  7c:	83 60       	ori	r24, 0x03	; 3
  7e:	82 bb       	out	0x12, r24	; 18
    LCD.begin();
  80:	80 e8       	ldi	r24, 0x80	; 128
  82:	92 e0       	ldi	r25, 0x02	; 2
  84:	6b d1       	rcall	.+726    	; 0x35c <_ZN7PCD85445beginEv>
	LCD.createMenu("RFID", Menu, 4);
  86:	24 e0       	ldi	r18, 0x04	; 4
  88:	30 e0       	ldi	r19, 0x00	; 0
  8a:	40 e6       	ldi	r20, 0x60	; 96
  8c:	50 e0       	ldi	r21, 0x00	; 0
  8e:	68 e9       	ldi	r22, 0x98	; 152
  90:	70 e0       	ldi	r23, 0x00	; 0
  92:	80 e8       	ldi	r24, 0x80	; 128
  94:	92 e0       	ldi	r25, 0x02	; 2
  96:	0e d2       	rcall	.+1052   	; 0x4b4 <_ZN7PCD854410createMenuEPcPA14_ci>
	
    while (1) 
    {	
		LCD.displayMenu();
  98:	80 e8       	ldi	r24, 0x80	; 128
  9a:	92 e0       	ldi	r25, 0x02	; 2
  9c:	53 d2       	rcall	.+1190   	; 0x544 <_ZN7PCD854411displayMenuEv>
		if (!(PIND & (1<<0))){
  9e:	80 99       	sbic	0x10, 0	; 16
  a0:	05 c0       	rjmp	.+10     	; 0xac <main+0x38>
			LCD.increasePointer();
  a2:	80 e8       	ldi	r24, 0x80	; 128
  a4:	92 e0       	ldi	r25, 0x02	; 2
  a6:	f6 d2       	rcall	.+1516   	; 0x694 <_ZN7PCD854415increasePointerEv>
			while(!(PIND & (1<<0)));
  a8:	80 9b       	sbis	0x10, 0	; 16
  aa:	fe cf       	rjmp	.-4      	; 0xa8 <main+0x34>
		}
		if(!(PIND & (1<<1))){
  ac:	81 99       	sbic	0x10, 1	; 16
  ae:	f4 cf       	rjmp	.-24     	; 0x98 <main+0x24>
			LCD.decreasePointer();
  b0:	80 e8       	ldi	r24, 0x80	; 128
  b2:	92 e0       	ldi	r25, 0x02	; 2
  b4:	0d d3       	rcall	.+1562   	; 0x6d0 <_ZN7PCD854415decreasePointerEv>
			while(!(PIND & (1<<1)));
  b6:	81 9b       	sbis	0x10, 1	; 16
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <main+0x42>
  ba:	ee cf       	rjmp	.-36     	; 0x98 <main+0x24>

000000bc <_GLOBAL__sub_I_Menu>:
		}
		
    }
}
  bc:	ef 92       	push	r14
  be:	ff 92       	push	r15
  c0:	0f 93       	push	r16
  c2:	1f 93       	push	r17
 */ 

#include "Nokia5110.h"

char Menu[][14] = {"1.Phat","2.Vinh", "3.Linh", "4.Tuan"};
PCD8544 LCD(4, 3, 2, 1, 0);
  c4:	e1 2c       	mov	r14, r1
  c6:	f1 2c       	mov	r15, r1
  c8:	01 e0       	ldi	r16, 0x01	; 1
  ca:	10 e0       	ldi	r17, 0x00	; 0
  cc:	22 e0       	ldi	r18, 0x02	; 2
  ce:	30 e0       	ldi	r19, 0x00	; 0
  d0:	43 e0       	ldi	r20, 0x03	; 3
  d2:	50 e0       	ldi	r21, 0x00	; 0
  d4:	64 e0       	ldi	r22, 0x04	; 4
  d6:	70 e0       	ldi	r23, 0x00	; 0
  d8:	80 e8       	ldi	r24, 0x80	; 128
  da:	92 e0       	ldi	r25, 0x02	; 2
  dc:	05 d0       	rcall	.+10     	; 0xe8 <_ZN7PCD8544C1Eiiiii>
			LCD.decreasePointer();
			while(!(PIND & (1<<1)));
		}
		
    }
}
  de:	1f 91       	pop	r17
  e0:	0f 91       	pop	r16
  e2:	ff 90       	pop	r15
  e4:	ef 90       	pop	r14
  e6:	08 95       	ret

000000e8 <_ZN7PCD8544C1Eiiiii>:
 *  Author: tanph
 */ 

#include "Nokia5110.h"

PCD8544::PCD8544(int RST, int SCE, int DC, int SDIN, int SCLK){
  e8:	ef 92       	push	r14
  ea:	ff 92       	push	r15
  ec:	0f 93       	push	r16
  ee:	1f 93       	push	r17
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
  f4:	fc 01       	movw	r30, r24
	RST_PIN = RST;
  f6:	60 83       	st	Z, r22
  f8:	71 83       	std	Z+1, r23	; 0x01
	SCE_PIN = SCE;
  fa:	42 83       	std	Z+2, r20	; 0x02
  fc:	53 83       	std	Z+3, r21	; 0x03
	DC_PIN = DC;
  fe:	24 83       	std	Z+4, r18	; 0x04
 100:	35 83       	std	Z+5, r19	; 0x05
	SDIN_PIN = SDIN;
 102:	06 83       	std	Z+6, r16	; 0x06
 104:	17 83       	std	Z+7, r17	; 0x07
	SCLK_PIN = SCLK;
 106:	e0 86       	std	Z+8, r14	; 0x08
 108:	f1 86       	std	Z+9, r15	; 0x09
	DDR_PCD |= (1<<RST_PIN) | (1<<SCE_PIN) | (1<<DC_PIN) | (1<<SDIN_PIN) | (1<<SCLK_PIN);
 10a:	c4 b3       	in	r28, 0x14	; 20
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	dc 01       	movw	r26, r24
 112:	02 c0       	rjmp	.+4      	; 0x118 <_ZN7PCD8544C1Eiiiii+0x30>
 114:	aa 0f       	add	r26, r26
 116:	bb 1f       	adc	r27, r27
 118:	ea 94       	dec	r14
 11a:	e2 f7       	brpl	.-8      	; 0x114 <_ZN7PCD8544C1Eiiiii+0x2c>
 11c:	7c 01       	movw	r14, r24
 11e:	02 c0       	rjmp	.+4      	; 0x124 <_ZN7PCD8544C1Eiiiii+0x3c>
 120:	ee 0c       	add	r14, r14
 122:	ff 1c       	adc	r15, r15
 124:	0a 95       	dec	r16
 126:	e2 f7       	brpl	.-8      	; 0x120 <_ZN7PCD8544C1Eiiiii+0x38>
 128:	87 01       	movw	r16, r14
 12a:	ca 2b       	or	r28, r26
 12c:	0c 2b       	or	r16, r28
 12e:	ec 01       	movw	r28, r24
 130:	02 c0       	rjmp	.+4      	; 0x136 <_ZN7PCD8544C1Eiiiii+0x4e>
 132:	cc 0f       	add	r28, r28
 134:	dd 1f       	adc	r29, r29
 136:	2a 95       	dec	r18
 138:	e2 f7       	brpl	.-8      	; 0x132 <_ZN7PCD8544C1Eiiiii+0x4a>
 13a:	2c 2f       	mov	r18, r28
 13c:	20 2b       	or	r18, r16
 13e:	ec 01       	movw	r28, r24
 140:	02 c0       	rjmp	.+4      	; 0x146 <_ZN7PCD8544C1Eiiiii+0x5e>
 142:	cc 0f       	add	r28, r28
 144:	dd 1f       	adc	r29, r29
 146:	4a 95       	dec	r20
 148:	e2 f7       	brpl	.-8      	; 0x142 <_ZN7PCD8544C1Eiiiii+0x5a>
 14a:	ae 01       	movw	r20, r28
 14c:	42 2b       	or	r20, r18
 14e:	9c 01       	movw	r18, r24
 150:	02 c0       	rjmp	.+4      	; 0x156 <_ZN7PCD8544C1Eiiiii+0x6e>
 152:	22 0f       	add	r18, r18
 154:	33 1f       	adc	r19, r19
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <_ZN7PCD8544C1Eiiiii+0x6a>
 15a:	24 2b       	or	r18, r20
 15c:	24 bb       	out	0x14, r18	; 20
	PORT_PCD |= (1<<SCE_PIN) | (1<<RST_PIN);
 15e:	25 b3       	in	r18, 0x15	; 21
 160:	ac 01       	movw	r20, r24
 162:	02 80       	ldd	r0, Z+2	; 0x02
 164:	02 c0       	rjmp	.+4      	; 0x16a <_ZN7PCD8544C1Eiiiii+0x82>
 166:	44 0f       	add	r20, r20
 168:	55 1f       	adc	r21, r21
 16a:	0a 94       	dec	r0
 16c:	e2 f7       	brpl	.-8      	; 0x166 <_ZN7PCD8544C1Eiiiii+0x7e>
 16e:	00 80       	ld	r0, Z
 170:	02 c0       	rjmp	.+4      	; 0x176 <_ZN7PCD8544C1Eiiiii+0x8e>
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	0a 94       	dec	r0
 178:	e2 f7       	brpl	.-8      	; 0x172 <_ZN7PCD8544C1Eiiiii+0x8a>
 17a:	84 2b       	or	r24, r20
 17c:	82 2b       	or	r24, r18
 17e:	85 bb       	out	0x15, r24	; 21
	PORT_PCD &= ~(1<<SCLK);
 180:	85 b3       	in	r24, 0x15	; 21
 182:	a0 95       	com	r26
 184:	a8 23       	and	r26, r24
 186:	a5 bb       	out	0x15, r26	; 21
}
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	1f 91       	pop	r17
 18e:	0f 91       	pop	r16
 190:	ff 90       	pop	r15
 192:	ef 90       	pop	r14
 194:	08 95       	ret

00000196 <_ZN7PCD85449sendToPCDEih>:

//Send data or command to PCD8544
void PCD8544::sendToPCD(int type, uint8_t data){
 196:	cf 93       	push	r28
 198:	df 93       	push	r29
 19a:	fc 01       	movw	r30, r24
	PORT_PCD &= ~(1<<SCE_PIN);
 19c:	25 b3       	in	r18, 0x15	; 21
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 80       	ldd	r0, Z+2	; 0x02
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <_ZN7PCD85449sendToPCDEih+0x14>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	0a 94       	dec	r0
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <_ZN7PCD85449sendToPCDEih+0x10>
 1ae:	80 95       	com	r24
 1b0:	82 23       	and	r24, r18
 1b2:	85 bb       	out	0x15, r24	; 21
	
	if (type == PCD8544_DATA){
 1b4:	61 30       	cpi	r22, 0x01	; 1
 1b6:	71 05       	cpc	r23, r1
 1b8:	61 f4       	brne	.+24     	; 0x1d2 <_ZN7PCD85449sendToPCDEih+0x3c>
		PORT_PCD |= (1<<DC_PIN);
 1ba:	25 b3       	in	r18, 0x15	; 21
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	04 80       	ldd	r0, Z+4	; 0x04
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <_ZN7PCD85449sendToPCDEih+0x32>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	0a 94       	dec	r0
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <_ZN7PCD85449sendToPCDEih+0x2e>
 1cc:	82 2b       	or	r24, r18
 1ce:	85 bb       	out	0x15, r24	; 21
 1d0:	52 c0       	rjmp	.+164    	; 0x276 <_ZN7PCD85449sendToPCDEih+0xe0>
	}
	else{
		PORT_PCD &= ~(1<<DC_PIN);
 1d2:	25 b3       	in	r18, 0x15	; 21
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	04 80       	ldd	r0, Z+4	; 0x04
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <_ZN7PCD85449sendToPCDEih+0x4a>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	0a 94       	dec	r0
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <_ZN7PCD85449sendToPCDEih+0x46>
 1e4:	80 95       	com	r24
 1e6:	82 23       	and	r24, r18
 1e8:	85 bb       	out	0x15, r24	; 21
 1ea:	45 c0       	rjmp	.+138    	; 0x276 <_ZN7PCD85449sendToPCDEih+0xe0>
	}
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7-i)) & 0x01){
 1ec:	ce 01       	movw	r24, r28
 1ee:	02 2e       	mov	r0, r18
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <_ZN7PCD85449sendToPCDEih+0x60>
 1f2:	95 95       	asr	r25
 1f4:	87 95       	ror	r24
 1f6:	0a 94       	dec	r0
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <_ZN7PCD85449sendToPCDEih+0x5c>
 1fa:	80 ff       	sbrs	r24, 0
 1fc:	0b c0       	rjmp	.+22     	; 0x214 <_ZN7PCD85449sendToPCDEih+0x7e>
			PORT_PCD |= (1<<SDIN_PIN);
 1fe:	45 b3       	in	r20, 0x15	; 21
 200:	cd 01       	movw	r24, r26
 202:	06 80       	ldd	r0, Z+6	; 0x06
 204:	02 c0       	rjmp	.+4      	; 0x20a <_ZN7PCD85449sendToPCDEih+0x74>
 206:	88 0f       	add	r24, r24
 208:	99 1f       	adc	r25, r25
 20a:	0a 94       	dec	r0
 20c:	e2 f7       	brpl	.-8      	; 0x206 <_ZN7PCD85449sendToPCDEih+0x70>
 20e:	84 2b       	or	r24, r20
 210:	85 bb       	out	0x15, r24	; 21
 212:	0c c0       	rjmp	.+24     	; 0x22c <_ZN7PCD85449sendToPCDEih+0x96>
		}
		else{
			PORT_PCD &= ~(1<<SDIN_PIN);
 214:	95 b3       	in	r25, 0x15	; 21
 216:	ad 01       	movw	r20, r26
 218:	06 80       	ldd	r0, Z+6	; 0x06
 21a:	02 c0       	rjmp	.+4      	; 0x220 <_ZN7PCD85449sendToPCDEih+0x8a>
 21c:	44 0f       	add	r20, r20
 21e:	55 1f       	adc	r21, r21
 220:	0a 94       	dec	r0
 222:	e2 f7       	brpl	.-8      	; 0x21c <_ZN7PCD85449sendToPCDEih+0x86>
 224:	84 2f       	mov	r24, r20
 226:	80 95       	com	r24
 228:	89 23       	and	r24, r25
 22a:	85 bb       	out	0x15, r24	; 21
		}
		
		PORT_PCD |= (1<<SCLK_PIN);
 22c:	85 b3       	in	r24, 0x15	; 21
 22e:	bd 01       	movw	r22, r26
 230:	00 84       	ldd	r0, Z+8	; 0x08
 232:	02 c0       	rjmp	.+4      	; 0x238 <_ZN7PCD85449sendToPCDEih+0xa2>
 234:	66 0f       	add	r22, r22
 236:	77 1f       	adc	r23, r23
 238:	0a 94       	dec	r0
 23a:	e2 f7       	brpl	.-8      	; 0x234 <_ZN7PCD85449sendToPCDEih+0x9e>
 23c:	68 2b       	or	r22, r24
 23e:	65 bb       	out	0x15, r22	; 21
		PORT_PCD &= ~(1<<SCLK_PIN);
 240:	55 b3       	in	r21, 0x15	; 21
 242:	bd 01       	movw	r22, r26
 244:	00 84       	ldd	r0, Z+8	; 0x08
 246:	02 c0       	rjmp	.+4      	; 0x24c <_ZN7PCD85449sendToPCDEih+0xb6>
 248:	66 0f       	add	r22, r22
 24a:	77 1f       	adc	r23, r23
 24c:	0a 94       	dec	r0
 24e:	e2 f7       	brpl	.-8      	; 0x248 <_ZN7PCD85449sendToPCDEih+0xb2>
 250:	96 2f       	mov	r25, r22
 252:	90 95       	com	r25
 254:	95 23       	and	r25, r21
 256:	95 bb       	out	0x15, r25	; 21
 258:	21 50       	subi	r18, 0x01	; 1
 25a:	31 09       	sbc	r19, r1
 25c:	38 f6       	brcc	.-114    	; 0x1ec <_ZN7PCD85449sendToPCDEih+0x56>
	}
	PORT_PCD |= (1<<SCE_PIN);
 25e:	25 b3       	in	r18, 0x15	; 21
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	02 80       	ldd	r0, Z+2	; 0x02
 266:	02 c0       	rjmp	.+4      	; 0x26c <_ZN7PCD85449sendToPCDEih+0xd6>
 268:	88 0f       	add	r24, r24
 26a:	99 1f       	adc	r25, r25
 26c:	0a 94       	dec	r0
 26e:	e2 f7       	brpl	.-8      	; 0x268 <_ZN7PCD85449sendToPCDEih+0xd2>
 270:	82 2b       	or	r24, r18
 272:	85 bb       	out	0x15, r24	; 21
	return ;
 274:	07 c0       	rjmp	.+14     	; 0x284 <_ZN7PCD85449sendToPCDEih+0xee>
	PORT_PCD |= (1<<SCE_PIN) | (1<<RST_PIN);
	PORT_PCD &= ~(1<<SCLK);
}

//Send data or command to PCD8544
void PCD8544::sendToPCD(int type, uint8_t data){
 276:	27 e0       	ldi	r18, 0x07	; 7
 278:	30 e0       	ldi	r19, 0x00	; 0
	else{
		PORT_PCD &= ~(1<<DC_PIN);
	}
	
	for (int i = 0; i < 8; i++){
		if ((data >> (7-i)) & 0x01){
 27a:	c4 2f       	mov	r28, r20
 27c:	d0 e0       	ldi	r29, 0x00	; 0
			PORT_PCD |= (1<<SDIN_PIN);
		}
		else{
			PORT_PCD &= ~(1<<SDIN_PIN);
 27e:	a1 e0       	ldi	r26, 0x01	; 1
 280:	b0 e0       	ldi	r27, 0x00	; 0
 282:	b4 cf       	rjmp	.-152    	; 0x1ec <_ZN7PCD85449sendToPCDEih+0x56>
		PORT_PCD |= (1<<SCLK_PIN);
		PORT_PCD &= ~(1<<SCLK_PIN);
	}
	PORT_PCD |= (1<<SCE_PIN);
	return ;
}
 284:	df 91       	pop	r29
 286:	cf 91       	pop	r28
 288:	08 95       	ret

0000028a <_ZN7PCD854411sendCommandEh>:

void PCD8544::sendCommand(uint8_t data){
 28a:	46 2f       	mov	r20, r22
	sendToPCD(PCD8544_CMD, data);
 28c:	60 e0       	ldi	r22, 0x00	; 0
 28e:	70 e0       	ldi	r23, 0x00	; 0
 290:	82 df       	rcall	.-252    	; 0x196 <_ZN7PCD85449sendToPCDEih>
 292:	08 95       	ret

00000294 <_ZN7PCD85448sendDataEh>:
	return ;
}

void PCD8544::sendData(uint8_t data){
 294:	46 2f       	mov	r20, r22
	sendToPCD(PCD8544_DATA, data);
 296:	61 e0       	ldi	r22, 0x01	; 1
 298:	70 e0       	ldi	r23, 0x00	; 0
 29a:	7d df       	rcall	.-262    	; 0x196 <_ZN7PCD85449sendToPCDEih>
 29c:	08 95       	ret

0000029e <_ZN7PCD85449setCursorEhh>:
}



// 0 <= x < 84; 0 <= y < 6
void PCD8544::setCursor(uint8_t x, uint8_t y){
 29e:	0f 93       	push	r16
 2a0:	1f 93       	push	r17
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	ec 01       	movw	r28, r24
 2a8:	06 2f       	mov	r16, r22
 2aa:	14 2f       	mov	r17, r20
	this->sendCommand(0x20);
 2ac:	60 e2       	ldi	r22, 0x20	; 32
 2ae:	ed df       	rcall	.-38     	; 0x28a <_ZN7PCD854411sendCommandEh>
	this->sendCommand((0x80 | x));
 2b0:	60 2f       	mov	r22, r16
 2b2:	60 68       	ori	r22, 0x80	; 128
 2b4:	ce 01       	movw	r24, r28
 2b6:	e9 df       	rcall	.-46     	; 0x28a <_ZN7PCD854411sendCommandEh>
	this->sendCommand((0x40 | y));	
 2b8:	61 2f       	mov	r22, r17
 2ba:	60 64       	ori	r22, 0x40	; 64
 2bc:	ce 01       	movw	r24, r28
 2be:	e5 df       	rcall	.-54     	; 0x28a <_ZN7PCD854411sendCommandEh>
}
 2c0:	df 91       	pop	r29
 2c2:	cf 91       	pop	r28
 2c4:	1f 91       	pop	r17
 2c6:	0f 91       	pop	r16
 2c8:	08 95       	ret

000002ca <_ZN7PCD85445resetEv>:

void PCD8544::reset(){
 2ca:	fc 01       	movw	r30, r24
	PORT_PCD |= (1<<RST_PIN) | (1<<SCE_PIN);
 2cc:	95 b3       	in	r25, 0x15	; 21
 2ce:	21 e0       	ldi	r18, 0x01	; 1
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	b9 01       	movw	r22, r18
 2d4:	00 80       	ld	r0, Z
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <_ZN7PCD85445resetEv+0x12>
 2d8:	66 0f       	add	r22, r22
 2da:	77 1f       	adc	r23, r23
 2dc:	0a 94       	dec	r0
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <_ZN7PCD85445resetEv+0xe>
 2e0:	a9 01       	movw	r20, r18
 2e2:	02 80       	ldd	r0, Z+2	; 0x02
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <_ZN7PCD85445resetEv+0x20>
 2e6:	44 0f       	add	r20, r20
 2e8:	55 1f       	adc	r21, r21
 2ea:	0a 94       	dec	r0
 2ec:	e2 f7       	brpl	.-8      	; 0x2e6 <_ZN7PCD85445resetEv+0x1c>
 2ee:	86 2f       	mov	r24, r22
 2f0:	84 2b       	or	r24, r20
 2f2:	89 2b       	or	r24, r25
 2f4:	85 bb       	out	0x15, r24	; 21
	PORT_PCD &= ~(1<<RST_PIN);
 2f6:	95 b3       	in	r25, 0x15	; 21
 2f8:	a9 01       	movw	r20, r18
 2fa:	00 80       	ld	r0, Z
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <_ZN7PCD85445resetEv+0x38>
 2fe:	44 0f       	add	r20, r20
 300:	55 1f       	adc	r21, r21
 302:	0a 94       	dec	r0
 304:	e2 f7       	brpl	.-8      	; 0x2fe <_ZN7PCD85445resetEv+0x34>
 306:	84 2f       	mov	r24, r20
 308:	80 95       	com	r24
 30a:	89 23       	and	r24, r25
 30c:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 30e:	4f e7       	ldi	r20, 0x7F	; 127
 310:	88 e3       	ldi	r24, 0x38	; 56
 312:	91 e0       	ldi	r25, 0x01	; 1
 314:	41 50       	subi	r20, 0x01	; 1
 316:	80 40       	sbci	r24, 0x00	; 0
 318:	90 40       	sbci	r25, 0x00	; 0
 31a:	e1 f7       	brne	.-8      	; 0x314 <_ZN7PCD85445resetEv+0x4a>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <_ZN7PCD85445resetEv+0x54>
 31e:	00 00       	nop
	_delay_ms(50);
	PORT_PCD |= (1<<RST_PIN);
 320:	85 b3       	in	r24, 0x15	; 21
 322:	00 80       	ld	r0, Z
 324:	02 c0       	rjmp	.+4      	; 0x32a <_ZN7PCD85445resetEv+0x60>
 326:	22 0f       	add	r18, r18
 328:	33 1f       	adc	r19, r19
 32a:	0a 94       	dec	r0
 32c:	e2 f7       	brpl	.-8      	; 0x326 <_ZN7PCD85445resetEv+0x5c>
 32e:	28 2b       	or	r18, r24
 330:	25 bb       	out	0x15, r18	; 21
 332:	08 95       	ret

00000334 <_ZN7PCD854410clearSreenEv>:
}

void PCD8544::clearSreen(){
 334:	0f 93       	push	r16
 336:	1f 93       	push	r17
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	8c 01       	movw	r16, r24
	this->setCursor(0x00, 0x00);
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	60 e0       	ldi	r22, 0x00	; 0
 342:	ad df       	rcall	.-166    	; 0x29e <_ZN7PCD85449setCursorEhh>
 344:	c8 ef       	ldi	r28, 0xF8	; 248
 346:	d1 e0       	ldi	r29, 0x01	; 1
	for (int i = 0; i < 504; i++){
		this->sendData(0x00);
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	c8 01       	movw	r24, r16
 34c:	a3 df       	rcall	.-186    	; 0x294 <_ZN7PCD85448sendDataEh>
 34e:	21 97       	sbiw	r28, 0x01	; 1
	PORT_PCD |= (1<<RST_PIN);
}

void PCD8544::clearSreen(){
	this->setCursor(0x00, 0x00);
	for (int i = 0; i < 504; i++){
 350:	d9 f7       	brne	.-10     	; 0x348 <_ZN7PCD854410clearSreenEv+0x14>
		this->sendData(0x00);
	}
}
 352:	df 91       	pop	r29
 354:	cf 91       	pop	r28
 356:	1f 91       	pop	r17
 358:	0f 91       	pop	r16
 35a:	08 95       	ret

0000035c <_ZN7PCD85445beginEv>:

//Initial for display in LCD
void PCD8544::begin(){
 35c:	cf 93       	push	r28
 35e:	df 93       	push	r29
 360:	ec 01       	movw	r28, r24
	this->reset();
 362:	b3 df       	rcall	.-154    	; 0x2ca <_ZN7PCD85445resetEv>
	
	this->sendCommand(0x20 | 0x01); //H = 1
 364:	61 e2       	ldi	r22, 0x21	; 33
 366:	ce 01       	movw	r24, r28
 368:	90 df       	rcall	.-224    	; 0x28a <_ZN7PCD854411sendCommandEh>
	this->sendCommand(0x01 | 0x03); //Bias 1:48
 36a:	63 e0       	ldi	r22, 0x03	; 3
 36c:	ce 01       	movw	r24, r28
 36e:	8d df       	rcall	.-230    	; 0x28a <_ZN7PCD854411sendCommandEh>
	this->sendCommand(0x80 | 0xC5); //Set contrast
 370:	65 ec       	ldi	r22, 0xC5	; 197
 372:	ce 01       	movw	r24, r28
 374:	8a df       	rcall	.-236    	; 0x28a <_ZN7PCD854411sendCommandEh>
	this->sendCommand(0x04 | 0x00); //Temp C
 376:	64 e0       	ldi	r22, 0x04	; 4
 378:	ce 01       	movw	r24, r28
 37a:	87 df       	rcall	.-242    	; 0x28a <_ZN7PCD854411sendCommandEh>
	
	this->sendCommand(0x20 | 0x00); //H = 0
 37c:	60 e2       	ldi	r22, 0x20	; 32
 37e:	ce 01       	movw	r24, r28
 380:	84 df       	rcall	.-248    	; 0x28a <_ZN7PCD854411sendCommandEh>
	this->sendCommand(0x08 | 0x04); //Normal Mode
 382:	6c e0       	ldi	r22, 0x0C	; 12
 384:	ce 01       	movw	r24, r28
 386:	81 df       	rcall	.-254    	; 0x28a <_ZN7PCD854411sendCommandEh>
	this->sendCommand(0x80 | 0x00); //x-address = 0
 388:	60 e8       	ldi	r22, 0x80	; 128
 38a:	ce 01       	movw	r24, r28
 38c:	7e df       	rcall	.-260    	; 0x28a <_ZN7PCD854411sendCommandEh>
	this->sendCommand(0x40 | 0x00); //y-address = 0
 38e:	60 e4       	ldi	r22, 0x40	; 64
 390:	ce 01       	movw	r24, r28
 392:	7b df       	rcall	.-266    	; 0x28a <_ZN7PCD854411sendCommandEh>
	
	this->clearSreen();
 394:	ce 01       	movw	r24, r28
 396:	ce df       	rcall	.-100    	; 0x334 <_ZN7PCD854410clearSreenEv>
}
 398:	df 91       	pop	r29
 39a:	cf 91       	pop	r28
 39c:	08 95       	ret

0000039e <_ZN7PCD854411charDisplayEic>:

//Display a single character
void PCD8544::charDisplay(int isReverse, char data){
 39e:	df 92       	push	r13
 3a0:	ef 92       	push	r14
 3a2:	ff 92       	push	r15
 3a4:	0f 93       	push	r16
 3a6:	1f 93       	push	r17
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	8c 01       	movw	r16, r24
	register uint8_t reverse;
	if (isReverse){
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	67 2b       	or	r22, r23
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <_ZN7PCD854411charDisplayEic+0x18>
 3b4:	80 e0       	ldi	r24, 0x00	; 0
 3b6:	d8 2e       	mov	r13, r24
 3b8:	d1 94       	neg	r13
 3ba:	50 e0       	ldi	r21, 0x00	; 0
 3bc:	ea 01       	movw	r28, r20
 3be:	cc 0f       	add	r28, r28
 3c0:	dd 1f       	adc	r29, r29
 3c2:	cc 0f       	add	r28, r28
 3c4:	dd 1f       	adc	r29, r29
 3c6:	4c 0f       	add	r20, r28
 3c8:	5d 1f       	adc	r21, r29
 3ca:	ea 01       	movw	r28, r20
 3cc:	c1 50       	subi	r28, 0x01	; 1
 3ce:	d0 40       	sbci	r29, 0x00	; 0
	}
	else{
		reverse = 0x00;
	}
	
	for (int i = 0; i < 5; i++){
 3d0:	e1 2c       	mov	r14, r1
 3d2:	f1 2c       	mov	r15, r1
		this->sendData((CHARSET[int(data) - 0x20][i]) ^ reverse);
 3d4:	69 91       	ld	r22, Y+
 3d6:	6d 25       	eor	r22, r13
 3d8:	c8 01       	movw	r24, r16
 3da:	5c df       	rcall	.-328    	; 0x294 <_ZN7PCD85448sendDataEh>
	}
	else{
		reverse = 0x00;
	}
	
	for (int i = 0; i < 5; i++){
 3dc:	8f ef       	ldi	r24, 0xFF	; 255
 3de:	e8 1a       	sub	r14, r24
 3e0:	f8 0a       	sbc	r15, r24
 3e2:	85 e0       	ldi	r24, 0x05	; 5
 3e4:	e8 16       	cp	r14, r24
 3e6:	f1 04       	cpc	r15, r1
 3e8:	a9 f7       	brne	.-22     	; 0x3d4 <_ZN7PCD854411charDisplayEic+0x36>
		this->sendData((CHARSET[int(data) - 0x20][i]) ^ reverse);
	}
	this->sendData(reverse);
 3ea:	6d 2d       	mov	r22, r13
 3ec:	c8 01       	movw	r24, r16
 3ee:	52 df       	rcall	.-348    	; 0x294 <_ZN7PCD85448sendDataEh>
}
 3f0:	df 91       	pop	r29
 3f2:	cf 91       	pop	r28
 3f4:	1f 91       	pop	r17
 3f6:	0f 91       	pop	r16
 3f8:	ff 90       	pop	r15
 3fa:	ef 90       	pop	r14
 3fc:	df 90       	pop	r13
 3fe:	08 95       	ret

00000400 <_ZN7PCD854411lineDisplayEiPc>:

//Display a line of LCD
void PCD8544::lineDisplay(int isReverse, char *data){
 400:	9f 92       	push	r9
 402:	af 92       	push	r10
 404:	bf 92       	push	r11
 406:	cf 92       	push	r12
 408:	df 92       	push	r13
 40a:	ef 92       	push	r14
 40c:	ff 92       	push	r15
 40e:	0f 93       	push	r16
 410:	1f 93       	push	r17
 412:	cf 93       	push	r28
 414:	df 93       	push	r29
 416:	7c 01       	movw	r14, r24
 418:	6b 01       	movw	r12, r22
	register uint8_t space;
	if (isReverse){
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	67 2b       	or	r22, r23
 41e:	09 f4       	brne	.+2      	; 0x422 <_ZN7PCD854411lineDisplayEiPc+0x22>
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	98 2e       	mov	r9, r24
 424:	91 94       	neg	r9
	}
	
	//Get string's length
	register int i = 0;
	register int length = 0;
	while (data[i]){
 426:	fa 01       	movw	r30, r20
 428:	80 81       	ld	r24, Z
 42a:	88 23       	and	r24, r24
 42c:	61 f1       	breq	.+88     	; 0x486 <__stack+0x27>
 42e:	31 96       	adiw	r30, 0x01	; 1
 430:	80 e0       	ldi	r24, 0x00	; 0
 432:	90 e0       	ldi	r25, 0x00	; 0
		length++;
 434:	01 96       	adiw	r24, 0x01	; 1
	}
	
	//Get string's length
	register int i = 0;
	register int length = 0;
	while (data[i]){
 436:	21 91       	ld	r18, Z+
 438:	21 11       	cpse	r18, r1
 43a:	fc cf       	rjmp	.-8      	; 0x434 <_ZN7PCD854411lineDisplayEiPc+0x34>
 43c:	8c 01       	movw	r16, r24
 43e:	0f 97       	sbiw	r24, 0x0f	; 15
 440:	14 f0       	brlt	.+4      	; 0x446 <_ZN7PCD854411lineDisplayEiPc+0x46>
 442:	0e e0       	ldi	r16, 0x0E	; 14
 444:	10 e0       	ldi	r17, 0x00	; 0
		i++;
	}
	if (length > 14){
		length = 14;
	}
	for (i = 0; i < length; i++){
 446:	10 16       	cp	r1, r16
 448:	11 06       	cpc	r1, r17
 44a:	8c f0       	brlt	.+34     	; 0x46e <__stack+0xf>
		this->charDisplay(isReverse, data[i]);
	}
	for (i = 0; i < (14 - length)*6 ; i++){
 44c:	8e e0       	ldi	r24, 0x0E	; 14
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	9c 01       	movw	r18, r24
 452:	20 1b       	sub	r18, r16
 454:	31 0b       	sbc	r19, r17
 456:	89 01       	movw	r16, r18
 458:	c9 01       	movw	r24, r18
 45a:	88 0f       	add	r24, r24
 45c:	99 1f       	adc	r25, r25
 45e:	08 0f       	add	r16, r24
 460:	19 1f       	adc	r17, r25
 462:	00 0f       	add	r16, r16
 464:	11 1f       	adc	r17, r17
 466:	10 16       	cp	r1, r16
 468:	11 06       	cpc	r1, r17
 46a:	7c f0       	brlt	.+30     	; 0x48a <__stack+0x2b>
 46c:	17 c0       	rjmp	.+46     	; 0x49c <__stack+0x3d>
 46e:	ea 01       	movw	r28, r20
 470:	5a 01       	movw	r10, r20
 472:	a0 0e       	add	r10, r16
 474:	b1 1e       	adc	r11, r17
	}
	if (length > 14){
		length = 14;
	}
	for (i = 0; i < length; i++){
		this->charDisplay(isReverse, data[i]);
 476:	49 91       	ld	r20, Y+
 478:	b6 01       	movw	r22, r12
 47a:	c7 01       	movw	r24, r14
 47c:	90 df       	rcall	.-224    	; 0x39e <_ZN7PCD854411charDisplayEic>
		i++;
	}
	if (length > 14){
		length = 14;
	}
	for (i = 0; i < length; i++){
 47e:	ca 15       	cp	r28, r10
 480:	db 05       	cpc	r29, r11
 482:	c9 f7       	brne	.-14     	; 0x476 <__stack+0x17>
 484:	e3 cf       	rjmp	.-58     	; 0x44c <_ZN7PCD854411lineDisplayEiPc+0x4c>
		this->charDisplay(isReverse, data[i]);
	}
	for (i = 0; i < (14 - length)*6 ; i++){
 486:	04 e5       	ldi	r16, 0x54	; 84
 488:	10 e0       	ldi	r17, 0x00	; 0
 48a:	c0 e0       	ldi	r28, 0x00	; 0
 48c:	d0 e0       	ldi	r29, 0x00	; 0
		this->sendData(space);
 48e:	69 2d       	mov	r22, r9
 490:	c7 01       	movw	r24, r14
 492:	00 df       	rcall	.-512    	; 0x294 <_ZN7PCD85448sendDataEh>
		length = 14;
	}
	for (i = 0; i < length; i++){
		this->charDisplay(isReverse, data[i]);
	}
	for (i = 0; i < (14 - length)*6 ; i++){
 494:	21 96       	adiw	r28, 0x01	; 1
 496:	0c 17       	cp	r16, r28
 498:	1d 07       	cpc	r17, r29
 49a:	c9 f7       	brne	.-14     	; 0x48e <__stack+0x2f>
		this->sendData(space);
	}
}
 49c:	df 91       	pop	r29
 49e:	cf 91       	pop	r28
 4a0:	1f 91       	pop	r17
 4a2:	0f 91       	pop	r16
 4a4:	ff 90       	pop	r15
 4a6:	ef 90       	pop	r14
 4a8:	df 90       	pop	r13
 4aa:	cf 90       	pop	r12
 4ac:	bf 90       	pop	r11
 4ae:	af 90       	pop	r10
 4b0:	9f 90       	pop	r9
 4b2:	08 95       	ret

000004b4 <_ZN7PCD854410createMenuEPcPA14_ci>:

void PCD8544::createMenu(char *name, char data[][14], int length){
 4b4:	cf 93       	push	r28
 4b6:	df 93       	push	r29
 4b8:	ec 01       	movw	r28, r24
	this->pointer = 0;
 4ba:	1b 86       	std	Y+11, r1	; 0x0b
 4bc:	1a 86       	std	Y+10, r1	; 0x0a
	this->current = 0;
 4be:	1d 86       	std	Y+13, r1	; 0x0d
 4c0:	1c 86       	std	Y+12, r1	; 0x0c
	this->lenOfMenu = length;
 4c2:	3f 87       	std	Y+15, r19	; 0x0f
 4c4:	2e 87       	std	Y+14, r18	; 0x0e
 4c6:	a6 2f       	mov	r26, r22
 4c8:	b7 2f       	mov	r27, r23
 4ca:	fc 01       	movw	r30, r24
 4cc:	70 96       	adiw	r30, 0x10	; 16
 4ce:	bc 01       	movw	r22, r24
 4d0:	62 5e       	subi	r22, 0xE2	; 226
 4d2:	7f 4f       	sbci	r23, 0xFF	; 255
	for (int i = 0; i < 14; i++){
		if (name[i]){
			title[i] = name[i];
		}
		else{
			title[i] = ' ';
 4d4:	90 e2       	ldi	r25, 0x20	; 32
 4d6:	04 c0       	rjmp	.+8      	; 0x4e0 <_ZN7PCD854410createMenuEPcPA14_ci+0x2c>
		}
	}
	
	for (int i = 0; i < lenOfMenu; i++){
 4d8:	12 16       	cp	r1, r18
 4da:	13 06       	cpc	r1, r19
 4dc:	64 f0       	brlt	.+24     	; 0x4f6 <_ZN7PCD854410createMenuEPcPA14_ci+0x42>
 4de:	2f c0       	rjmp	.+94     	; 0x53e <_ZN7PCD854410createMenuEPcPA14_ci+0x8a>
	this->pointer = 0;
	this->current = 0;
	this->lenOfMenu = length;
	
	for (int i = 0; i < 14; i++){
		if (name[i]){
 4e0:	8d 91       	ld	r24, X+
 4e2:	88 23       	and	r24, r24
 4e4:	11 f0       	breq	.+4      	; 0x4ea <_ZN7PCD854410createMenuEPcPA14_ci+0x36>
			title[i] = name[i];
 4e6:	80 83       	st	Z, r24
 4e8:	01 c0       	rjmp	.+2      	; 0x4ec <_ZN7PCD854410createMenuEPcPA14_ci+0x38>
		}
		else{
			title[i] = ' ';
 4ea:	90 83       	st	Z, r25
 4ec:	31 96       	adiw	r30, 0x01	; 1
void PCD8544::createMenu(char *name, char data[][14], int length){
	this->pointer = 0;
	this->current = 0;
	this->lenOfMenu = length;
	
	for (int i = 0; i < 14; i++){
 4ee:	6e 17       	cp	r22, r30
 4f0:	7f 07       	cpc	r23, r31
 4f2:	b1 f7       	brne	.-20     	; 0x4e0 <_ZN7PCD854410createMenuEPcPA14_ci+0x2c>
 4f4:	f1 cf       	rjmp	.-30     	; 0x4d8 <_ZN7PCD854410createMenuEPcPA14_ci+0x24>
 4f6:	fa 01       	movw	r30, r20
 4f8:	22 0f       	add	r18, r18
 4fa:	33 1f       	adc	r19, r19
 4fc:	c9 01       	movw	r24, r18
 4fe:	88 0f       	add	r24, r24
 500:	99 1f       	adc	r25, r25
 502:	88 0f       	add	r24, r24
 504:	99 1f       	adc	r25, r25
 506:	88 0f       	add	r24, r24
 508:	99 1f       	adc	r25, r25
 50a:	82 1b       	sub	r24, r18
 50c:	93 0b       	sbc	r25, r19
 50e:	ea 01       	movw	r28, r20
 510:	c8 0f       	add	r28, r24
 512:	d9 1f       	adc	r29, r25
		for (int j = 0; j < 14; j++){
			if (data[i][j]){
				Menu[i][j] = data[i][j];
			}
			else{
				Menu[i][j] = ' ';
 514:	50 e2       	ldi	r21, 0x20	; 32
 516:	9f 01       	movw	r18, r30
 518:	22 5f       	subi	r18, 0xF2	; 242
 51a:	3f 4f       	sbci	r19, 0xFF	; 255
	for (i = 0; i < (14 - length)*6 ; i++){
		this->sendData(space);
	}
}

void PCD8544::createMenu(char *name, char data[][14], int length){
 51c:	db 01       	movw	r26, r22
		}
	}
	
	for (int i = 0; i < lenOfMenu; i++){
		for (int j = 0; j < 14; j++){
			if (data[i][j]){
 51e:	91 91       	ld	r25, Z+
 520:	99 23       	and	r25, r25
 522:	11 f0       	breq	.+4      	; 0x528 <_ZN7PCD854410createMenuEPcPA14_ci+0x74>
				Menu[i][j] = data[i][j];
 524:	9c 93       	st	X, r25
 526:	01 c0       	rjmp	.+2      	; 0x52a <_ZN7PCD854410createMenuEPcPA14_ci+0x76>
			}
			else{
				Menu[i][j] = ' ';
 528:	5c 93       	st	X, r21
 52a:	11 96       	adiw	r26, 0x01	; 1
			title[i] = ' ';
		}
	}
	
	for (int i = 0; i < lenOfMenu; i++){
		for (int j = 0; j < 14; j++){
 52c:	e2 17       	cp	r30, r18
 52e:	f3 07       	cpc	r31, r19
 530:	b1 f7       	brne	.-20     	; 0x51e <_ZN7PCD854410createMenuEPcPA14_ci+0x6a>
 532:	62 5f       	subi	r22, 0xF2	; 242
 534:	7f 4f       	sbci	r23, 0xFF	; 255
 536:	f9 01       	movw	r30, r18
		else{
			title[i] = ' ';
		}
	}
	
	for (int i = 0; i < lenOfMenu; i++){
 538:	c2 17       	cp	r28, r18
 53a:	d3 07       	cpc	r29, r19
 53c:	61 f7       	brne	.-40     	; 0x516 <_ZN7PCD854410createMenuEPcPA14_ci+0x62>
			else{
				Menu[i][j] = ' ';
			}
		}
	}
}
 53e:	df 91       	pop	r29
 540:	cf 91       	pop	r28
 542:	08 95       	ret

00000544 <_ZN7PCD854411displayMenuEv>:

void PCD8544::displayMenu(){
 544:	cf 92       	push	r12
 546:	df 92       	push	r13
 548:	ff 92       	push	r15
 54a:	0f 93       	push	r16
 54c:	1f 93       	push	r17
 54e:	cf 93       	push	r28
 550:	df 93       	push	r29
 552:	ec 01       	movw	r28, r24
	this->setCursor(0, 0);
 554:	40 e0       	ldi	r20, 0x00	; 0
 556:	60 e0       	ldi	r22, 0x00	; 0
 558:	a2 de       	rcall	.-700    	; 0x29e <_ZN7PCD85449setCursorEhh>
	this->lineDisplay(NON_REVERSE, title);
 55a:	ae 01       	movw	r20, r28
 55c:	40 5f       	subi	r20, 0xF0	; 240
 55e:	5f 4f       	sbci	r21, 0xFF	; 255
 560:	60 e0       	ldi	r22, 0x00	; 0
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	ce 01       	movw	r24, r28
 566:	4c df       	rcall	.-360    	; 0x400 <_ZN7PCD854411lineDisplayEiPc>
	
	register int i;
	if (lenOfMenu < 5){
 568:	ce 84       	ldd	r12, Y+14	; 0x0e
 56a:	df 84       	ldd	r13, Y+15	; 0x0f
 56c:	85 e0       	ldi	r24, 0x05	; 5
 56e:	c8 16       	cp	r12, r24
 570:	d1 04       	cpc	r13, r1
 572:	0c f0       	brlt	.+2      	; 0x576 <_ZN7PCD854411displayMenuEv+0x32>
 574:	46 c0       	rjmp	.+140    	; 0x602 <_ZN7PCD854411displayMenuEv+0xbe>
		for (i = 0; i < lenOfMenu; i++){
 576:	1c 14       	cp	r1, r12
 578:	1d 04       	cpc	r1, r13
 57a:	74 f5       	brge	.+92     	; 0x5d8 <_ZN7PCD854411displayMenuEv+0x94>
 57c:	ff 24       	eor	r15, r15
 57e:	f3 94       	inc	r15
 580:	00 e0       	ldi	r16, 0x00	; 0
 582:	10 e0       	ldi	r17, 0x00	; 0
 584:	05 c0       	rjmp	.+10     	; 0x590 <_ZN7PCD854411displayMenuEv+0x4c>
			this->setCursor(0, i + 1);
			this->lineDisplay(NON_REVERSE, Menu[current + i]);
		}
		for(i = lenOfMenu; i < 5; i++){
 586:	85 e0       	ldi	r24, 0x05	; 5
 588:	c8 16       	cp	r12, r24
 58a:	d1 04       	cpc	r13, r1
 58c:	2c f1       	brlt	.+74     	; 0x5d8 <_ZN7PCD854411displayMenuEv+0x94>
 58e:	5e c0       	rjmp	.+188    	; 0x64c <_ZN7PCD854411displayMenuEv+0x108>
	this->lineDisplay(NON_REVERSE, title);
	
	register int i;
	if (lenOfMenu < 5){
		for (i = 0; i < lenOfMenu; i++){
			this->setCursor(0, i + 1);
 590:	4f 2d       	mov	r20, r15
 592:	60 e0       	ldi	r22, 0x00	; 0
 594:	ce 01       	movw	r24, r28
 596:	83 de       	rcall	.-762    	; 0x29e <_ZN7PCD85449setCursorEhh>
			this->lineDisplay(NON_REVERSE, Menu[current + i]);
 598:	8c 85       	ldd	r24, Y+12	; 0x0c
 59a:	9d 85       	ldd	r25, Y+13	; 0x0d
 59c:	80 0f       	add	r24, r16
 59e:	91 1f       	adc	r25, r17
 5a0:	88 0f       	add	r24, r24
 5a2:	99 1f       	adc	r25, r25
 5a4:	ac 01       	movw	r20, r24
 5a6:	44 0f       	add	r20, r20
 5a8:	55 1f       	adc	r21, r21
 5aa:	44 0f       	add	r20, r20
 5ac:	55 1f       	adc	r21, r21
 5ae:	44 0f       	add	r20, r20
 5b0:	55 1f       	adc	r21, r21
 5b2:	48 1b       	sub	r20, r24
 5b4:	59 0b       	sbc	r21, r25
 5b6:	42 5e       	subi	r20, 0xE2	; 226
 5b8:	5f 4f       	sbci	r21, 0xFF	; 255
 5ba:	4c 0f       	add	r20, r28
 5bc:	5d 1f       	adc	r21, r29
 5be:	60 e0       	ldi	r22, 0x00	; 0
 5c0:	70 e0       	ldi	r23, 0x00	; 0
 5c2:	ce 01       	movw	r24, r28
 5c4:	1d df       	rcall	.-454    	; 0x400 <_ZN7PCD854411lineDisplayEiPc>
	this->setCursor(0, 0);
	this->lineDisplay(NON_REVERSE, title);
	
	register int i;
	if (lenOfMenu < 5){
		for (i = 0; i < lenOfMenu; i++){
 5c6:	0f 5f       	subi	r16, 0xFF	; 255
 5c8:	1f 4f       	sbci	r17, 0xFF	; 255
 5ca:	ce 84       	ldd	r12, Y+14	; 0x0e
 5cc:	df 84       	ldd	r13, Y+15	; 0x0f
 5ce:	f3 94       	inc	r15
 5d0:	0c 15       	cp	r16, r12
 5d2:	1d 05       	cpc	r17, r13
 5d4:	ec f2       	brlt	.-70     	; 0x590 <_ZN7PCD854411displayMenuEv+0x4c>
 5d6:	d7 cf       	rjmp	.-82     	; 0x586 <_ZN7PCD854411displayMenuEv+0x42>
 5d8:	11 e0       	ldi	r17, 0x01	; 1
 5da:	1c 0d       	add	r17, r12
			this->setCursor(0, i + 1);
			this->lineDisplay(NON_REVERSE, Menu[current + i]);
		}
		for(i = lenOfMenu; i < 5; i++){
			this->setCursor(0, i + 1);
 5dc:	41 2f       	mov	r20, r17
 5de:	60 e0       	ldi	r22, 0x00	; 0
 5e0:	ce 01       	movw	r24, r28
 5e2:	5d de       	rcall	.-838    	; 0x29e <_ZN7PCD85449setCursorEhh>
			this->lineDisplay(NON_REVERSE, " ");
 5e4:	4d e9       	ldi	r20, 0x9D	; 157
 5e6:	50 e0       	ldi	r21, 0x00	; 0
 5e8:	60 e0       	ldi	r22, 0x00	; 0
 5ea:	70 e0       	ldi	r23, 0x00	; 0
 5ec:	ce 01       	movw	r24, r28
 5ee:	08 df       	rcall	.-496    	; 0x400 <_ZN7PCD854411lineDisplayEiPc>
	if (lenOfMenu < 5){
		for (i = 0; i < lenOfMenu; i++){
			this->setCursor(0, i + 1);
			this->lineDisplay(NON_REVERSE, Menu[current + i]);
		}
		for(i = lenOfMenu; i < 5; i++){
 5f0:	8f ef       	ldi	r24, 0xFF	; 255
 5f2:	c8 1a       	sub	r12, r24
 5f4:	d8 0a       	sbc	r13, r24
 5f6:	1f 5f       	subi	r17, 0xFF	; 255
 5f8:	85 e0       	ldi	r24, 0x05	; 5
 5fa:	c8 16       	cp	r12, r24
 5fc:	d1 04       	cpc	r13, r1
 5fe:	74 f3       	brlt	.-36     	; 0x5dc <_ZN7PCD854411displayMenuEv+0x98>
 600:	25 c0       	rjmp	.+74     	; 0x64c <_ZN7PCD854411displayMenuEv+0x108>
 602:	ff 24       	eor	r15, r15
 604:	f3 94       	inc	r15
 606:	00 e0       	ldi	r16, 0x00	; 0
 608:	10 e0       	ldi	r17, 0x00	; 0
			this->lineDisplay(NON_REVERSE, " ");
		}
	}
	else{
		for (i = 0; i < 5; i++){
			this->setCursor(0, i + 1);
 60a:	4f 2d       	mov	r20, r15
 60c:	60 e0       	ldi	r22, 0x00	; 0
 60e:	ce 01       	movw	r24, r28
 610:	46 de       	rcall	.-884    	; 0x29e <_ZN7PCD85449setCursorEhh>
			this->lineDisplay(NON_REVERSE, Menu[current + i]);
 612:	8c 85       	ldd	r24, Y+12	; 0x0c
 614:	9d 85       	ldd	r25, Y+13	; 0x0d
 616:	80 0f       	add	r24, r16
 618:	91 1f       	adc	r25, r17
 61a:	88 0f       	add	r24, r24
 61c:	99 1f       	adc	r25, r25
 61e:	ac 01       	movw	r20, r24
 620:	44 0f       	add	r20, r20
 622:	55 1f       	adc	r21, r21
 624:	44 0f       	add	r20, r20
 626:	55 1f       	adc	r21, r21
 628:	44 0f       	add	r20, r20
 62a:	55 1f       	adc	r21, r21
 62c:	48 1b       	sub	r20, r24
 62e:	59 0b       	sbc	r21, r25
 630:	42 5e       	subi	r20, 0xE2	; 226
 632:	5f 4f       	sbci	r21, 0xFF	; 255
 634:	4c 0f       	add	r20, r28
 636:	5d 1f       	adc	r21, r29
 638:	60 e0       	ldi	r22, 0x00	; 0
 63a:	70 e0       	ldi	r23, 0x00	; 0
 63c:	ce 01       	movw	r24, r28
 63e:	e0 de       	rcall	.-576    	; 0x400 <_ZN7PCD854411lineDisplayEiPc>
			this->setCursor(0, i + 1);
			this->lineDisplay(NON_REVERSE, " ");
		}
	}
	else{
		for (i = 0; i < 5; i++){
 640:	0f 5f       	subi	r16, 0xFF	; 255
 642:	1f 4f       	sbci	r17, 0xFF	; 255
 644:	f3 94       	inc	r15
 646:	86 e0       	ldi	r24, 0x06	; 6
 648:	f8 12       	cpse	r15, r24
 64a:	df cf       	rjmp	.-66     	; 0x60a <_ZN7PCD854411displayMenuEv+0xc6>
			this->setCursor(0, i + 1);
			this->lineDisplay(NON_REVERSE, Menu[current + i]);
		}
	}
	this->setCursor(0, (pointer - current) + 1);
 64c:	4a 85       	ldd	r20, Y+10	; 0x0a
 64e:	4f 5f       	subi	r20, 0xFF	; 255
 650:	8c 85       	ldd	r24, Y+12	; 0x0c
 652:	48 1b       	sub	r20, r24
 654:	60 e0       	ldi	r22, 0x00	; 0
 656:	ce 01       	movw	r24, r28
 658:	22 de       	rcall	.-956    	; 0x29e <_ZN7PCD85449setCursorEhh>
	lineDisplay(REVERSE, Menu[pointer]);
 65a:	8a 85       	ldd	r24, Y+10	; 0x0a
 65c:	9b 85       	ldd	r25, Y+11	; 0x0b
 65e:	88 0f       	add	r24, r24
 660:	99 1f       	adc	r25, r25
 662:	ac 01       	movw	r20, r24
 664:	44 0f       	add	r20, r20
 666:	55 1f       	adc	r21, r21
 668:	44 0f       	add	r20, r20
 66a:	55 1f       	adc	r21, r21
 66c:	44 0f       	add	r20, r20
 66e:	55 1f       	adc	r21, r21
 670:	48 1b       	sub	r20, r24
 672:	59 0b       	sbc	r21, r25
 674:	42 5e       	subi	r20, 0xE2	; 226
 676:	5f 4f       	sbci	r21, 0xFF	; 255
 678:	4c 0f       	add	r20, r28
 67a:	5d 1f       	adc	r21, r29
 67c:	61 e0       	ldi	r22, 0x01	; 1
 67e:	70 e0       	ldi	r23, 0x00	; 0
 680:	ce 01       	movw	r24, r28
 682:	be de       	rcall	.-644    	; 0x400 <_ZN7PCD854411lineDisplayEiPc>
}
 684:	df 91       	pop	r29
 686:	cf 91       	pop	r28
 688:	1f 91       	pop	r17
 68a:	0f 91       	pop	r16
 68c:	ff 90       	pop	r15
 68e:	df 90       	pop	r13
 690:	cf 90       	pop	r12
 692:	08 95       	ret

00000694 <_ZN7PCD854415increasePointerEv>:

void PCD8544::increasePointer(){
	if ((pointer + 1) < lenOfMenu){
 694:	fc 01       	movw	r30, r24
 696:	22 85       	ldd	r18, Z+10	; 0x0a
 698:	33 85       	ldd	r19, Z+11	; 0x0b
 69a:	2f 5f       	subi	r18, 0xFF	; 255
 69c:	3f 4f       	sbci	r19, 0xFF	; 255
 69e:	46 85       	ldd	r20, Z+14	; 0x0e
 6a0:	57 85       	ldd	r21, Z+15	; 0x0f
 6a2:	24 17       	cp	r18, r20
 6a4:	35 07       	cpc	r19, r21
 6a6:	94 f4       	brge	.+36     	; 0x6cc <_ZN7PCD854415increasePointerEv+0x38>
		pointer++;
 6a8:	33 87       	std	Z+11, r19	; 0x0b
 6aa:	22 87       	std	Z+10, r18	; 0x0a
		if (((lenOfMenu - current ) > 5) && ((pointer - current) == 5)){
 6ac:	64 85       	ldd	r22, Z+12	; 0x0c
 6ae:	75 85       	ldd	r23, Z+13	; 0x0d
 6b0:	46 1b       	sub	r20, r22
 6b2:	57 0b       	sbc	r21, r23
 6b4:	46 30       	cpi	r20, 0x06	; 6
 6b6:	51 05       	cpc	r21, r1
 6b8:	4c f0       	brlt	.+18     	; 0x6cc <_ZN7PCD854415increasePointerEv+0x38>
 6ba:	26 1b       	sub	r18, r22
 6bc:	37 0b       	sbc	r19, r23
 6be:	25 30       	cpi	r18, 0x05	; 5
 6c0:	31 05       	cpc	r19, r1
 6c2:	21 f4       	brne	.+8      	; 0x6cc <_ZN7PCD854415increasePointerEv+0x38>
			current++;
 6c4:	6f 5f       	subi	r22, 0xFF	; 255
 6c6:	7f 4f       	sbci	r23, 0xFF	; 255
 6c8:	75 87       	std	Z+13, r23	; 0x0d
 6ca:	64 87       	std	Z+12, r22	; 0x0c
		}
	}
	displayMenu();
 6cc:	3b df       	rcall	.-394    	; 0x544 <_ZN7PCD854411displayMenuEv>
 6ce:	08 95       	ret

000006d0 <_ZN7PCD854415decreasePointerEv>:
}

void PCD8544::decreasePointer(){
	if (pointer > 0){
 6d0:	fc 01       	movw	r30, r24
 6d2:	22 85       	ldd	r18, Z+10	; 0x0a
 6d4:	33 85       	ldd	r19, Z+11	; 0x0b
 6d6:	12 16       	cp	r1, r18
 6d8:	13 06       	cpc	r1, r19
 6da:	a4 f4       	brge	.+40     	; 0x704 <_ZN7PCD854415decreasePointerEv+0x34>
		pointer--;
 6dc:	21 50       	subi	r18, 0x01	; 1
 6de:	31 09       	sbc	r19, r1
 6e0:	33 87       	std	Z+11, r19	; 0x0b
 6e2:	22 87       	std	Z+10, r18	; 0x0a
		if (((lenOfMenu - pointer) > 4) && (pointer < current)){
 6e4:	46 85       	ldd	r20, Z+14	; 0x0e
 6e6:	57 85       	ldd	r21, Z+15	; 0x0f
 6e8:	42 1b       	sub	r20, r18
 6ea:	53 0b       	sbc	r21, r19
 6ec:	45 30       	cpi	r20, 0x05	; 5
 6ee:	51 05       	cpc	r21, r1
 6f0:	4c f0       	brlt	.+18     	; 0x704 <_ZN7PCD854415decreasePointerEv+0x34>
 6f2:	44 85       	ldd	r20, Z+12	; 0x0c
 6f4:	55 85       	ldd	r21, Z+13	; 0x0d
 6f6:	24 17       	cp	r18, r20
 6f8:	35 07       	cpc	r19, r21
 6fa:	24 f4       	brge	.+8      	; 0x704 <_ZN7PCD854415decreasePointerEv+0x34>
			current--;
 6fc:	41 50       	subi	r20, 0x01	; 1
 6fe:	51 09       	sbc	r21, r1
 700:	55 87       	std	Z+13, r21	; 0x0d
 702:	44 87       	std	Z+12, r20	; 0x0c
		}
	}
	displayMenu();
 704:	1f df       	rcall	.-450    	; 0x544 <_ZN7PCD854411displayMenuEv>
 706:	08 95       	ret

00000708 <__tablejump2__>:
 708:	ee 0f       	add	r30, r30
 70a:	ff 1f       	adc	r31, r31
 70c:	05 90       	lpm	r0, Z+
 70e:	f4 91       	lpm	r31, Z
 710:	e0 2d       	mov	r30, r0
 712:	09 94       	ijmp

00000714 <_exit>:
 714:	f8 94       	cli

00000716 <__stop_program>:
 716:	ff cf       	rjmp	.-2      	; 0x716 <__stop_program>
